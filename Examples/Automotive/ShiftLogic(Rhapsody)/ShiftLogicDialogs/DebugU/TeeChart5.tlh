// Created by Microsoft (R) C/C++ Compiler Version 12.00.8964.0 (f91937cd).
//
// c:\distcomponents\shiftlogic\shiftlogicdialogs\debugu\TeeChart5.tlh
//
// C++ source equivalent of Win32 type library TeeChart5.ocx
// compiler-generated file created 06/10/03 at 22:30:22 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

//
// Forward references and typedefs
//

struct __declspec(uuid("b6c10485-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITChart;
struct __declspec(uuid("b6c10487-fb89-11d4-93c9-006008a7eed4"))
/* dispinterface */ ITChartEvents;
struct /* coclass */ TChart;
struct __declspec(uuid("b6c1048b-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPen;
struct __declspec(uuid("b6c1048d-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IBrush;
struct __declspec(uuid("b6c1048e-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IStrings;
struct __declspec(uuid("b6c1048f-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICanvas;
struct __declspec(uuid("b6c10490-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAspect;
struct __declspec(uuid("b6c10491-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAxes;
struct __declspec(uuid("b6c104c6-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAxis;
struct __declspec(uuid("b6c10493-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAxisLabels;
struct __declspec(uuid("b6c10494-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAxisTitle;
struct __declspec(uuid("b6c10495-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeCustomShape;
struct __declspec(uuid("b6c10496-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IExport;
struct __declspec(uuid("b6c10497-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IImport;
struct __declspec(uuid("b6c104a3-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IScroll;
struct __declspec(uuid("b6c104a4-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IZoom;
struct __declspec(uuid("b6c104a5-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPrinter;
struct __declspec(uuid("b6c104a6-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IWall;
struct __declspec(uuid("b6c104a7-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IWalls;
struct __declspec(uuid("e517cb2c-1c48-11d5-9400-006008a7eed4"))
/* dual interface */ ITeeShapePosition;
struct __declspec(uuid("b6c104a9-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IGradient;
struct __declspec(uuid("b6c104aa-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPage;
struct __declspec(uuid("b6c104ab-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPanel;
struct __declspec(uuid("b6c104ac-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ISeries;
struct __declspec(uuid("b6c104ad-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeFunction;
struct __declspec(uuid("b6c104ae-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IMarks;
struct __declspec(uuid("b6c104af-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IValueList;
struct __declspec(uuid("b6c104bd-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPointer;
struct __declspec(uuid("b6c104be-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICustomSeries;
struct __declspec(uuid("b6c104bf-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAreaSeries;
struct __declspec(uuid("b6c104c0-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPointSeries;
struct __declspec(uuid("b6c104c1-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ILineSeries;
struct __declspec(uuid("b6c104c2-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IFastLineSeries;
struct __declspec(uuid("b6c104c3-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICircledSeries;
struct __declspec(uuid("b6c104c4-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPieSeries;
struct __declspec(uuid("b6c104c5-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IBubbleSeries;
struct __declspec(uuid("b6c104c7-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IGanttSeries;
struct __declspec(uuid("b6c104c8-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IShapeSeries;
struct __declspec(uuid("b6c104c9-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IArrowSeries;
struct __declspec(uuid("b6c104ca-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICustomBarSeries;
struct __declspec(uuid("b6c104cb-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IBarSeries;
struct __declspec(uuid("b6c104db-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IHorizBarSeries;
struct __declspec(uuid("b6c104dc-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICandleSeries;
struct __declspec(uuid("b6c104dd-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICustomPolarSeries;
struct __declspec(uuid("b6c104de-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICustom3DSeries;
struct __declspec(uuid("b6c104df-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IErrorBarSeries;
struct __declspec(uuid("b6c104e0-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IVolumeSeries;
struct __declspec(uuid("b6c104e1-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAddFunction;
struct __declspec(uuid("b6c104e2-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ISubtractFunction;
struct __declspec(uuid("b6c104e3-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IMultiplyFunction;
struct __declspec(uuid("b6c104e4-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IDivideFunction;
struct __declspec(uuid("b6c104e5-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IAverageFunction;
struct __declspec(uuid("b6c104e6-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IHighFunction;
struct __declspec(uuid("b6c104e7-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ILowFunction;
struct __declspec(uuid("b6c104e8-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICurveFittingFunction;
struct __declspec(uuid("b6c104e9-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IExpAvgFunction;
struct __declspec(uuid("b6c104ea-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IMovingAvgFunction;
struct __declspec(uuid("b6c104eb-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IChartFont;
struct __declspec(uuid("b6c104ec-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IMomentumFunction;
struct __declspec(uuid("b6c104ed-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPieOtherSlice;
struct __declspec(uuid("b6c10501-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IExplodedSlices;
struct __declspec(uuid("b6c10502-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICustom3DPaletteSeries;
struct __declspec(uuid("b6c10503-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICustom3DGridSeries;
struct __declspec(uuid("b6c10504-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IBezierSeries;
struct __declspec(uuid("b6c10505-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IRadarSeries;
struct __declspec(uuid("b6c10506-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IErrorSeries;
struct __declspec(uuid("b6c10507-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPoint3DSeries;
struct __declspec(uuid("b6c10508-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ISurfaceSeries;
struct __declspec(uuid("b6c10509-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ISeriesMarksPositions;
struct __declspec(uuid("b6c1050a-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ISeriesMarkPosition;
struct __declspec(uuid("b6c1050b-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IPolarSeries;
struct __declspec(uuid("b6c1050c-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICircleLabels;
struct __declspec(uuid("b6c1050d-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITrendFunction;
struct __declspec(uuid("b6c1050e-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IStdDeviationFunction;
struct __declspec(uuid("b6c1050f-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICumulativeFunction;
struct __declspec(uuid("b6c10510-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IRSIFunction;
struct __declspec(uuid("b6c10511-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ICountFunction;
struct __declspec(uuid("b6c10512-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IEnvironment;
struct __declspec(uuid("b6c10513-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeLinked;
struct __declspec(uuid("b6c10529-fb89-11d4-93c9-006008a7eed4"))
/* dispinterface */ ITeeCommanderEvents;
struct __declspec(uuid("b6c1052a-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeCommander;
struct __declspec(uuid("b6c1052b-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeListBox;
struct __declspec(uuid("b6c1052c-fb89-11d4-93c9-006008a7eed4"))
/* dispinterface */ ITeeListBoxEvents;
struct /* coclass */ TeeListBox;
struct __declspec(uuid("b6c1052e-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeEditor;
struct __declspec(uuid("b6c1052f-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeePreviewer;
struct /* coclass */ TeeEditor;
struct /* coclass */ TeePreviewer;
struct /* coclass */ TeeCommander;
struct __declspec(uuid("b6c10533-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeePoint2D;
struct __declspec(uuid("b6c10534-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeePoint3D;
struct __declspec(uuid("b6c10535-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeEditorShowPages;
struct __declspec(uuid("b6c10536-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeEditorOptions;
struct __declspec(uuid("b6c10537-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeePreviewerOptions;
struct __declspec(uuid("b6c10538-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ITeeOpenGL;
struct __declspec(uuid("b6c10539-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IClockSeries;
struct __declspec(uuid("b6c1053a-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IWindRoseSeries;
struct __declspec(uuid("b6c1053c-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IBar3DSeries;
struct __declspec(uuid("b6c1053b-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ IImageBarSeries;
struct __declspec(uuid("67d7aa1c-12fa-4f34-8eb2-b3e8646e0e5f"))
/* dual interface */ ITools;
struct __declspec(uuid("62dd8655-f041-11d4-93b1-006008a7eed4"))
/* dual interface */ ICustomToolSeries;
struct __declspec(uuid("9ce4e780-4431-4504-948a-797d83c1e310"))
/* dual interface */ IDragMarksTool;
struct __declspec(uuid("11f8e071-f114-11d4-93b3-006008a7eed4"))
/* dual interface */ ICustomToolAxis;
struct __declspec(uuid("5970102e-e487-4b12-88a8-a7930ef23e5d"))
/* dual interface */ IDrawLineTool;
struct __declspec(uuid("2eb35e28-80cf-4f35-9b6b-427e2ac1bfa6"))
/* dual interface */ INearestTool;
struct __declspec(uuid("c9f8e464-0b4b-4427-8678-363cf8e1955d"))
/* dual interface */ IColorBandTool;
struct __declspec(uuid("cde865c4-6b25-4604-8813-f0a65e51f1c8"))
/* dual interface */ IColorLineTool;
struct __declspec(uuid("97763cec-4d57-4612-a799-05c6e19ac789"))
/* dual interface */ IRotateTool;
struct __declspec(uuid("c793db5d-e235-4248-87ad-e436822e64f2"))
/* dual interface */ IHorizLineSeries;
struct __declspec(uuid("b4b8b973-32bf-40a8-8e07-efba557e13f8"))
/* dual interface */ IHighLowSeries;
struct __declspec(uuid("3b2b9817-fbbf-11d4-93ca-006008a7eed4"))
/* dual interface */ ITitles;
struct __declspec(uuid("750eb847-b333-4a73-8aee-9087f8b98d1e"))
/* dual interface */ IToolList;
struct __declspec(uuid("cc476b13-71ac-463f-85e4-0aa8dd8b8bde"))
/* dual interface */ ILegendSymbol;
struct __declspec(uuid("3b2b9819-fbbf-11d4-93ca-006008a7eed4"))
/* dual interface */ ITeeFont;
struct __declspec(uuid("5101d067-ad02-426b-832e-a898af6e4f5e"))
/* dual interface */ ITeeShadow;
struct __declspec(uuid("252a62f5-0c94-48e0-90ad-7b64200e53c1"))
/* dual interface */ ITeePreviewPanel;
struct __declspec(uuid("26f54550-bcb7-4cae-b817-0d681fef07f7"))
/* dispinterface */ ITeePreviewPanelEvents;
struct /* coclass */ TeePreviewPanel;
struct __declspec(uuid("fd15f1c9-69d8-4fae-9a96-dd2e0b88ddd4"))
/* dual interface */ IChartGrid;
struct __declspec(uuid("74687f85-2744-11d5-9411-006008a7eed4"))
/* dispinterface */ IChartGridEvents;
struct __declspec(uuid("9a52f188-2664-4615-b199-b9aa9ad22861"))
/* dual interface */ IChartGridNavigator;
struct /* coclass */ ChartGridNavigator;
struct __declspec(uuid("32268bd8-c0d1-473d-a13c-65ab4a58397b"))
/* dual interface */ IChartPageNavigator;
struct /* coclass */ ChartPageNavigator;
struct __declspec(uuid("8a48ba34-fa69-4168-a477-026f96344c49"))
/* dual interface */ IChartEditorPanel;
struct /* coclass */ ChartEditorPanel;
struct __declspec(uuid("f66470fb-1309-47ff-a790-26e2e38bebd0"))
/* dual interface */ IContourLevels;
struct __declspec(uuid("0b304b42-253f-4221-8c87-8ad1fca76c94"))
/* dual interface */ IContourLevel;
struct __declspec(uuid("41a5c203-7f36-4e11-840d-d41230760d8e"))
/* dual interface */ IDonutSeries;
struct __declspec(uuid("5b9827e5-3be4-4da3-9a6f-611bf900e4e1"))
/* dual interface */ ITriSurfaceSeries;
struct __declspec(uuid("9df3ed1f-13b7-4a7e-803e-d4bb0c7e5900"))
/* dual interface */ ICustomBoxSeries;
struct __declspec(uuid("cb0ce331-76cb-449c-9be7-fb69c03c3439"))
/* dual interface */ IHorizBoxPlotSeries;
struct __declspec(uuid("70c80bd0-d36a-46c9-a9d6-ae8687ca0ea5"))
/* dual interface */ IHistogramSeries;
struct __declspec(uuid("ba3a0e2d-cce7-4cf6-82d2-044b2a64ee59"))
/* dual interface */ IColorGridSeries;
struct __declspec(uuid("da944291-24c8-4956-bee4-3129a675a49c"))
/* dual interface */ IBarJoinSeries;
struct __declspec(uuid("4cc67466-2a11-45c6-924e-15e8b9f6b780"))
/* dual interface */ IWaterfallSeries;
struct __declspec(uuid("69a3c18d-728e-47b5-9144-7c58b59aa42d"))
/* dual interface */ ISmithSeries;
struct __declspec(uuid("fdb6ae9b-ae83-4cc3-ac6d-03cf0e133867"))
/* dual interface */ IPyramidSeries;
struct __declspec(uuid("33a0cf4e-ae1f-43db-a3cf-b7f9905085c8"))
/* dual interface */ IMapSeries;
struct __declspec(uuid("dfbf9393-46fd-11d2-aec3-00400141862d"))
/* dual interface */ IContourSeries;
struct __declspec(uuid("2e375632-a81d-400a-9369-f609b6b914ac"))
/* dual interface */ IBoxPlotSeries;
struct __declspec(uuid("cf5dfd57-e60d-11d4-93a2-006008a7eed4"))
/* dual interface */ ITeePanelsList;
struct TeeRect;
struct __declspec(uuid("449c6526-c2f8-47ee-8386-32d20b488b8b"))
/* dual interface */ ICursorTool;
struct __declspec(uuid("62dd8657-f041-11d4-93b1-006008a7eed4"))
/* dual interface */ IDrawLineList;
struct __declspec(uuid("62dd8659-f041-11d4-93b1-006008a7eed4"))
/* dual interface */ IDrawLine;
struct __declspec(uuid("c746269f-0a39-4ec5-b52f-7e489835035b"))
/* dual interface */ IAxisArrowTool;
struct __declspec(uuid("235fb742-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IExportFormat;
struct __declspec(uuid("a77491e3-f825-11d4-93c7-006008a7eed4"))
/* dual interface */ IJPEGExport;
struct __declspec(uuid("235fb744-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IPNGExport;
struct __declspec(uuid("235fb746-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IGIFExport;
struct __declspec(uuid("235fb74b-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IPCXExport;
struct __declspec(uuid("235fb74d-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IMetafileExport;
struct __declspec(uuid("235fb74f-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IBMPExport;
struct __declspec(uuid("235fb753-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IMarksTipTool;
struct __declspec(uuid("235fb755-f8ed-11d4-93c8-006008a7eed4"))
/* dual interface */ IChartImageTool;
struct __declspec(uuid("6321aac0-d3f4-4dbd-8f84-27d98ec46046"))
/* dual interface */ IMomentumDivFunction;
struct __declspec(uuid("a3aa3639-e612-4d0a-ade7-57abdeb6ead6"))
/* dual interface */ IExpTrendFunction;
struct __declspec(uuid("d1a32481-6206-4cbf-8261-55141706e6ac"))
/* dual interface */ IExpMovAvgFunction;
struct __declspec(uuid("662c9054-0898-4f09-881e-5abb47978fb6"))
/* dual interface */ IRMSFunction;
struct __declspec(uuid("b86ae373-50dc-4ae9-8872-8e3f9fc21a4e"))
/* dual interface */ IMACDFunction;
struct __declspec(uuid("aa13e17b-57fc-4364-9bbe-ee2095821f16"))
/* dual interface */ IStochasticFunction;
struct __declspec(uuid("2dcbf4ff-bedf-4140-b726-70996bb2b6e6"))
/* dual interface */ IBollingerFunction;
struct __declspec(uuid("3752717c-15c0-4c15-9532-c9c371388028"))
/* dual interface */ IADXFunction;
struct __declspec(uuid("ac690acd-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ INativeExport;
struct __declspec(uuid("ac690acf-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ IDataExport;
struct __declspec(uuid("ac690ad1-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ IXMLExport;
struct __declspec(uuid("ac690ad3-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ IXLSExport;
struct __declspec(uuid("ac690ad5-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ IHTMLExport;
struct __declspec(uuid("ac690ad7-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ ITextExport;
struct __declspec(uuid("ac690ad9-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ IMapPolygonList;
struct __declspec(uuid("ac690adb-0730-11d5-93e3-006008a7eed4"))
/* dual interface */ IMapPolygon;
struct __declspec(uuid("01e6d0d8-07ee-11d5-93e4-006008a7eed4"))
/* dual interface */ IFunnelSeries;
struct __declspec(uuid("01e6d0da-07ee-11d5-93e4-006008a7eed4"))
/* dual interface */ ICalendarSeries;
struct __declspec(uuid("e517cb25-1c48-11d5-9400-006008a7eed4"))
/* dual interface */ ICalendarCell;
struct __declspec(uuid("e517cb27-1c48-11d5-9400-006008a7eed4"))
/* dual interface */ ICalendarCellUpper;
struct __declspec(uuid("e517cb29-1c48-11d5-9400-006008a7eed4"))
/* dual interface */ IAnnotationTool;
struct __declspec(uuid("b6c104a8-fb89-11d4-93c9-006008a7eed4"))
/* dual interface */ ILegend;
struct __declspec(uuid("e517cb2e-1c48-11d5-9400-006008a7eed4"))
/* dual interface */ IPageNumTool;
struct __declspec(uuid("4061f8f0-1d1c-11d5-9401-006008a7eed4"))
/* dual interface */ ISeriesTextSource;
struct /* coclass */ SeriesTextSource;
struct __declspec(uuid("4061f8f5-1d1c-11d5-9401-006008a7eed4"))
/* dual interface */ ISeriesTextFields;
struct __declspec(uuid("4061f8f7-1d1c-11d5-9401-006008a7eed4"))
/* dual interface */ ISeriesTextField;
struct /* coclass */ ChartGrid;
struct __declspec(uuid("a841a3e5-3ed7-11d5-943d-006008a7eed4"))
/* dual interface */ IValueLists;
struct __declspec(uuid("22a5d9bb-b643-11d5-94f8-006008a7eed4"))
/* dual interface */ ITeeShapePanel;
struct __declspec(uuid("5253cebf-921c-4b2a-80d8-c23be8908900"))
/* dual interface */ IChartGridRows;
struct __declspec(uuid("8bfbfaf7-2fab-4f28-9c7b-08a2d1f157ae"))
/* dual interface */ IChartGridCols;
struct TeePoint2D;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(ITChart, __uuidof(ITChart));
_COM_SMARTPTR_TYPEDEF(ITChartEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IPen, __uuidof(IPen));
_COM_SMARTPTR_TYPEDEF(IBrush, __uuidof(IBrush));
_COM_SMARTPTR_TYPEDEF(IStrings, __uuidof(IStrings));
_COM_SMARTPTR_TYPEDEF(ICanvas, __uuidof(ICanvas));
_COM_SMARTPTR_TYPEDEF(IAspect, __uuidof(IAspect));
_COM_SMARTPTR_TYPEDEF(IAxes, __uuidof(IAxes));
_COM_SMARTPTR_TYPEDEF(IAxis, __uuidof(IAxis));
_COM_SMARTPTR_TYPEDEF(IAxisLabels, __uuidof(IAxisLabels));
_COM_SMARTPTR_TYPEDEF(IAxisTitle, __uuidof(IAxisTitle));
_COM_SMARTPTR_TYPEDEF(ITeeCustomShape, __uuidof(ITeeCustomShape));
_COM_SMARTPTR_TYPEDEF(IExport, __uuidof(IExport));
_COM_SMARTPTR_TYPEDEF(IImport, __uuidof(IImport));
_COM_SMARTPTR_TYPEDEF(IScroll, __uuidof(IScroll));
_COM_SMARTPTR_TYPEDEF(IZoom, __uuidof(IZoom));
_COM_SMARTPTR_TYPEDEF(IPrinter, __uuidof(IPrinter));
_COM_SMARTPTR_TYPEDEF(IWall, __uuidof(IWall));
_COM_SMARTPTR_TYPEDEF(IWalls, __uuidof(IWalls));
_COM_SMARTPTR_TYPEDEF(ITeeShapePosition, __uuidof(ITeeShapePosition));
_COM_SMARTPTR_TYPEDEF(IGradient, __uuidof(IGradient));
_COM_SMARTPTR_TYPEDEF(IPage, __uuidof(IPage));
_COM_SMARTPTR_TYPEDEF(IPanel, __uuidof(IPanel));
_COM_SMARTPTR_TYPEDEF(ISeries, __uuidof(ISeries));
_COM_SMARTPTR_TYPEDEF(ITeeFunction, __uuidof(ITeeFunction));
_COM_SMARTPTR_TYPEDEF(IMarks, __uuidof(IMarks));
_COM_SMARTPTR_TYPEDEF(IValueList, __uuidof(IValueList));
_COM_SMARTPTR_TYPEDEF(IPointer, __uuidof(IPointer));
_COM_SMARTPTR_TYPEDEF(ICustomSeries, __uuidof(ICustomSeries));
_COM_SMARTPTR_TYPEDEF(IAreaSeries, __uuidof(IAreaSeries));
_COM_SMARTPTR_TYPEDEF(IPointSeries, __uuidof(IPointSeries));
_COM_SMARTPTR_TYPEDEF(ILineSeries, __uuidof(ILineSeries));
_COM_SMARTPTR_TYPEDEF(IFastLineSeries, __uuidof(IFastLineSeries));
_COM_SMARTPTR_TYPEDEF(ICircledSeries, __uuidof(ICircledSeries));
_COM_SMARTPTR_TYPEDEF(IPieSeries, __uuidof(IPieSeries));
_COM_SMARTPTR_TYPEDEF(IBubbleSeries, __uuidof(IBubbleSeries));
_COM_SMARTPTR_TYPEDEF(IGanttSeries, __uuidof(IGanttSeries));
_COM_SMARTPTR_TYPEDEF(IShapeSeries, __uuidof(IShapeSeries));
_COM_SMARTPTR_TYPEDEF(IArrowSeries, __uuidof(IArrowSeries));
_COM_SMARTPTR_TYPEDEF(ICustomBarSeries, __uuidof(ICustomBarSeries));
_COM_SMARTPTR_TYPEDEF(IBarSeries, __uuidof(IBarSeries));
_COM_SMARTPTR_TYPEDEF(IHorizBarSeries, __uuidof(IHorizBarSeries));
_COM_SMARTPTR_TYPEDEF(ICandleSeries, __uuidof(ICandleSeries));
_COM_SMARTPTR_TYPEDEF(ICustomPolarSeries, __uuidof(ICustomPolarSeries));
_COM_SMARTPTR_TYPEDEF(ICustom3DSeries, __uuidof(ICustom3DSeries));
_COM_SMARTPTR_TYPEDEF(IErrorBarSeries, __uuidof(IErrorBarSeries));
_COM_SMARTPTR_TYPEDEF(IVolumeSeries, __uuidof(IVolumeSeries));
_COM_SMARTPTR_TYPEDEF(IAddFunction, __uuidof(IAddFunction));
_COM_SMARTPTR_TYPEDEF(ISubtractFunction, __uuidof(ISubtractFunction));
_COM_SMARTPTR_TYPEDEF(IMultiplyFunction, __uuidof(IMultiplyFunction));
_COM_SMARTPTR_TYPEDEF(IDivideFunction, __uuidof(IDivideFunction));
_COM_SMARTPTR_TYPEDEF(IAverageFunction, __uuidof(IAverageFunction));
_COM_SMARTPTR_TYPEDEF(IHighFunction, __uuidof(IHighFunction));
_COM_SMARTPTR_TYPEDEF(ILowFunction, __uuidof(ILowFunction));
_COM_SMARTPTR_TYPEDEF(ICurveFittingFunction, __uuidof(ICurveFittingFunction));
_COM_SMARTPTR_TYPEDEF(IExpAvgFunction, __uuidof(IExpAvgFunction));
_COM_SMARTPTR_TYPEDEF(IMovingAvgFunction, __uuidof(IMovingAvgFunction));
_COM_SMARTPTR_TYPEDEF(IChartFont, __uuidof(IChartFont));
_COM_SMARTPTR_TYPEDEF(IMomentumFunction, __uuidof(IMomentumFunction));
_COM_SMARTPTR_TYPEDEF(IPieOtherSlice, __uuidof(IPieOtherSlice));
_COM_SMARTPTR_TYPEDEF(IExplodedSlices, __uuidof(IExplodedSlices));
_COM_SMARTPTR_TYPEDEF(ICustom3DPaletteSeries, __uuidof(ICustom3DPaletteSeries));
_COM_SMARTPTR_TYPEDEF(ICustom3DGridSeries, __uuidof(ICustom3DGridSeries));
_COM_SMARTPTR_TYPEDEF(IBezierSeries, __uuidof(IBezierSeries));
_COM_SMARTPTR_TYPEDEF(IRadarSeries, __uuidof(IRadarSeries));
_COM_SMARTPTR_TYPEDEF(IErrorSeries, __uuidof(IErrorSeries));
_COM_SMARTPTR_TYPEDEF(IPoint3DSeries, __uuidof(IPoint3DSeries));
_COM_SMARTPTR_TYPEDEF(ISurfaceSeries, __uuidof(ISurfaceSeries));
_COM_SMARTPTR_TYPEDEF(ISeriesMarksPositions, __uuidof(ISeriesMarksPositions));
_COM_SMARTPTR_TYPEDEF(ISeriesMarkPosition, __uuidof(ISeriesMarkPosition));
_COM_SMARTPTR_TYPEDEF(IPolarSeries, __uuidof(IPolarSeries));
_COM_SMARTPTR_TYPEDEF(ICircleLabels, __uuidof(ICircleLabels));
_COM_SMARTPTR_TYPEDEF(ITrendFunction, __uuidof(ITrendFunction));
_COM_SMARTPTR_TYPEDEF(IStdDeviationFunction, __uuidof(IStdDeviationFunction));
_COM_SMARTPTR_TYPEDEF(ICumulativeFunction, __uuidof(ICumulativeFunction));
_COM_SMARTPTR_TYPEDEF(IRSIFunction, __uuidof(IRSIFunction));
_COM_SMARTPTR_TYPEDEF(ICountFunction, __uuidof(ICountFunction));
_COM_SMARTPTR_TYPEDEF(IEnvironment, __uuidof(IEnvironment));
_COM_SMARTPTR_TYPEDEF(ITeeLinked, __uuidof(ITeeLinked));
_COM_SMARTPTR_TYPEDEF(ITeeCommanderEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ITeeCommander, __uuidof(ITeeCommander));
_COM_SMARTPTR_TYPEDEF(ITeeListBox, __uuidof(ITeeListBox));
_COM_SMARTPTR_TYPEDEF(ITeeListBoxEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(ITeeEditor, __uuidof(ITeeEditor));
_COM_SMARTPTR_TYPEDEF(ITeePreviewer, __uuidof(ITeePreviewer));
_COM_SMARTPTR_TYPEDEF(ITeePoint2D, __uuidof(ITeePoint2D));
_COM_SMARTPTR_TYPEDEF(ITeePoint3D, __uuidof(ITeePoint3D));
_COM_SMARTPTR_TYPEDEF(ITeeEditorShowPages, __uuidof(ITeeEditorShowPages));
_COM_SMARTPTR_TYPEDEF(ITeeEditorOptions, __uuidof(ITeeEditorOptions));
_COM_SMARTPTR_TYPEDEF(ITeePreviewerOptions, __uuidof(ITeePreviewerOptions));
_COM_SMARTPTR_TYPEDEF(ITeeOpenGL, __uuidof(ITeeOpenGL));
_COM_SMARTPTR_TYPEDEF(IClockSeries, __uuidof(IClockSeries));
_COM_SMARTPTR_TYPEDEF(IWindRoseSeries, __uuidof(IWindRoseSeries));
_COM_SMARTPTR_TYPEDEF(IBar3DSeries, __uuidof(IBar3DSeries));
_COM_SMARTPTR_TYPEDEF(IImageBarSeries, __uuidof(IImageBarSeries));
_COM_SMARTPTR_TYPEDEF(ITools, __uuidof(ITools));
_COM_SMARTPTR_TYPEDEF(ICustomToolSeries, __uuidof(ICustomToolSeries));
_COM_SMARTPTR_TYPEDEF(IDragMarksTool, __uuidof(IDragMarksTool));
_COM_SMARTPTR_TYPEDEF(ICustomToolAxis, __uuidof(ICustomToolAxis));
_COM_SMARTPTR_TYPEDEF(IDrawLineTool, __uuidof(IDrawLineTool));
_COM_SMARTPTR_TYPEDEF(INearestTool, __uuidof(INearestTool));
_COM_SMARTPTR_TYPEDEF(IColorBandTool, __uuidof(IColorBandTool));
_COM_SMARTPTR_TYPEDEF(IColorLineTool, __uuidof(IColorLineTool));
_COM_SMARTPTR_TYPEDEF(IRotateTool, __uuidof(IRotateTool));
_COM_SMARTPTR_TYPEDEF(IHorizLineSeries, __uuidof(IHorizLineSeries));
_COM_SMARTPTR_TYPEDEF(IHighLowSeries, __uuidof(IHighLowSeries));
_COM_SMARTPTR_TYPEDEF(ITitles, __uuidof(ITitles));
_COM_SMARTPTR_TYPEDEF(IToolList, __uuidof(IToolList));
_COM_SMARTPTR_TYPEDEF(ILegendSymbol, __uuidof(ILegendSymbol));
_COM_SMARTPTR_TYPEDEF(ITeeFont, __uuidof(ITeeFont));
_COM_SMARTPTR_TYPEDEF(ITeeShadow, __uuidof(ITeeShadow));
_COM_SMARTPTR_TYPEDEF(ITeePreviewPanel, __uuidof(ITeePreviewPanel));
_COM_SMARTPTR_TYPEDEF(ITeePreviewPanelEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IChartGrid, __uuidof(IChartGrid));
_COM_SMARTPTR_TYPEDEF(IChartGridEvents, __uuidof(IDispatch));
_COM_SMARTPTR_TYPEDEF(IChartGridNavigator, __uuidof(IChartGridNavigator));
_COM_SMARTPTR_TYPEDEF(IChartPageNavigator, __uuidof(IChartPageNavigator));
_COM_SMARTPTR_TYPEDEF(IChartEditorPanel, __uuidof(IChartEditorPanel));
_COM_SMARTPTR_TYPEDEF(IContourLevels, __uuidof(IContourLevels));
_COM_SMARTPTR_TYPEDEF(IContourLevel, __uuidof(IContourLevel));
_COM_SMARTPTR_TYPEDEF(IDonutSeries, __uuidof(IDonutSeries));
_COM_SMARTPTR_TYPEDEF(ITriSurfaceSeries, __uuidof(ITriSurfaceSeries));
_COM_SMARTPTR_TYPEDEF(ICustomBoxSeries, __uuidof(ICustomBoxSeries));
_COM_SMARTPTR_TYPEDEF(IHorizBoxPlotSeries, __uuidof(IHorizBoxPlotSeries));
_COM_SMARTPTR_TYPEDEF(IHistogramSeries, __uuidof(IHistogramSeries));
_COM_SMARTPTR_TYPEDEF(IColorGridSeries, __uuidof(IColorGridSeries));
_COM_SMARTPTR_TYPEDEF(IBarJoinSeries, __uuidof(IBarJoinSeries));
_COM_SMARTPTR_TYPEDEF(IWaterfallSeries, __uuidof(IWaterfallSeries));
_COM_SMARTPTR_TYPEDEF(ISmithSeries, __uuidof(ISmithSeries));
_COM_SMARTPTR_TYPEDEF(IPyramidSeries, __uuidof(IPyramidSeries));
_COM_SMARTPTR_TYPEDEF(IMapSeries, __uuidof(IMapSeries));
_COM_SMARTPTR_TYPEDEF(IContourSeries, __uuidof(IContourSeries));
_COM_SMARTPTR_TYPEDEF(IBoxPlotSeries, __uuidof(IBoxPlotSeries));
_COM_SMARTPTR_TYPEDEF(ITeePanelsList, __uuidof(ITeePanelsList));
_COM_SMARTPTR_TYPEDEF(ICursorTool, __uuidof(ICursorTool));
_COM_SMARTPTR_TYPEDEF(IDrawLineList, __uuidof(IDrawLineList));
_COM_SMARTPTR_TYPEDEF(IDrawLine, __uuidof(IDrawLine));
_COM_SMARTPTR_TYPEDEF(IAxisArrowTool, __uuidof(IAxisArrowTool));
_COM_SMARTPTR_TYPEDEF(IExportFormat, __uuidof(IExportFormat));
_COM_SMARTPTR_TYPEDEF(IJPEGExport, __uuidof(IJPEGExport));
_COM_SMARTPTR_TYPEDEF(IPNGExport, __uuidof(IPNGExport));
_COM_SMARTPTR_TYPEDEF(IGIFExport, __uuidof(IGIFExport));
_COM_SMARTPTR_TYPEDEF(IPCXExport, __uuidof(IPCXExport));
_COM_SMARTPTR_TYPEDEF(IMetafileExport, __uuidof(IMetafileExport));
_COM_SMARTPTR_TYPEDEF(IBMPExport, __uuidof(IBMPExport));
_COM_SMARTPTR_TYPEDEF(IMarksTipTool, __uuidof(IMarksTipTool));
_COM_SMARTPTR_TYPEDEF(IChartImageTool, __uuidof(IChartImageTool));
_COM_SMARTPTR_TYPEDEF(IMomentumDivFunction, __uuidof(IMomentumDivFunction));
_COM_SMARTPTR_TYPEDEF(IExpTrendFunction, __uuidof(IExpTrendFunction));
_COM_SMARTPTR_TYPEDEF(IExpMovAvgFunction, __uuidof(IExpMovAvgFunction));
_COM_SMARTPTR_TYPEDEF(IRMSFunction, __uuidof(IRMSFunction));
_COM_SMARTPTR_TYPEDEF(IMACDFunction, __uuidof(IMACDFunction));
_COM_SMARTPTR_TYPEDEF(IStochasticFunction, __uuidof(IStochasticFunction));
_COM_SMARTPTR_TYPEDEF(IBollingerFunction, __uuidof(IBollingerFunction));
_COM_SMARTPTR_TYPEDEF(IADXFunction, __uuidof(IADXFunction));
_COM_SMARTPTR_TYPEDEF(INativeExport, __uuidof(INativeExport));
_COM_SMARTPTR_TYPEDEF(IDataExport, __uuidof(IDataExport));
_COM_SMARTPTR_TYPEDEF(IXMLExport, __uuidof(IXMLExport));
_COM_SMARTPTR_TYPEDEF(IXLSExport, __uuidof(IXLSExport));
_COM_SMARTPTR_TYPEDEF(IHTMLExport, __uuidof(IHTMLExport));
_COM_SMARTPTR_TYPEDEF(ITextExport, __uuidof(ITextExport));
_COM_SMARTPTR_TYPEDEF(IMapPolygonList, __uuidof(IMapPolygonList));
_COM_SMARTPTR_TYPEDEF(IMapPolygon, __uuidof(IMapPolygon));
_COM_SMARTPTR_TYPEDEF(IFunnelSeries, __uuidof(IFunnelSeries));
_COM_SMARTPTR_TYPEDEF(ICalendarSeries, __uuidof(ICalendarSeries));
_COM_SMARTPTR_TYPEDEF(ICalendarCell, __uuidof(ICalendarCell));
_COM_SMARTPTR_TYPEDEF(ICalendarCellUpper, __uuidof(ICalendarCellUpper));
_COM_SMARTPTR_TYPEDEF(IAnnotationTool, __uuidof(IAnnotationTool));
_COM_SMARTPTR_TYPEDEF(ILegend, __uuidof(ILegend));
_COM_SMARTPTR_TYPEDEF(IPageNumTool, __uuidof(IPageNumTool));
_COM_SMARTPTR_TYPEDEF(ISeriesTextSource, __uuidof(ISeriesTextSource));
_COM_SMARTPTR_TYPEDEF(ISeriesTextFields, __uuidof(ISeriesTextFields));
_COM_SMARTPTR_TYPEDEF(ISeriesTextField, __uuidof(ISeriesTextField));
_COM_SMARTPTR_TYPEDEF(IValueLists, __uuidof(IValueLists));
_COM_SMARTPTR_TYPEDEF(ITeeShapePanel, __uuidof(ITeeShapePanel));
_COM_SMARTPTR_TYPEDEF(IChartGridRows, __uuidof(IChartGridRows));
_COM_SMARTPTR_TYPEDEF(IChartGridCols, __uuidof(IChartGridCols));

//
// Type library items
//

enum EPanelBevel
{
    bvNone = 0,
    bvLowered = 1,
    bvRaised = 2
};

enum EBorderStyle
{
    bsNone = 0,
    bsSingle = 1
};

enum EDragMode
{
    dmManual = 0,
    dmAutomatic = 1
};

enum EChartPenStyle
{
    psSolid = 0,
    psDash = 1,
    psDot = 2,
    psDashDot = 3,
    psDashDotDot = 4,
    psClear = 5,
    psInsideFrame = 6,
    psSmallDots = 7
};

enum ELegendStyle
{
    lsAuto = 0,
    lsSeries = 1,
    lsValues = 2,
    lsLastValues = 3
};

enum EMouseButton
{
    mbLeft = 1,
    mbRight = 2,
    mbMiddle = 4
};

enum EDragState
{
    dsDragEnter = 0,
    dsDragLeave = 1,
    dsDragMove = 2
};

enum EGradientDirection
{
    gdTopBottom = 0,
    gdBottomTop = 1,
    gdLeftRight = 2,
    gdRightLeft = 3,
    gdFromCenter = 4,
    gdFromTopLeft = 5,
    gdFromBottomLeft = 6
};

enum EAxisLabelStyle
{
    talAuto = 0,
    talNone = 1,
    talValue = 2,
    talMark = 3,
    talText = 4
};

enum EHorizontalAxis
{
    aTopAxis = 0,
    aBottomAxis = 1,
    aBothHorizAxis = 2,
    aCustomHorizAxis = 3
};

enum EBrushStyle
{
    bsSolid = 0,
    bsClear = 1,
    bsHorizontal = 2,
    bsVertical = 3,
    bsFDiagonal = 4,
    bsBDiagonal = 5,
    bsCross = 6,
    bsDiagCross = 7,
    bsFill80 = 8,
    bsFill60 = 9,
    bsFill40 = 10,
    bsFill20 = 11,
    bsFill10 = 12,
    bsZigZag = 13,
    bsVertSmall = 14,
    bsHorizSmall = 15,
    bsDiagSmall = 16,
    bsBackDiagSmall = 17,
    bsCrossSmall = 18,
    bsBackCrossSmall = 19
};

enum EMultiArea
{
    maNone = 0,
    maStacked = 1,
    maStacked100 = 2
};

enum EMultiBar
{
    mbNone = 0,
    mbSide = 1,
    mbStacked = 2,
    mbStacked100 = 3,
    mbSideAll = 4
};

enum EMarkStyle
{
    smsValue = 0,
    smsPercent = 1,
    smsLabel = 2,
    smsLabelPercent = 3,
    smsLabelValue = 4,
    smsLegend = 5,
    smsPercentTotal = 6,
    smsLabelPercentTotal = 7,
    smsXValue = 8,
    smsXY = 9
};

enum EBarStyle
{
    bsRectangle = 0,
    bsPyramid = 1,
    bsInvPyramid = 2,
    bsCilinder = 3,
    bsEllipse = 4,
    bsArrow = 5,
    bsRectGradient = 6,
    bsCone = 7
};

enum EChartScroll
{
    pmNone = 0,
    pmHorizontal = 1,
    pmVertical = 2,
    pmBoth = 3
};

enum ELegendAlignment
{
    laLeft = 0,
    laRight = 1,
    laTop = 2,
    laBottom = 3
};

enum ELegendTextStyle
{
    ltsPlain = 0,
    ltsLeftValue = 1,
    ltsRightValue = 2,
    ltsLeftPercent = 3,
    ltsRightPercent = 4,
    ltsXValue = 5,
    ltsValue = 6,
    ltsPercent = 7,
    ltsXAndValue = 8,
    ltsXAndPercent = 9
};

enum EAxisType
{
    atLeft = 0,
    atTop = 1,
    atRight = 2,
    atBottom = 3,
    atDepth = 4,
    atCustom = 5
};

enum EDateTimeStep
{
    dtOneSecond = 1,
    dtFiveSeconds = 2,
    dtTenSeconds = 3,
    dtFifteenSeconds = 4,
    dtThirtySeconds = 5,
    dtOneMinute = 6,
    dtFiveMinutes = 7,
    dtTenMinutes = 8,
    dtFifteenMinutes = 9,
    dtThirtyMinutes = 10,
    dtOneHour = 11,
    dtTwoHours = 12,
    dtSixHours = 13,
    dtTwelveHours = 14,
    dtOneDay = 15,
    dtTwoDays = 16,
    dtThreeDays = 17,
    dtOneWeek = 18,
    dtHalfMonth = 19,
    dtOneMonth = 20,
    dtTwoMonths = 21,
    dtThreeMonths = 22,
    dtFourMonths = 23,
    dtOneMillisecond = 0,
    dtSixMonths = 24,
    dtOneYear = 25
};

enum EJPEGPerformance
{
    jpegBestQuality = 0,
    jpegBestSpeed = 1
};

enum EConstants
{
    clTeeColor = 536870912,
    clNone = 536870911
};

enum EFunctionType
{
    tfCopy = 0,
    tfAdd = 1,
    tfSubtract = 2,
    tfMultiply = 3,
    tfDivide = 4,
    tfAverage = 5,
    tfHigh = 6,
    tfLow = 7,
    tfMovavg = 8,
    tfExpavg = 9,
    tfMomentum = 10,
    tfCurveFit = 11,
    tfRSI = 12,
    tfTrend = 13,
    tfStdDeviation = 14,
    tfCumulative = 15,
    tfCount = 16,
    tfExpTrend = 17,
    tfExpMovAvg = 18,
    tfMomentumDiv = 19,
    tfRMS = 20,
    tfMACD = 21,
    tfStochastic = 22,
    tfBollinger = 23,
    tfADX = 24
};

enum EShapeXYStyle
{
    xysPixels = 0,
    xysAxis = 1,
    xysAxisOrigin = 2
};

enum ECandleStyle
{
    csCandleBar = 0,
    csCandleStick = 1,
    csOpenClose = 2
};

enum EErrorWidthUnits
{
    ewuPercent = 0,
    ewuPixels = 1
};

enum EValueListOrder
{
    loNone = 0,
    loAscending = 1,
    loDescending = 2
};

enum EShapeStyle
{
    chasRectangle = 0,
    chasCircle = 1,
    chasVertLine = 2,
    chasHorizLine = 3,
    chasTriangle = 4,
    chasInvertTriangle = 5,
    chasLine = 6,
    chasDiamond = 7,
    chasCube = 8,
    chasCross = 9,
    chasDiagCross = 10,
    chasStar = 11,
    chasPyramid = 12,
    chasInvertPyramid = 13
};

enum ESeriesClass
{
    scLine = 0,
    scBar = 1,
    scHorizBar = 2,
    scArea = 3,
    scPoint = 4,
    scPie = 5,
    scFastLine = 6,
    scShape = 7,
    scGantt = 8,
    scBubble = 9,
    scArrow = 10,
    scCandle = 11,
    scPolar = 12,
    scSurface = 13,
    scVolume = 14,
    scErrorBar = 15,
    scBezier = 16,
    scContour = 17,
    scError = 18,
    scPoint3D = 19,
    scRadar = 20,
    scClock = 21,
    scWindRose = 22,
    scBar3D = 23,
    scImageBar = 24,
    scDonut = 25,
    scTriSurface = 26,
    scBox = 27,
    scHorizBox = 28,
    scHistogram = 29,
    scColorGrid = 30,
    scBarJoin = 31,
    scHighLow = 32,
    scWaterfall = 33,
    scSmith = 34,
    scPyramid = 35,
    scMap = 36,
    scHorizLine = 37,
    scFunnel = 38,
    scCalendar = 39
};

enum EPrinterOrientation
{
    poPortrait = 0,
    poLandscape = 1
};

enum EPointerStyle
{
    psRectangle = 0,
    psCircle = 1,
    psTriangle = 2,
    psDownTriangle = 3,
    psCross = 4,
    psDiagCross = 5,
    psStar = 6,
    psDiamond = 7,
    psSmallDot = 8
};

enum ETypeFitting
{
    cfPolynomial = 0,
    cfLogarithmic = 1,
    cfExponential = 2
};

enum EBackImageMode
{
    pbmStretch = 0,
    pbmTile = 1,
    pbmCenter = 2
};

enum ETextAlignment
{
    aLeft = 0,
    aRight = 1,
    aCenter = 2
};

enum EVerticalAxis
{
    aLeftAxis = 0,
    aRightAxis = 1,
    aBothVertAxis = 2,
    aCustomVertAxis = 3
};

enum EShiftState
{
    ssShift = 1,
    ssAlt = 2,
    ssCtrl = 4,
    ssNone = 0
};

enum ETitleAlignment
{
    taLeftJustify = 0,
    taRightJustify = 1,
    taCenter = 2
};

struct __declspec(uuid("b6c10485-fb89-11d4-93c9-006008a7eed4"))
ITChart : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Aspect (
        struct IAspect * * Aspect ) = 0;
    virtual HRESULT __stdcall get_Axis (
        struct IAxes * * Axis ) = 0;
    virtual HRESULT __stdcall get_Canvas (
        struct ICanvas * * Canvas ) = 0;
    virtual HRESULT __stdcall get_ClipPoints (
        VARIANT_BOOL * ClipPoints ) = 0;
    virtual HRESULT __stdcall put_ClipPoints (
        VARIANT_BOOL ClipPoints ) = 0;
    virtual HRESULT __stdcall get_Cursor (
        short * Cursor ) = 0;
    virtual HRESULT __stdcall put_Cursor (
        short Cursor ) = 0;
    virtual HRESULT __stdcall get_DragCursor (
        short * DragCursor ) = 0;
    virtual HRESULT __stdcall put_DragCursor (
        short DragCursor ) = 0;
    virtual HRESULT __stdcall get_DragMode (
        enum EDragMode * DragMode ) = 0;
    virtual HRESULT __stdcall put_DragMode (
        enum EDragMode DragMode ) = 0;
    virtual HRESULT __stdcall get_Enabled (
        VARIANT_BOOL * Enabled ) = 0;
    virtual HRESULT __stdcall put_Enabled (
        VARIANT_BOOL Enabled ) = 0;
    virtual HRESULT __stdcall get_Export (
        struct IExport * * Export ) = 0;
    virtual HRESULT __stdcall get_Footer (
        struct ITitles * * Footer ) = 0;
    virtual HRESULT __stdcall get_Frame (
        struct IPen * * Frame ) = 0;
    virtual HRESULT __stdcall get_Header (
        struct ITitles * * Header ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * Height ) = 0;
    virtual HRESULT __stdcall put_Height (
        long Height ) = 0;
    virtual HRESULT __stdcall get_Import (
        struct IImport * * Import ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * Left ) = 0;
    virtual HRESULT __stdcall put_Left (
        long Left ) = 0;
    virtual HRESULT __stdcall get_Legend (
        struct ILegend * * Legend ) = 0;
    virtual HRESULT __stdcall get_Page (
        struct IPage * * Page ) = 0;
    virtual HRESULT __stdcall get_Panel (
        struct IPanel * * Panel ) = 0;
    virtual HRESULT __stdcall get_Printer (
        struct IPrinter * * Printer ) = 0;
    virtual HRESULT __stdcall get_Scroll (
        struct IScroll * * Scroll ) = 0;
    virtual HRESULT __stdcall get_aSeries (
        long SeriesIndex,
        struct ISeries * * Index ) = 0;
    virtual HRESULT __stdcall get_SeriesCount (
        long * SeriesCount ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * Top ) = 0;
    virtual HRESULT __stdcall put_Top (
        long Top ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_Walls (
        struct IWalls * * Walls ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * Width ) = 0;
    virtual HRESULT __stdcall put_Width (
        long Width ) = 0;
    virtual HRESULT __stdcall get_Zoom (
        struct IZoom * * Zoom ) = 0;
    virtual HRESULT __stdcall AboutBox ( ) = 0;
    virtual HRESULT __stdcall AddSeries (
        enum ESeriesClass SeriesClass,
        long * Value ) = 0;
    virtual HRESULT __stdcall ChangeSeriesType (
        long SeriesIndex,
        enum ESeriesClass NewSeriesType ) = 0;
    virtual HRESULT __stdcall CloneSeries (
        long SourceSeriesIndex,
        long * SeriesIndex ) = 0;
    virtual HRESULT __stdcall Draw (
        long DC,
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall ExchangeSeries (
        long Series1,
        long Series2 ) = 0;
    virtual HRESULT __stdcall GetDateTimeStep (
        enum EDateTimeStep DateTimeStep,
        double * Step ) = 0;
    virtual HRESULT __stdcall GetFreeSeriesColor (
        VARIANT_BOOL CheckBackgroundColor,
        OLE_COLOR * CheckBackground ) = 0;
    virtual HRESULT __stdcall GetLabelsSeries (
        enum EAxisType DestAxis,
        struct ISeries * * Axis ) = 0;
    virtual HRESULT __stdcall IsFreeSeriesColor (
        OLE_COLOR AColor,
        VARIANT_BOOL CheckBackgroundColor,
        VARIANT_BOOL * CheckBackground ) = 0;
    virtual HRESULT __stdcall RemoveAllSeries ( ) = 0;
    virtual HRESULT __stdcall RemoveSeries (
        long SeriesIndex ) = 0;
    virtual HRESULT __stdcall Repaint ( ) = 0;
    virtual HRESULT __stdcall SeriesTitleLegend (
        long ASeriesIndex,
        BSTR * SeriesIndex ) = 0;
    virtual HRESULT __stdcall ShowEditor (
        long SeriesIndex ) = 0;
    virtual HRESULT __stdcall StopMouse ( ) = 0;
    virtual HRESULT __stdcall get_TimerEnabled (
        VARIANT_BOOL * TimerEnabled ) = 0;
    virtual HRESULT __stdcall put_TimerEnabled (
        VARIANT_BOOL TimerEnabled ) = 0;
    virtual HRESULT __stdcall get_TimerInterval (
        long * TimerInterval ) = 0;
    virtual HRESULT __stdcall put_TimerInterval (
        long TimerInterval ) = 0;
    virtual HRESULT __stdcall get_AutoRepaint (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AutoRepaint (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall EditOneSeries (
        long SeriesIndex ) = 0;
    virtual HRESULT __stdcall get_Environment (
        struct IEnvironment * * Value ) = 0;
    virtual HRESULT __stdcall get_ChartLink (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_MousePosition (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall ChartRect (
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall get_Tools (
        struct IToolList * * Value ) = 0;
    virtual HRESULT __stdcall get_SubHeader (
        struct ITitles * * Value ) = 0;
    virtual HRESULT __stdcall get_SubFooter (
        struct ITitles * * Value ) = 0;
    virtual HRESULT __stdcall ClearChart ( ) = 0;
    virtual HRESULT __stdcall RefreshData ( ) = 0;
    virtual HRESULT __stdcall Series (
        long SeriesIndex,
        struct ISeries * * Index ) = 0;
};

struct __declspec(uuid("b6c10487-fb89-11d4-93c9-006008a7eed4"))
ITChartEvents : IDispatch
{};

struct __declspec(uuid("b6c10489-fb89-11d4-93c9-006008a7eed4"))
TChart;
    // [ default ] interface ITChart
    // [ default, source ] dispinterface ITChartEvents

struct __declspec(uuid("b6c1048b-fb89-11d4-93c9-006008a7eed4"))
IPen : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Color ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * Width ) = 0;
    virtual HRESULT __stdcall put_Width (
        long Width ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum EChartPenStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EChartPenStyle Style ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_EndStyle (
        enum EPenEndStyle * Value ) = 0;
    virtual HRESULT __stdcall put_EndStyle (
        enum EPenEndStyle Value ) = 0;
};

struct __declspec(uuid("b6c1048d-fb89-11d4-93c9-006008a7eed4"))
IBrush : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Color ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum EBrushStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EBrushStyle Style ) = 0;
    virtual HRESULT __stdcall LoadImage (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall AssignImage (
        long ImageHandle ) = 0;
    virtual HRESULT __stdcall ClearImage ( ) = 0;
};

struct __declspec(uuid("b6c1048e-fb89-11d4-93c9-006008a7eed4"))
IStrings : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ControlDefault (
        long Index,
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_ControlDefault (
        long Index,
        VARIANT Value ) = 0;
    virtual HRESULT __stdcall Count (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Item (
        long Index,
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Item (
        long Index,
        VARIANT Value ) = 0;
    virtual HRESULT __stdcall Remove (
        long Index ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall Add (
        VARIANT AItem,
        long * Item ) = 0;
    virtual HRESULT __stdcall _NewEnum (
        IUnknown * * _NewEnum ) = 0;
};

struct __declspec(uuid("b6c1048f-fb89-11d4-93c9-006008a7eed4"))
ICanvas : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Brush ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Pen ) = 0;
    virtual HRESULT __stdcall LineTo (
        long X,
        long Y ) = 0;
    virtual HRESULT __stdcall MoveTo (
        long X,
        long Y ) = 0;
    virtual HRESULT __stdcall Rectangle (
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall get_Font (
        struct IChartFont * * Font ) = 0;
    virtual HRESULT __stdcall Arc (
        long X1,
        long Y1,
        long X2,
        long Y2,
        long X3,
        long Y3,
        long X4,
        long Y4 ) = 0;
    virtual HRESULT __stdcall Ellipse (
        long X1,
        long Y1,
        long X2,
        long Y2 ) = 0;
    virtual HRESULT __stdcall TextOut (
        long X,
        long Y,
        BSTR Text ) = 0;
    virtual HRESULT __stdcall TextHeight (
        BSTR SomeText,
        long * St ) = 0;
    virtual HRESULT __stdcall TextWidth (
        BSTR SomeText,
        long * St ) = 0;
    virtual HRESULT __stdcall ClipRectangle (
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall UnClipRectangle ( ) = 0;
    virtual HRESULT __stdcall RotateLabel (
        long X,
        long Y,
        BSTR St,
        long RotDegree ) = 0;
    virtual HRESULT __stdcall IsScreenHighColor (
        VARIANT_BOOL * IsScreenHighColor ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * Top ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * Left ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * Width ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * Height ) = 0;
    virtual HRESULT __stdcall get_BackMode (
        enum ECanvasBackMode * Value ) = 0;
    virtual HRESULT __stdcall put_BackMode (
        enum ECanvasBackMode Value ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_SupportsFullRotation (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall get_UseBuffer (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_UseBuffer (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall Pie3D (
        long XCenter,
        long YCenter,
        long XRadius,
        long YRadius,
        long Z0,
        long Z1,
        double StartAngle,
        double EndAngle,
        VARIANT_BOOL DarkSides,
        VARIANT_BOOL DrawSides ) = 0;
    virtual HRESULT __stdcall LineWithZ (
        long X0,
        long Y0,
        long X1,
        long Y1,
        long Z ) = 0;
    virtual HRESULT __stdcall MoveTo3D (
        long X,
        long Y,
        long Z ) = 0;
    virtual HRESULT __stdcall LineTo3D (
        long X,
        long Y,
        long Z ) = 0;
    virtual HRESULT __stdcall Plane3D (
        long X0,
        long Y0,
        long X1,
        long Y1,
        long Z0,
        long Z1 ) = 0;
    virtual HRESULT __stdcall ZLine3D (
        long X,
        long Y,
        long Z0,
        long Z1 ) = 0;
    virtual HRESULT __stdcall RotateLabel3D (
        long X,
        long Y,
        long Z,
        BSTR St,
        long RotDegree ) = 0;
    virtual HRESULT __stdcall get_TextAlign (
        enum ECanvasTextAlign * Value ) = 0;
    virtual HRESULT __stdcall put_TextAlign (
        enum ECanvasTextAlign Value ) = 0;
    virtual HRESULT __stdcall VertLine3D (
        long X,
        long Top,
        long Bottom,
        long Z ) = 0;
    virtual HRESULT __stdcall HorizLine3D (
        long Left,
        long Right,
        long Y,
        long Z ) = 0;
    virtual HRESULT __stdcall Cylinder (
        VARIANT_BOOL Vertical,
        long Left,
        long Top,
        long Right,
        long Bottom,
        long Z0,
        long Z1,
        VARIANT_BOOL DarkCover ) = 0;
    virtual HRESULT __stdcall Cube (
        long Left,
        long Right,
        long Top,
        long Bottom,
        long Z0,
        long Z1,
        VARIANT_BOOL DarkSides ) = 0;
    virtual HRESULT __stdcall EllipseWithZ (
        long X1,
        long Y1,
        long X2,
        long Y2,
        long Z ) = 0;
    virtual HRESULT __stdcall PlaneWithZ (
        long X1,
        long Y1,
        long X2,
        long Y2,
        long X3,
        long Y3,
        long X4,
        long Y4,
        long Z ) = 0;
    virtual HRESULT __stdcall PlaneFour3D (
        long X1,
        long Y1,
        long X2,
        long Y2,
        long X3,
        long Y3,
        long X4,
        long Y4,
        long Z0,
        long Z1 ) = 0;
    virtual HRESULT __stdcall RectangleWithZ (
        long Left,
        long Top,
        long Right,
        long Bottom,
        long Z ) = 0;
    virtual HRESULT __stdcall RectangleZ (
        long Left,
        long Top,
        long Bottom,
        long Z0,
        long Z1 ) = 0;
    virtual HRESULT __stdcall TextOut3D (
        long X,
        long Y,
        long Z,
        BSTR Text ) = 0;
    virtual HRESULT __stdcall TriangleWithZ (
        long X1,
        long Y1,
        long X2,
        long Y2,
        long X3,
        long Y3,
        long Z ) = 0;
    virtual HRESULT __stdcall Frame3D (
        long Left,
        long Top,
        long Right,
        long Bottom,
        OLE_COLOR TopColor,
        OLE_COLOR BottomColor,
        long Width ) = 0;
    virtual HRESULT __stdcall EraseBackground (
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall GradientFill (
        long Left,
        long Top,
        long Right,
        long Bottom,
        OLE_COLOR StartColor,
        OLE_COLOR EndColor,
        enum EGradientDirection Direction ) = 0;
    virtual HRESULT __stdcall Line (
        long X0,
        long Y0,
        long X1,
        long Y1 ) = 0;
    virtual HRESULT __stdcall RectangleY (
        long Left,
        long Top,
        long Right,
        long Z0,
        long Z1 ) = 0;
    virtual HRESULT __stdcall Pixels3D (
        long X,
        long Y,
        long Z,
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_HandleDC (
        long * Value ) = 0;
    virtual HRESULT __stdcall Cone (
        VARIANT_BOOL Vertical,
        long Left,
        long Top,
        long Right,
        long Bottom,
        long Z0,
        long Z1,
        VARIANT_BOOL Dark3D,
        long ConePercent ) = 0;
    virtual HRESULT __stdcall Sphere (
        long X,
        long Y,
        long Z,
        double Radius ) = 0;
    virtual HRESULT __stdcall Arrow (
        VARIANT_BOOL Filled,
        long X0,
        long Y0,
        long X1,
        long Y1,
        long HeadWidth,
        long HeadHeight,
        long Z ) = 0;
    virtual HRESULT __stdcall Draw (
        long X,
        long Y,
        struct IPicture * Image ) = 0;
    virtual HRESULT __stdcall get_RotationCenter (
        struct ITeePoint3D * * Value ) = 0;
    virtual HRESULT __stdcall get_ChartXCenter (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_ChartYCenter (
        long * Value ) = 0;
    virtual HRESULT __stdcall GrayScale (
        VARIANT_BOOL Inverted ) = 0;
};

struct __declspec(uuid("b6c10490-fb89-11d4-93c9-006008a7eed4"))
IAspect : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ApplyZOrder (
        VARIANT_BOOL * ApplyZOrder ) = 0;
    virtual HRESULT __stdcall put_ApplyZOrder (
        VARIANT_BOOL ApplyZOrder ) = 0;
    virtual HRESULT __stdcall get_Chart3DPercent (
        long * Chart3DPercent ) = 0;
    virtual HRESULT __stdcall put_Chart3DPercent (
        long Chart3DPercent ) = 0;
    virtual HRESULT __stdcall get_Height3D (
        long * Height3D ) = 0;
    virtual HRESULT __stdcall get_View3D (
        VARIANT_BOOL * View3D ) = 0;
    virtual HRESULT __stdcall put_View3D (
        VARIANT_BOOL View3D ) = 0;
    virtual HRESULT __stdcall get_Width3D (
        long * Width3D ) = 0;
    virtual HRESULT __stdcall get_Rotation (
        long * RotationX ) = 0;
    virtual HRESULT __stdcall put_Rotation (
        long RotationX ) = 0;
    virtual HRESULT __stdcall get_Elevation (
        long * RotationY ) = 0;
    virtual HRESULT __stdcall put_Elevation (
        long RotationY ) = 0;
    virtual HRESULT __stdcall get_Zoom (
        long * Zoom ) = 0;
    virtual HRESULT __stdcall put_Zoom (
        long Zoom ) = 0;
    virtual HRESULT __stdcall get_ZoomText (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ZoomText (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_HorizOffset (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_HorizOffset (
        long Value ) = 0;
    virtual HRESULT __stdcall get_VertOffset (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_VertOffset (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Tilt (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Tilt (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Orthogonal (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Orthogonal (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Perspective (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Perspective (
        long Value ) = 0;
    virtual HRESULT __stdcall get_OpenGL (
        struct ITeeOpenGL * * Value ) = 0;
    virtual HRESULT __stdcall get_OrthoAngle (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_OrthoAngle (
        long Value ) = 0;
};

struct __declspec(uuid("b6c10491-fb89-11d4-93c9-006008a7eed4"))
IAxes : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Left (
        struct IAxis * * Left ) = 0;
    virtual HRESULT __stdcall get_Right (
        struct IAxis * * Right ) = 0;
    virtual HRESULT __stdcall get_Top (
        struct IAxis * * Top ) = 0;
    virtual HRESULT __stdcall get_Bottom (
        struct IAxis * * Bottom ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_Depth (
        struct IAxis * * Value ) = 0;
    virtual HRESULT __stdcall get_DrawAxesBeforeSeries (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DrawAxesBeforeSeries (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall AddCustom (
        VARIANT_BOOL IsHorizontal,
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Custom (
        long CustomAxisIndex,
        struct IAxis * * Value ) = 0;
    virtual HRESULT __stdcall get_CustomCount (
        long * Value ) = 0;
    virtual HRESULT __stdcall RemoveCustom (
        long CustomAxisIndex ) = 0;
    virtual HRESULT __stdcall RemoveAllCustom ( ) = 0;
};

struct __declspec(uuid("b6c104c6-fb89-11d4-93c9-006008a7eed4"))
IAxis : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Automatic (
        VARIANT_BOOL * Automatic ) = 0;
    virtual HRESULT __stdcall put_Automatic (
        VARIANT_BOOL Automatic ) = 0;
    virtual HRESULT __stdcall get_AutomaticMaximum (
        VARIANT_BOOL * AutomaticMaximum ) = 0;
    virtual HRESULT __stdcall put_AutomaticMaximum (
        VARIANT_BOOL AutomaticMaximum ) = 0;
    virtual HRESULT __stdcall get_AutomaticMinimum (
        VARIANT_BOOL * AutomaticMinimum ) = 0;
    virtual HRESULT __stdcall put_AutomaticMinimum (
        VARIANT_BOOL AutomaticMinimum ) = 0;
    virtual HRESULT __stdcall get_AxisPen (
        struct IPen * * AxisPen ) = 0;
    virtual HRESULT __stdcall get_AxisType (
        enum EAxisType * AxisType ) = 0;
    virtual HRESULT __stdcall get_ExactDateTime (
        VARIANT_BOOL * ExactDateTime ) = 0;
    virtual HRESULT __stdcall put_ExactDateTime (
        VARIANT_BOOL ExactDateTime ) = 0;
    virtual HRESULT __stdcall get_GridPen (
        struct IPen * * GridPen ) = 0;
    virtual HRESULT __stdcall get_Increment (
        double * Increment ) = 0;
    virtual HRESULT __stdcall put_Increment (
        double Increment ) = 0;
    virtual HRESULT __stdcall get_Inverted (
        VARIANT_BOOL * Inverted ) = 0;
    virtual HRESULT __stdcall put_Inverted (
        VARIANT_BOOL Inverted ) = 0;
    virtual HRESULT __stdcall get_Labels (
        struct IAxisLabels * * Labels ) = 0;
    virtual HRESULT __stdcall get_Logarithmic (
        VARIANT_BOOL * Logarithmic ) = 0;
    virtual HRESULT __stdcall put_Logarithmic (
        VARIANT_BOOL Logarithmic ) = 0;
    virtual HRESULT __stdcall get_Maximum (
        double * Maximum ) = 0;
    virtual HRESULT __stdcall put_Maximum (
        double Maximum ) = 0;
    virtual HRESULT __stdcall get_Minimum (
        double * Minimum ) = 0;
    virtual HRESULT __stdcall put_Minimum (
        double Minimum ) = 0;
    virtual HRESULT __stdcall get_MinorTickCount (
        long * MinorTickCount ) = 0;
    virtual HRESULT __stdcall put_MinorTickCount (
        long MinorTickCount ) = 0;
    virtual HRESULT __stdcall get_MinorTickLength (
        long * MinorTickLength ) = 0;
    virtual HRESULT __stdcall put_MinorTickLength (
        long MinorTickLength ) = 0;
    virtual HRESULT __stdcall get_MinorTicks (
        struct IPen * * MinorTicks ) = 0;
    virtual HRESULT __stdcall get_Position (
        long * Position ) = 0;
    virtual HRESULT __stdcall get_TickInnerLength (
        long * TickInnerLength ) = 0;
    virtual HRESULT __stdcall put_TickInnerLength (
        long TickInnerLength ) = 0;
    virtual HRESULT __stdcall get_TickLength (
        long * TickLength ) = 0;
    virtual HRESULT __stdcall put_TickLength (
        long TickLength ) = 0;
    virtual HRESULT __stdcall get_TickOnLabelsOnly (
        VARIANT_BOOL * TickOnLabelsOnly ) = 0;
    virtual HRESULT __stdcall put_TickOnLabelsOnly (
        VARIANT_BOOL TickOnLabelsOnly ) = 0;
    virtual HRESULT __stdcall get_Ticks (
        struct IPen * * Ticks ) = 0;
    virtual HRESULT __stdcall get_TicksInner (
        struct IPen * * TicksInner ) = 0;
    virtual HRESULT __stdcall get_Title (
        struct IAxisTitle * * Title ) = 0;
    virtual HRESULT __stdcall get_TitleSize (
        long * TitleSize ) = 0;
    virtual HRESULT __stdcall put_TitleSize (
        long TitleSize ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall AdjustMaxMin ( ) = 0;
    virtual HRESULT __stdcall CalcXPosValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CalcYPosValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CalcXSizeValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CalcYSizeValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CalcPosPoint (
        long SomeValue,
        double * Value ) = 0;
    virtual HRESULT __stdcall Clicked (
        long XCoord,
        long YCoord,
        VARIANT_BOOL * Y ) = 0;
    virtual HRESULT __stdcall CustomDraw (
        long APosLabels,
        long APosTitle,
        long APosAxis,
        VARIANT_BOOL GridVisible ) = 0;
    virtual HRESULT __stdcall IsDateTime (
        VARIANT_BOOL * IsDateTime ) = 0;
    virtual HRESULT __stdcall MaxXValue (
        double * MaxXValue ) = 0;
    virtual HRESULT __stdcall MaxYValue (
        double * MaxYValue ) = 0;
    virtual HRESULT __stdcall MinXValue (
        double * MinXValue ) = 0;
    virtual HRESULT __stdcall MinYValue (
        double * MinYValue ) = 0;
    virtual HRESULT __stdcall Scroll (
        double Offset,
        VARIANT_BOOL CheckLimits ) = 0;
    virtual HRESULT __stdcall SetMinMax (
        double AMin,
        double AMax ) = 0;
    virtual HRESULT __stdcall get_GridCentered (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_GridCentered (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_PositionPercent (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_PositionPercent (
        double Value ) = 0;
    virtual HRESULT __stdcall get_StartPosition (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_StartPosition (
        double Value ) = 0;
    virtual HRESULT __stdcall get_EndPosition (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_EndPosition (
        double Value ) = 0;
    virtual HRESULT __stdcall get_LogarithmicBase (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_LogarithmicBase (
        long Value ) = 0;
    virtual HRESULT __stdcall CustomDrawMinMax (
        long APosLabels,
        long APosTitle,
        long APosAxis,
        VARIANT_BOOL GridVisible,
        double AMinimum,
        double AMaximum,
        long AStartPosition,
        long AEndPosition ) = 0;
    virtual HRESULT __stdcall get_MinorGrid (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Otherside (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Otherside (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_AxisLink (
        long * Value ) = 0;
    virtual HRESULT __stdcall MaxVisibleSeriesValue (
        VARIANT_BOOL AllSeries,
        long SeriesIndex,
        double * Value ) = 0;
    virtual HRESULT __stdcall MinVisibleSeriesValue (
        VARIANT_BOOL AllSeries,
        long SeriesIndex,
        double * Value ) = 0;
    virtual HRESULT __stdcall CalcIncrement (
        double * Value ) = 0;
};

struct __declspec(uuid("b6c10493-fb89-11d4-93c9-006008a7eed4"))
IAxisLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Angle (
        long * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        long Angle ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_DateTimeFormat (
        BSTR * DateTimeFormat ) = 0;
    virtual HRESULT __stdcall put_DateTimeFormat (
        BSTR DateTimeFormat ) = 0;
    virtual HRESULT __stdcall get_Font (
        struct ITeeFont * * Font ) = 0;
    virtual HRESULT __stdcall FormattedValue (
        double SomeValue,
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall GetPos (
        long * GetPos ) = 0;
    virtual HRESULT __stdcall Height (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall MaxWidth (
        long * MaxWidth ) = 0;
    virtual HRESULT __stdcall get_OnAxis (
        VARIANT_BOOL * OnAxis ) = 0;
    virtual HRESULT __stdcall put_OnAxis (
        VARIANT_BOOL OnAxis ) = 0;
    virtual HRESULT __stdcall get_RoundFirstLabel (
        VARIANT_BOOL * RoundFirstLabel ) = 0;
    virtual HRESULT __stdcall put_RoundFirstLabel (
        VARIANT_BOOL RoundFirstLabel ) = 0;
    virtual HRESULT __stdcall get_Separation (
        long * Separation ) = 0;
    virtual HRESULT __stdcall put_Separation (
        long Separation ) = 0;
    virtual HRESULT __stdcall get_Size (
        long * Size ) = 0;
    virtual HRESULT __stdcall put_Size (
        long Size ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum EAxisLabelStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EAxisLabelStyle Style ) = 0;
    virtual HRESULT __stdcall get_ValueFormat (
        BSTR * ValueFormat ) = 0;
    virtual HRESULT __stdcall put_ValueFormat (
        BSTR ValueFormat ) = 0;
    virtual HRESULT __stdcall Width (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Multiline (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Multiline (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall TeeSplitInLines (
        BSTR * St,
        BSTR Separator ) = 0;
    virtual HRESULT __stdcall get_Exponent (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Exponent (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Align (
        enum EAxisLabelAlign * Value ) = 0;
    virtual HRESULT __stdcall put_Align (
        enum EAxisLabelAlign Value ) = 0;
};

struct __declspec(uuid("b6c10494-fb89-11d4-93c9-006008a7eed4"))
IAxisTitle : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Angle (
        long * Angle ) = 0;
    virtual HRESULT __stdcall put_Angle (
        long Angle ) = 0;
    virtual HRESULT __stdcall get_Caption (
        BSTR * Caption ) = 0;
    virtual HRESULT __stdcall put_Caption (
        BSTR Caption ) = 0;
    virtual HRESULT __stdcall get_Font (
        struct ITeeFont * * Font ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c10495-fb89-11d4-93c9-006008a7eed4"))
ITeeCustomShape : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_Font (
        struct ITeeFont * * Font ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Value ) = 0;
    virtual HRESULT __stdcall get_ShadowSize (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_ShadowSize (
        long Value ) = 0;
    virtual HRESULT __stdcall get_ShadowColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_ShadowColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_Transparent (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Transparent (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShapeStyle (
        enum EChartObjectShapeStyle * Value ) = 0;
    virtual HRESULT __stdcall put_ShapeStyle (
        enum EChartObjectShapeStyle Value ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        long Value ) = 0;
    virtual HRESULT __stdcall get_ShapeBounds (
        struct TeeRect * Value ) = 0;
    virtual HRESULT __stdcall get_Bevel (
        enum EPanelBevel * Value ) = 0;
    virtual HRESULT __stdcall put_Bevel (
        enum EPanelBevel Value ) = 0;
    virtual HRESULT __stdcall get_BevelWidth (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_BevelWidth (
        long Value ) = 0;
};

struct __declspec(uuid("b6c10496-fb89-11d4-93c9-006008a7eed4"))
IExport : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall CopyToClipboardBitmap ( ) = 0;
    virtual HRESULT __stdcall CopyToClipboardMetafile (
        VARIANT_BOOL Enhanced ) = 0;
    virtual HRESULT __stdcall SaveToBitmapFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall SaveToFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall SaveToJPEGFile (
        BSTR FileName,
        VARIANT_BOOL Gray,
        enum EJPEGPerformance Performance,
        long Quality,
        long Width,
        long Height ) = 0;
    virtual HRESULT __stdcall SaveToMetafile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall SaveToMetafileEnh (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall ShowExport ( ) = 0;
    virtual HRESULT __stdcall SaveChartDialog (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall ConvertTeeFileToText (
        BSTR InputFile,
        BSTR OutputFile ) = 0;
    virtual HRESULT __stdcall Stream (
        enum EStreamType StreamType,
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall get_asJPEG (
        struct IJPEGExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asPNG (
        struct IPNGExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asGIF (
        struct IGIFExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asBMP (
        struct IBMPExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asPCX (
        struct IPCXExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asMetafile (
        struct IMetafileExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asNative (
        struct INativeExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asXML (
        struct IXMLExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asXLS (
        struct IXLSExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asHTML (
        struct IHTMLExport * * Value ) = 0;
    virtual HRESULT __stdcall get_asText (
        struct ITextExport * * Value ) = 0;
    virtual HRESULT __stdcall EmailFile (
        BSTR FileName ) = 0;
};

struct __declspec(uuid("b6c10497-fb89-11d4-93c9-006008a7eed4"))
IImport : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall LoadFromFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall LoadFromURL (
        BSTR URL ) = 0;
    virtual HRESULT __stdcall LoadFromStream (
        VARIANT AStream ) = 0;
};

struct __declspec(uuid("b6c104a3-fb89-11d4-93c9-006008a7eed4"))
IScroll : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Enable (
        enum EChartScroll * Enable ) = 0;
    virtual HRESULT __stdcall put_Enable (
        enum EChartScroll Enable ) = 0;
    virtual HRESULT __stdcall get_MouseButton (
        enum EMouseButton * Value ) = 0;
    virtual HRESULT __stdcall put_MouseButton (
        enum EMouseButton Value ) = 0;
};

struct __declspec(uuid("b6c104a4-fb89-11d4-93c9-006008a7eed4"))
IZoom : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Enable (
        VARIANT_BOOL * Enable ) = 0;
    virtual HRESULT __stdcall put_Enable (
        VARIANT_BOOL Enable ) = 0;
    virtual HRESULT __stdcall get_Animated (
        VARIANT_BOOL * Animated ) = 0;
    virtual HRESULT __stdcall put_Animated (
        VARIANT_BOOL Animated ) = 0;
    virtual HRESULT __stdcall get_AnimatedSteps (
        long * AnimatedSteps ) = 0;
    virtual HRESULT __stdcall put_AnimatedSteps (
        long AnimatedSteps ) = 0;
    virtual HRESULT __stdcall Undo ( ) = 0;
    virtual HRESULT __stdcall ZoomRect (
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall get_Zoomed (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_MinimumPixels (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_MinimumPixels (
        long Value ) = 0;
    virtual HRESULT __stdcall get_MouseButton (
        enum EMouseButton * Value ) = 0;
    virtual HRESULT __stdcall put_MouseButton (
        enum EMouseButton Value ) = 0;
    virtual HRESULT __stdcall get_Direction (
        enum ETeeZoomDirection * Value ) = 0;
    virtual HRESULT __stdcall put_Direction (
        enum ETeeZoomDirection Value ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall ZoomPercent (
        double PercentZoom ) = 0;
};

struct __declspec(uuid("b6c104a5-fb89-11d4-93c9-006008a7eed4"))
IPrinter : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Detail (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Detail (
        long Value ) = 0;
    virtual HRESULT __stdcall get_MarginBottom (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_MarginBottom (
        long Value ) = 0;
    virtual HRESULT __stdcall get_MarginLeft (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_MarginLeft (
        long Value ) = 0;
    virtual HRESULT __stdcall get_MarginTop (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_MarginTop (
        long Value ) = 0;
    virtual HRESULT __stdcall get_MarginRight (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_MarginRight (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Orientation (
        enum EPrinterOrientation * Value ) = 0;
    virtual HRESULT __stdcall put_Orientation (
        enum EPrinterOrientation Value ) = 0;
    virtual HRESULT __stdcall Print ( ) = 0;
    virtual HRESULT __stdcall PrintLandscape ( ) = 0;
    virtual HRESULT __stdcall PrintPortrait ( ) = 0;
    virtual HRESULT __stdcall ShowPreview ( ) = 0;
    virtual HRESULT __stdcall PrintPartial (
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall BeginDoc ( ) = 0;
    virtual HRESULT __stdcall EndDoc ( ) = 0;
    virtual HRESULT __stdcall get_PrinterIndex (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_PrinterIndex (
        long Value ) = 0;
    virtual HRESULT __stdcall get_PrinterCount (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_PrinterDescription (
        long Index,
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall PrintChart ( ) = 0;
    virtual HRESULT __stdcall get_PageHeight (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_PageWidth (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_JobTitle (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_JobTitle (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_PrintProportional (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_PrintProportional (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall PrintPartialHandle (
        VARIANT DC,
        long Left,
        long Top,
        long Right,
        long Bottom ) = 0;
    virtual HRESULT __stdcall PrintPages (
        long FromPage,
        long ToPage ) = 0;
};

struct __declspec(uuid("b6c104a6-fb89-11d4-93c9-006008a7eed4"))
IWall : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Brush ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Color ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Pen ) = 0;
    virtual HRESULT __stdcall get_Size (
        long * Size ) = 0;
    virtual HRESULT __stdcall put_Size (
        long Size ) = 0;
    virtual HRESULT __stdcall get_Transparent (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Transparent (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Dark3D (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Dark3D (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Value ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        long Value ) = 0;
};

struct __declspec(uuid("b6c104a7-fb89-11d4-93c9-006008a7eed4"))
IWalls : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Bottom (
        struct IWall * * Bottom ) = 0;
    virtual HRESULT __stdcall get_Left (
        struct IWall * * Left ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * BackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR BackColor ) = 0;
    virtual HRESULT __stdcall get_Back (
        struct IWall * * Value ) = 0;
    virtual HRESULT __stdcall get_Right (
        struct IWall * * Value ) = 0;
};

struct __declspec(uuid("e517cb2c-1c48-11d5-9400-006008a7eed4"))
ITeeShapePosition : ITeeCustomShape
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CustomPosition (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_CustomPosition (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Left (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Left (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Top (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Top (
        long Value ) = 0;
};

struct __declspec(uuid("b6c104a9-fb89-11d4-93c9-006008a7eed4"))
IGradient : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Direction (
        enum EGradientDirection * Direction ) = 0;
    virtual HRESULT __stdcall put_Direction (
        enum EGradientDirection Direction ) = 0;
    virtual HRESULT __stdcall get_StartColor (
        OLE_COLOR * StartColor ) = 0;
    virtual HRESULT __stdcall put_StartColor (
        OLE_COLOR StartColor ) = 0;
    virtual HRESULT __stdcall get_EndColor (
        OLE_COLOR * EndColor ) = 0;
    virtual HRESULT __stdcall put_EndColor (
        OLE_COLOR EndColor ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_MidColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_MidColor (
        OLE_COLOR Value ) = 0;
};

struct __declspec(uuid("b6c104aa-fb89-11d4-93c9-006008a7eed4"))
IPage : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Next ( ) = 0;
    virtual HRESULT __stdcall Previous ( ) = 0;
    virtual HRESULT __stdcall get_MaxPointsPerPage (
        long * MaxPointsPerPage ) = 0;
    virtual HRESULT __stdcall put_MaxPointsPerPage (
        long MaxPointsPerPage ) = 0;
    virtual HRESULT __stdcall get_Current (
        long * Current ) = 0;
    virtual HRESULT __stdcall put_Current (
        long Current ) = 0;
    virtual HRESULT __stdcall get_ScaleLastPage (
        VARIANT_BOOL * ScaleLastPage ) = 0;
    virtual HRESULT __stdcall put_ScaleLastPage (
        VARIANT_BOOL ScaleLastPage ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Count ) = 0;
};

struct __declspec(uuid("b6c104ab-fb89-11d4-93c9-006008a7eed4"))
IPanel : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BackImageInside (
        VARIANT_BOOL * BackImageInside ) = 0;
    virtual HRESULT __stdcall put_BackImageInside (
        VARIANT_BOOL BackImageInside ) = 0;
    virtual HRESULT __stdcall get_BackImageMode (
        enum EBackImageMode * BackImageMode ) = 0;
    virtual HRESULT __stdcall put_BackImageMode (
        enum EBackImageMode BackImageMode ) = 0;
    virtual HRESULT __stdcall get_BevelInner (
        enum EPanelBevel * BevelInner ) = 0;
    virtual HRESULT __stdcall put_BevelInner (
        enum EPanelBevel BevelInner ) = 0;
    virtual HRESULT __stdcall get_BevelOuter (
        enum EPanelBevel * BevelOuter ) = 0;
    virtual HRESULT __stdcall put_BevelOuter (
        enum EPanelBevel BevelOuter ) = 0;
    virtual HRESULT __stdcall get_BevelWidth (
        long * BevelWidth ) = 0;
    virtual HRESULT __stdcall put_BevelWidth (
        long BevelWidth ) = 0;
    virtual HRESULT __stdcall get_BevelOffset (
        long * BevelOffset ) = 0;
    virtual HRESULT __stdcall put_BevelOffset (
        long BevelOffset ) = 0;
    virtual HRESULT __stdcall get_BorderStyle (
        enum EBorderStyle * BorderStyle ) = 0;
    virtual HRESULT __stdcall put_BorderStyle (
        enum EBorderStyle BorderStyle ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Color ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Gradient ) = 0;
    virtual HRESULT __stdcall get_MarginLeft (
        long * MarginLeft ) = 0;
    virtual HRESULT __stdcall put_MarginLeft (
        long MarginLeft ) = 0;
    virtual HRESULT __stdcall get_MarginTop (
        long * MarginTop ) = 0;
    virtual HRESULT __stdcall put_MarginTop (
        long MarginTop ) = 0;
    virtual HRESULT __stdcall get_MarginRight (
        long * MarginRight ) = 0;
    virtual HRESULT __stdcall put_MarginRight (
        long MarginRight ) = 0;
    virtual HRESULT __stdcall get_MarginBottom (
        long * MarginBottom ) = 0;
    virtual HRESULT __stdcall put_MarginBottom (
        long MarginBottom ) = 0;
    virtual HRESULT __stdcall BackImageClear ( ) = 0;
    virtual HRESULT __stdcall BackImageLoad (
        BSTR FileName ) = 0;
};

struct __declspec(uuid("b6c104ac-fb89-11d4-93c9-006008a7eed4"))
ISeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Active (
        VARIANT_BOOL * Active ) = 0;
    virtual HRESULT __stdcall put_Active (
        VARIANT_BOOL Active ) = 0;
    virtual HRESULT __stdcall get_asArea (
        struct IAreaSeries * * asArea ) = 0;
    virtual HRESULT __stdcall get_asArrow (
        struct IArrowSeries * * asArrow ) = 0;
    virtual HRESULT __stdcall get_asBar (
        struct IBarSeries * * asBar ) = 0;
    virtual HRESULT __stdcall get_asBubble (
        struct IBubbleSeries * * asBubble ) = 0;
    virtual HRESULT __stdcall get_asCandle (
        struct ICandleSeries * * asCandle ) = 0;
    virtual HRESULT __stdcall get_asErrorBar (
        struct IErrorBarSeries * * asErrorBar ) = 0;
    virtual HRESULT __stdcall get_asFastLine (
        struct IFastLineSeries * * asFastLine ) = 0;
    virtual HRESULT __stdcall get_asGantt (
        struct IGanttSeries * * asGantt ) = 0;
    virtual HRESULT __stdcall get_asHorizBar (
        struct IHorizBarSeries * * asHorizBar ) = 0;
    virtual HRESULT __stdcall get_asLine (
        struct ILineSeries * * asLine ) = 0;
    virtual HRESULT __stdcall get_asPie (
        struct IPieSeries * * asPie ) = 0;
    virtual HRESULT __stdcall get_asPoint (
        struct IPointSeries * * asPoint ) = 0;
    virtual HRESULT __stdcall get_asPolar (
        struct IPolarSeries * * asPolar ) = 0;
    virtual HRESULT __stdcall get_asShape (
        struct IShapeSeries * * asShape ) = 0;
    virtual HRESULT __stdcall get_asSurface (
        struct ISurfaceSeries * * asSurface ) = 0;
    virtual HRESULT __stdcall get_asVolume (
        struct IVolumeSeries * * asVolume ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Color ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Color ) = 0;
    virtual HRESULT __stdcall get_ColorEachPoint (
        VARIANT_BOOL * ColorEachPoint ) = 0;
    virtual HRESULT __stdcall put_ColorEachPoint (
        VARIANT_BOOL ColorEachPoint ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_Cursor (
        short * Cursor ) = 0;
    virtual HRESULT __stdcall put_Cursor (
        short Cursor ) = 0;
    virtual HRESULT __stdcall get_DataSource (
        VARIANT * DataSource ) = 0;
    virtual HRESULT __stdcall put_DataSource (
        VARIANT DataSource ) = 0;
    virtual HRESULT __stdcall get_FirstValueIndex (
        long * FirstValueIndex ) = 0;
    virtual HRESULT __stdcall get_FunctionType (
        struct ITeeFunction * * FunctionType ) = 0;
    virtual HRESULT __stdcall get_HorizontalAxis (
        enum EHorizontalAxis * HorizontalAxis ) = 0;
    virtual HRESULT __stdcall put_HorizontalAxis (
        enum EHorizontalAxis HorizontalAxis ) = 0;
    virtual HRESULT __stdcall get_LabelsSource (
        BSTR * LabelsSource ) = 0;
    virtual HRESULT __stdcall put_LabelsSource (
        BSTR LabelsSource ) = 0;
    virtual HRESULT __stdcall get_LastValueIndex (
        long * LastValueIndex ) = 0;
    virtual HRESULT __stdcall get_Marks (
        struct IMarks * * Marks ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_PercentFormat (
        BSTR * PercentFormat ) = 0;
    virtual HRESULT __stdcall put_PercentFormat (
        BSTR PercentFormat ) = 0;
    virtual HRESULT __stdcall get_PointColor (
        long Index,
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_PointColor (
        long Index,
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_PointLabel (
        long Index,
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_PointLabel (
        long Index,
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_PointValue (
        long Index,
        double * Value ) = 0;
    virtual HRESULT __stdcall put_PointValue (
        long Index,
        double Value ) = 0;
    virtual HRESULT __stdcall get_SeriesType (
        enum ESeriesClass * SeriesType ) = 0;
    virtual HRESULT __stdcall get_ShowInLegend (
        VARIANT_BOOL * ShowInLegend ) = 0;
    virtual HRESULT __stdcall put_ShowInLegend (
        VARIANT_BOOL ShowInLegend ) = 0;
    virtual HRESULT __stdcall get_Title (
        BSTR * Title ) = 0;
    virtual HRESULT __stdcall put_Title (
        BSTR Title ) = 0;
    virtual HRESULT __stdcall get_ValueFormat (
        BSTR * ValueFormat ) = 0;
    virtual HRESULT __stdcall put_ValueFormat (
        BSTR ValueFormat ) = 0;
    virtual HRESULT __stdcall get_ValueMarkText (
        long ValueIndex,
        BSTR * Index ) = 0;
    virtual HRESULT __stdcall get_VerticalAxis (
        enum EVerticalAxis * VerticalAxis ) = 0;
    virtual HRESULT __stdcall put_VerticalAxis (
        enum EVerticalAxis VerticalAxis ) = 0;
    virtual HRESULT __stdcall get_XValues (
        struct IValueList * * XValues ) = 0;
    virtual HRESULT __stdcall get_YValues (
        struct IValueList * * YValues ) = 0;
    virtual HRESULT __stdcall get_ZOrder (
        long * ZOrder ) = 0;
    virtual HRESULT __stdcall Add (
        double AValue,
        BSTR ALabel,
        OLE_COLOR Value,
        long * AColor ) = 0;
    virtual HRESULT __stdcall AddNull (
        BSTR SomeLabel,
        long * ALabel ) = 0;
    virtual HRESULT __stdcall AddXY (
        double AX,
        double AY,
        BSTR ALabel,
        OLE_COLOR Value,
        long * AColor ) = 0;
    virtual HRESULT __stdcall CalcXPos (
        long SomeValueIndex,
        long * ValueIndex ) = 0;
    virtual HRESULT __stdcall CalcXPosValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CalcXSizeValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CalcYPos (
        long SomeValueIndex,
        long * ValueIndex ) = 0;
    virtual HRESULT __stdcall CalcYPosValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CalcYSizeValue (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall CheckDataSource ( ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall Clicked (
        long XCoord,
        long YCoord,
        long * Y ) = 0;
    virtual HRESULT __stdcall Delete (
        long Index ) = 0;
    virtual HRESULT __stdcall FillSampleValues (
        long NumValues ) = 0;
    virtual HRESULT __stdcall GetMousePoint (
        long * GetMousePoint ) = 0;
    virtual HRESULT __stdcall IsNull (
        long ValueIndex,
        VARIANT_BOOL * Index ) = 0;
    virtual HRESULT __stdcall RefreshSeries ( ) = 0;
    virtual HRESULT __stdcall SetFunction (
        enum EFunctionType AFunction ) = 0;
    virtual HRESULT __stdcall SwapValues (
        long a,
        long b ) = 0;
    virtual HRESULT __stdcall XScreenToValue (
        long ScreenCoord,
        double * ScreenPos ) = 0;
    virtual HRESULT __stdcall XValueToText (
        double SomeValue,
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall YScreenToValue (
        long ScreenCoord,
        double * ScreenPos ) = 0;
    virtual HRESULT __stdcall YValueToText (
        double SomeValue,
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall get_asBezier (
        struct IBezierSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asContour (
        struct IContourSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asError (
        struct IErrorSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asPoint3D (
        struct IPoint3DSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asRadar (
        struct IRadarSeries * * Value ) = 0;
    virtual HRESULT __stdcall AddNullXY (
        double X,
        double Y,
        BSTR ALabel,
        long * Value ) = 0;
    virtual HRESULT __stdcall LegendString (
        long LegendIndex,
        enum ELegendTextStyle LegendTextStyle,
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall LegendItemColor (
        long LegendIndex,
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall CountLegendItems (
        long * Value ) = 0;
    virtual HRESULT __stdcall LegendToValueIndex (
        long LegendIndex,
        long * Value ) = 0;
    virtual HRESULT __stdcall VisibleCount (
        long * Value ) = 0;
    virtual HRESULT __stdcall AssignValues (
        long SeriesIndex ) = 0;
    virtual HRESULT __stdcall get_HorizontalAxisCustom (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_HorizontalAxisCustom (
        long Value ) = 0;
    virtual HRESULT __stdcall get_VerticalAxisCustom (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_VerticalAxisCustom (
        long Value ) = 0;
    virtual HRESULT __stdcall get_asClock (
        struct IClockSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asWindRose (
        struct IWindRoseSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asBar3D (
        struct IBar3DSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asImageBar (
        struct IImageBarSeries * * Value ) = 0;
    virtual HRESULT __stdcall DisconnectAxisCustom (
        VARIANT_BOOL IsHorizontal ) = 0;
    virtual HRESULT __stdcall get_MouseValues (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall AddArray (
        long ArraySize,
        VARIANT YArray,
        VARIANT XArray ) = 0;
    virtual HRESULT __stdcall get_Depth (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Depth (
        long Value ) = 0;
    virtual HRESULT __stdcall get_asDonut (
        struct IDonutSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asTriSurface (
        struct ITriSurfaceSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asBoxPlot (
        struct IBoxPlotSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asHorizBoxPlot (
        struct IHorizBoxPlotSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asHistogram (
        struct IHistogramSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asColorGrid (
        struct IColorGridSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asHorizLine (
        struct IHorizLineSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asBarJoin (
        struct IBarJoinSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asHighLow (
        struct IHighLowSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asWaterfall (
        struct IWaterfallSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asSmith (
        struct ISmithSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asPyramid (
        struct IPyramidSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asMap (
        struct IMapSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asFunnel (
        struct IFunnelSeries * * Value ) = 0;
    virtual HRESULT __stdcall get_asCalendar (
        struct ICalendarSeries * * Value ) = 0;
    virtual HRESULT __stdcall FreeDatasource (
        VARIANT_BOOL SurePrompt ) = 0;
    virtual HRESULT __stdcall get_SeriesLink (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_DatasourceType (
        enum EDatasourceType * Value ) = 0;
    virtual HRESULT __stdcall put_DatasourceType (
        enum EDatasourceType Value ) = 0;
    virtual HRESULT __stdcall get_ValueLists (
        struct IValueLists * * Value ) = 0;
    virtual HRESULT __stdcall IsNan (
        double Value,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall DeleteRange (
        long Start,
        long Quantity ) = 0;
};

struct __declspec(uuid("b6c104ad-fb89-11d4-93c9-006008a7eed4"))
ITeeFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Period (
        double * Period ) = 0;
    virtual HRESULT __stdcall put_Period (
        double Period ) = 0;
    virtual HRESULT __stdcall get_asCurveFit (
        struct ICurveFittingFunction * * asCurveFit ) = 0;
    virtual HRESULT __stdcall get_asExpAvg (
        struct IExpAvgFunction * * asExpAvg ) = 0;
    virtual HRESULT __stdcall get_asMovAvg (
        struct IMovingAvgFunction * * asMovAvg ) = 0;
    virtual HRESULT __stdcall get_PeriodStyle (
        enum EFunctionPeriodStyle * Value ) = 0;
    virtual HRESULT __stdcall put_PeriodStyle (
        enum EFunctionPeriodStyle Value ) = 0;
    virtual HRESULT __stdcall get_PeriodAlign (
        enum EFunctionPeriodAlign * Value ) = 0;
    virtual HRESULT __stdcall put_PeriodAlign (
        enum EFunctionPeriodAlign Value ) = 0;
    virtual HRESULT __stdcall get_asStdDeviation (
        struct IStdDeviationFunction * * Value ) = 0;
    virtual HRESULT __stdcall BeginUpdate ( ) = 0;
    virtual HRESULT __stdcall EndUpdate ( ) = 0;
    virtual HRESULT __stdcall get_asRSI (
        struct IRSIFunction * * Value ) = 0;
    virtual HRESULT __stdcall get_asBollinger (
        struct IBollingerFunction * * Value ) = 0;
    virtual HRESULT __stdcall get_asADX (
        struct IADXFunction * * Value ) = 0;
    virtual HRESULT __stdcall get_asMACD (
        struct IMACDFunction * * Value ) = 0;
    virtual HRESULT __stdcall get_asRMS (
        struct IRMSFunction * * Value ) = 0;
    virtual HRESULT __stdcall get_asAverage (
        struct IAverageFunction * * Value ) = 0;
};

struct __declspec(uuid("b6c104ae-fb89-11d4-93c9-006008a7eed4"))
IMarks : ITeeCustomShape
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Arrow (
        struct IPen * * Arrow ) = 0;
    virtual HRESULT __stdcall get_ArrowLength (
        long * ArrowLength ) = 0;
    virtual HRESULT __stdcall put_ArrowLength (
        long ArrowLength ) = 0;
    virtual HRESULT __stdcall get_BackColor (
        OLE_COLOR * BackColor ) = 0;
    virtual HRESULT __stdcall put_BackColor (
        OLE_COLOR BackColor ) = 0;
    virtual HRESULT __stdcall get_Clip (
        VARIANT_BOOL * Clip ) = 0;
    virtual HRESULT __stdcall put_Clip (
        VARIANT_BOOL Clip ) = 0;
    virtual HRESULT __stdcall get_Frame (
        struct IPen * * Frame ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum EMarkStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EMarkStyle Style ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_Positions (
        struct ISeriesMarksPositions * * Value ) = 0;
    virtual HRESULT __stdcall Clicked (
        long X,
        long Y,
        long * Value ) = 0;
    virtual HRESULT __stdcall get_ZPosition (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_ZPosition (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Angle (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Angle (
        long Value ) = 0;
    virtual HRESULT __stdcall get_DrawEvery (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_DrawEvery (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Multiline (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Multiline (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall ResetPositions ( ) = 0;
};

struct __declspec(uuid("b6c104af-fb89-11d4-93c9-006008a7eed4"))
IValueList : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        long * Count ) = 0;
    virtual HRESULT __stdcall get_DateTime (
        VARIANT_BOOL * DateTime ) = 0;
    virtual HRESULT __stdcall put_DateTime (
        VARIANT_BOOL DateTime ) = 0;
    virtual HRESULT __stdcall get_First (
        double * First ) = 0;
    virtual HRESULT __stdcall get_Last (
        double * Last ) = 0;
    virtual HRESULT __stdcall get_Maximum (
        double * Maximum ) = 0;
    virtual HRESULT __stdcall get_Minimum (
        double * Minimum ) = 0;
    virtual HRESULT __stdcall get_Order (
        enum EValueListOrder * Order ) = 0;
    virtual HRESULT __stdcall put_Order (
        enum EValueListOrder Order ) = 0;
    virtual HRESULT __stdcall get_Total (
        double * Total ) = 0;
    virtual HRESULT __stdcall get_TotalABS (
        double * TotalABS ) = 0;
    virtual HRESULT __stdcall get_Value (
        long Index,
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Value (
        long Index,
        double Value ) = 0;
    virtual HRESULT __stdcall get_ValueSource (
        BSTR * ValueSource ) = 0;
    virtual HRESULT __stdcall put_ValueSource (
        BSTR ValueSource ) = 0;
    virtual HRESULT __stdcall Delete (
        long Index ) = 0;
    virtual HRESULT __stdcall FillSequence ( ) = 0;
    virtual HRESULT __stdcall Locate (
        double SomeValue,
        long * Value ) = 0;
    virtual HRESULT __stdcall Sort ( ) = 0;
    virtual HRESULT __stdcall get_Modified (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Modified (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_TempValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_TempValue (
        double Value ) = 0;
    virtual HRESULT __stdcall get_Name (
        BSTR * Value ) = 0;
};

struct __declspec(uuid("b6c104bd-fb89-11d4-93c9-006008a7eed4"))
IPointer : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Brush ) = 0;
    virtual HRESULT __stdcall get_Draw3D (
        VARIANT_BOOL * Draw3D ) = 0;
    virtual HRESULT __stdcall put_Draw3D (
        VARIANT_BOOL Draw3D ) = 0;
    virtual HRESULT __stdcall get_HorizontalSize (
        long * HorizontalSize ) = 0;
    virtual HRESULT __stdcall put_HorizontalSize (
        long HorizontalSize ) = 0;
    virtual HRESULT __stdcall get_VerticalSize (
        long * VerticalSize ) = 0;
    virtual HRESULT __stdcall put_VerticalSize (
        long VerticalSize ) = 0;
    virtual HRESULT __stdcall get_InflateMargins (
        VARIANT_BOOL * InflateMargins ) = 0;
    virtual HRESULT __stdcall put_InflateMargins (
        VARIANT_BOOL InflateMargins ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Pen ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum EPointerStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EPointerStyle Style ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall get_Dark3D (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Dark3D (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall DrawPointer (
        long DC,
        VARIANT_BOOL Is3D,
        long px,
        long py,
        long tmpHoriz,
        long tmpVert,
        OLE_COLOR AColor,
        enum EPointerStyle AStyle ) = 0;
};

struct __declspec(uuid("b6c104be-fb89-11d4-93c9-006008a7eed4"))
ICustomSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Pointer (
        struct IPointer * * Pointer ) = 0;
    virtual HRESULT __stdcall get_Stairs (
        VARIANT_BOOL * Stairs ) = 0;
    virtual HRESULT __stdcall put_Stairs (
        VARIANT_BOOL Stairs ) = 0;
    virtual HRESULT __stdcall get_InvertedStairs (
        VARIANT_BOOL * InvertedStairs ) = 0;
    virtual HRESULT __stdcall put_InvertedStairs (
        VARIANT_BOOL InvertedStairs ) = 0;
    virtual HRESULT __stdcall get_LinePen (
        struct IPen * * LinePen ) = 0;
    virtual HRESULT __stdcall get_LineBrush (
        enum EBrushStyle * LineBrush ) = 0;
    virtual HRESULT __stdcall put_LineBrush (
        enum EBrushStyle LineBrush ) = 0;
    virtual HRESULT __stdcall get_ClickableLine (
        VARIANT_BOOL * ClickableLine ) = 0;
    virtual HRESULT __stdcall put_ClickableLine (
        VARIANT_BOOL ClickableLine ) = 0;
    virtual HRESULT __stdcall get_LineHeight (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_LineHeight (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Dark3D (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Dark3D (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_ColorEachLine (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ColorEachLine (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Outline (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        long Value ) = 0;
};

struct __declspec(uuid("b6c104bf-fb89-11d4-93c9-006008a7eed4"))
IAreaSeries : ICustomSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AreaBrush (
        enum EBrushStyle * AreaBrush ) = 0;
    virtual HRESULT __stdcall put_AreaBrush (
        enum EBrushStyle AreaBrush ) = 0;
    virtual HRESULT __stdcall get_AreaPen (
        struct IPen * * AreaPen ) = 0;
    virtual HRESULT __stdcall get_MultiArea (
        enum EMultiArea * MultiArea ) = 0;
    virtual HRESULT __stdcall put_MultiArea (
        enum EMultiArea MultiArea ) = 0;
    virtual HRESULT __stdcall GetOriginPos (
        long AValueIndex,
        long * ValueIndex ) = 0;
    virtual HRESULT __stdcall get_UseYOrigin (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_UseYOrigin (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_YOrigin (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_YOrigin (
        double Value ) = 0;
};

struct __declspec(uuid("b6c104c0-fb89-11d4-93c9-006008a7eed4"))
IPointSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Pointer (
        struct IPointer * * Pointer ) = 0;
    virtual HRESULT __stdcall get_Dark3D (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Dark3D (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c104c1-fb89-11d4-93c9-006008a7eed4"))
ILineSeries : ICustomSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Stacked (
        enum ECustomSeriesStack * Value ) = 0;
    virtual HRESULT __stdcall put_Stacked (
        enum ECustomSeriesStack Value ) = 0;
};

struct __declspec(uuid("b6c104c2-fb89-11d4-93c9-006008a7eed4"))
IFastLineSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LinePen (
        struct IPen * * LinePen ) = 0;
    virtual HRESULT __stdcall AddRealTime (
        double X,
        double Y,
        BSTR SomeLabel,
        OLE_COLOR SomeColor,
        long * AColor ) = 0;
    virtual HRESULT __stdcall get_DrawAllPoints (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DrawAllPoints (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c104c3-fb89-11d4-93c9-006008a7eed4"))
ICircledSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_XRadius (
        long * XRadius ) = 0;
    virtual HRESULT __stdcall put_XRadius (
        long XRadius ) = 0;
    virtual HRESULT __stdcall get_YRadius (
        long * YRadius ) = 0;
    virtual HRESULT __stdcall put_YRadius (
        long YRadius ) = 0;
    virtual HRESULT __stdcall get_XCenter (
        long * XCenter ) = 0;
    virtual HRESULT __stdcall get_YCenter (
        long * YCenter ) = 0;
    virtual HRESULT __stdcall get_CircleWidth (
        long * CircleWidth ) = 0;
    virtual HRESULT __stdcall get_CircleHeight (
        long * CircleHeight ) = 0;
    virtual HRESULT __stdcall get_CircleBackColor (
        OLE_COLOR * CircleBackColor ) = 0;
    virtual HRESULT __stdcall put_CircleBackColor (
        OLE_COLOR CircleBackColor ) = 0;
    virtual HRESULT __stdcall get_Circled (
        VARIANT_BOOL * Circled ) = 0;
    virtual HRESULT __stdcall put_Circled (
        VARIANT_BOOL Circled ) = 0;
    virtual HRESULT __stdcall get_RotationAngle (
        long * RotationAngle ) = 0;
    virtual HRESULT __stdcall put_RotationAngle (
        long RotationAngle ) = 0;
    virtual HRESULT __stdcall AngleToPoint (
        double Angle,
        double AXRadius,
        double AYRadius,
        struct TeePoint2D * Value ) = 0;
    virtual HRESULT __stdcall PointToAngle (
        long XCoord,
        long YCoord,
        double * Y ) = 0;
};

struct __declspec(uuid("b6c104c4-fb89-11d4-93c9-006008a7eed4"))
IPieSeries : ICircledSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_UsePatterns (
        VARIANT_BOOL * UsePatterns ) = 0;
    virtual HRESULT __stdcall put_UsePatterns (
        VARIANT_BOOL UsePatterns ) = 0;
    virtual HRESULT __stdcall get_PieValues (
        struct IValueList * * PieValues ) = 0;
    virtual HRESULT __stdcall get_Dark3D (
        VARIANT_BOOL * Dark3D ) = 0;
    virtual HRESULT __stdcall put_Dark3D (
        VARIANT_BOOL Dark3D ) = 0;
    virtual HRESULT __stdcall get_ExplodeBiggest (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_ExplodeBiggest (
        long Value ) = 0;
    virtual HRESULT __stdcall get_OtherSlice (
        struct IPieOtherSlice * * Value ) = 0;
    virtual HRESULT __stdcall get_ExplodedSlice (
        struct IExplodedSlices * * Value ) = 0;
    virtual HRESULT __stdcall get_PiePen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Shadow (
        struct ITeeShadow * * Value ) = 0;
    virtual HRESULT __stdcall get_AngleSize (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_AngleSize (
        long Value ) = 0;
};

struct __declspec(uuid("b6c104c5-fb89-11d4-93c9-006008a7eed4"))
IBubbleSeries : IPointSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RadiusValues (
        struct IValueList * * RadiusValues ) = 0;
    virtual HRESULT __stdcall get_Squared (
        VARIANT_BOOL * Squared ) = 0;
    virtual HRESULT __stdcall put_Squared (
        VARIANT_BOOL Squared ) = 0;
    virtual HRESULT __stdcall AddBubble (
        double AX,
        double AY,
        double ARadius,
        BSTR AXLabel,
        OLE_COLOR Value,
        long * AColor ) = 0;
};

struct __declspec(uuid("b6c104c7-fb89-11d4-93c9-006008a7eed4"))
IGanttSeries : IPointSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ConnectingPen (
        struct IPen * * ConnectingPen ) = 0;
    virtual HRESULT __stdcall get_EndValues (
        struct IValueList * * EndValues ) = 0;
    virtual HRESULT __stdcall get_StartValues (
        struct IValueList * * StartValues ) = 0;
    virtual HRESULT __stdcall get_NextTask (
        struct IValueList * * NextTask ) = 0;
    virtual HRESULT __stdcall AddGantt (
        double AStart,
        double AEnd,
        double AY,
        BSTR SomeLabel,
        long * AXLabel ) = 0;
    virtual HRESULT __stdcall AddGanttColor (
        double AStart,
        double AEnd,
        double AY,
        BSTR AXLabel,
        OLE_COLOR Value,
        long * AColor ) = 0;
};

struct __declspec(uuid("b6c104c8-fb89-11d4-93c9-006008a7eed4"))
IShapeSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Alignment (
        enum ETextAlignment * Alignment ) = 0;
    virtual HRESULT __stdcall put_Alignment (
        enum ETextAlignment Alignment ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Brush ) = 0;
    virtual HRESULT __stdcall get_Font (
        struct IChartFont * * Font ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Pen ) = 0;
    virtual HRESULT __stdcall get_RoundRectangle (
        VARIANT_BOOL * RoundRectangle ) = 0;
    virtual HRESULT __stdcall put_RoundRectangle (
        VARIANT_BOOL RoundRectangle ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum EShapeStyle * Style ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EShapeStyle Style ) = 0;
    virtual HRESULT __stdcall get_Text (
        struct IStrings * * Text ) = 0;
    virtual HRESULT __stdcall get_Transparent (
        VARIANT_BOOL * Transparent ) = 0;
    virtual HRESULT __stdcall put_Transparent (
        VARIANT_BOOL Transparent ) = 0;
    virtual HRESULT __stdcall get_X0 (
        double * X0 ) = 0;
    virtual HRESULT __stdcall put_X0 (
        double X0 ) = 0;
    virtual HRESULT __stdcall get_X1 (
        double * X1 ) = 0;
    virtual HRESULT __stdcall put_X1 (
        double X1 ) = 0;
    virtual HRESULT __stdcall get_XYStyle (
        enum EShapeXYStyle * XYStyle ) = 0;
    virtual HRESULT __stdcall put_XYStyle (
        enum EShapeXYStyle XYStyle ) = 0;
    virtual HRESULT __stdcall get_Y0 (
        double * Y0 ) = 0;
    virtual HRESULT __stdcall put_Y0 (
        double Y0 ) = 0;
    virtual HRESULT __stdcall get_Y1 (
        double * Y1 ) = 0;
    virtual HRESULT __stdcall put_Y1 (
        double Y1 ) = 0;
    virtual HRESULT __stdcall ShapeImageLoad (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall ShapeImageClear ( ) = 0;
    virtual HRESULT __stdcall get_VertAlign (
        enum ETeeVertAlign * Value ) = 0;
    virtual HRESULT __stdcall put_VertAlign (
        enum ETeeVertAlign Value ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Value ) = 0;
};

struct __declspec(uuid("b6c104c9-fb89-11d4-93c9-006008a7eed4"))
IArrowSeries : IPointSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ArrowHeight (
        long * ArrowHeight ) = 0;
    virtual HRESULT __stdcall put_ArrowHeight (
        long ArrowHeight ) = 0;
    virtual HRESULT __stdcall get_ArrowWidth (
        long * ArrowWidth ) = 0;
    virtual HRESULT __stdcall put_ArrowWidth (
        long ArrowWidth ) = 0;
    virtual HRESULT __stdcall get_EndXValues (
        struct IValueList * * EndXValues ) = 0;
    virtual HRESULT __stdcall get_EndYValues (
        struct IValueList * * EndYValues ) = 0;
    virtual HRESULT __stdcall get_StartXValues (
        struct IValueList * * StartXValues ) = 0;
    virtual HRESULT __stdcall get_StartYValues (
        struct IValueList * * StartYValues ) = 0;
    virtual HRESULT __stdcall AddArrow (
        double X0,
        double Y0,
        double X1,
        double Y1,
        BSTR ALabel,
        OLE_COLOR Value,
        long * AColor ) = 0;
};

struct __declspec(uuid("b6c104ca-fb89-11d4-93c9-006008a7eed4"))
ICustomBarSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MultiBar (
        enum EMultiBar * MultiBar ) = 0;
    virtual HRESULT __stdcall put_MultiBar (
        enum EMultiBar MultiBar ) = 0;
    virtual HRESULT __stdcall get_AutoMarkPosition (
        VARIANT_BOOL * AutoMarkPosition ) = 0;
    virtual HRESULT __stdcall put_AutoMarkPosition (
        VARIANT_BOOL AutoMarkPosition ) = 0;
    virtual HRESULT __stdcall get_BarBrush (
        struct IBrush * * BarBrush ) = 0;
    virtual HRESULT __stdcall get_BarPen (
        struct IPen * * BarPen ) = 0;
    virtual HRESULT __stdcall get_BarStyle (
        enum EBarStyle * BarStyle ) = 0;
    virtual HRESULT __stdcall put_BarStyle (
        enum EBarStyle BarStyle ) = 0;
    virtual HRESULT __stdcall get_BarWidthPercent (
        long * BarWidthPercent ) = 0;
    virtual HRESULT __stdcall put_BarWidthPercent (
        long BarWidthPercent ) = 0;
    virtual HRESULT __stdcall get_Dark3D (
        VARIANT_BOOL * Dark3D ) = 0;
    virtual HRESULT __stdcall put_Dark3D (
        VARIANT_BOOL Dark3D ) = 0;
    virtual HRESULT __stdcall get_OffsetPercent (
        long * OffsetPercent ) = 0;
    virtual HRESULT __stdcall put_OffsetPercent (
        long OffsetPercent ) = 0;
    virtual HRESULT __stdcall get_SideMargins (
        VARIANT_BOOL * SideMargins ) = 0;
    virtual HRESULT __stdcall put_SideMargins (
        VARIANT_BOOL SideMargins ) = 0;
    virtual HRESULT __stdcall get_UseOrigin (
        VARIANT_BOOL * UseOrigin ) = 0;
    virtual HRESULT __stdcall put_UseOrigin (
        VARIANT_BOOL UseOrigin ) = 0;
    virtual HRESULT __stdcall get_Origin (
        double * Origin ) = 0;
    virtual HRESULT __stdcall put_Origin (
        double Origin ) = 0;
    virtual HRESULT __stdcall GetOriginPos (
        long SomeValueIndex,
        long * ValueIndex ) = 0;
    virtual HRESULT __stdcall get_AutoBarSize (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AutoBarSize (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall BarImageLoad (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall BarImageClear ( ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Value ) = 0;
    virtual HRESULT __stdcall get_StackGroup (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_StackGroup (
        long Value ) = 0;
    virtual HRESULT __stdcall get_ConePercent (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_ConePercent (
        long Value ) = 0;
};

struct __declspec(uuid("b6c104cb-fb89-11d4-93c9-006008a7eed4"))
IBarSeries : ICustomBarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BarWidth (
        long * BarWidth ) = 0;
    virtual HRESULT __stdcall put_BarWidth (
        long BarWidth ) = 0;
};

struct __declspec(uuid("b6c104db-fb89-11d4-93c9-006008a7eed4"))
IHorizBarSeries : ICustomBarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_BarHeight (
        long * BarHeight ) = 0;
    virtual HRESULT __stdcall put_BarHeight (
        long BarHeight ) = 0;
};

struct __declspec(uuid("b6c104dc-fb89-11d4-93c9-006008a7eed4"))
ICandleSeries : IPointSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CandleStyle (
        enum ECandleStyle * CandleStyle ) = 0;
    virtual HRESULT __stdcall put_CandleStyle (
        enum ECandleStyle CandleStyle ) = 0;
    virtual HRESULT __stdcall get_CandleWidth (
        long * CandleWidth ) = 0;
    virtual HRESULT __stdcall put_CandleWidth (
        long CandleWidth ) = 0;
    virtual HRESULT __stdcall get_CloseValues (
        struct IValueList * * CloseValues ) = 0;
    virtual HRESULT __stdcall get_DateValues (
        struct IValueList * * DateValues ) = 0;
    virtual HRESULT __stdcall get_DownCloseColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_DownCloseColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_HighValues (
        struct IValueList * * HighValues ) = 0;
    virtual HRESULT __stdcall get_LowValues (
        struct IValueList * * LowValues ) = 0;
    virtual HRESULT __stdcall get_OpenValues (
        struct IValueList * * OpenValues ) = 0;
    virtual HRESULT __stdcall get_ShowCloseTick (
        VARIANT_BOOL * ShowCloseTick ) = 0;
    virtual HRESULT __stdcall put_ShowCloseTick (
        VARIANT_BOOL ShowCloseTick ) = 0;
    virtual HRESULT __stdcall get_ShowOpenTick (
        VARIANT_BOOL * ShowOpenTick ) = 0;
    virtual HRESULT __stdcall put_ShowOpenTick (
        VARIANT_BOOL ShowOpenTick ) = 0;
    virtual HRESULT __stdcall get_UpCloseColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_UpCloseColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall AddCandle (
        double DateValue,
        double OpenValue,
        double HighValue,
        double LowValue,
        double CloseValue,
        long * AClose ) = 0;
};

struct __declspec(uuid("b6c104dd-fb89-11d4-93c9-006008a7eed4"))
ICustomPolarSeries : ICircledSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AngleIncrement (
        double * AngleIncrement ) = 0;
    virtual HRESULT __stdcall put_AngleIncrement (
        double AngleIncrement ) = 0;
    virtual HRESULT __stdcall get_CloseCircle (
        VARIANT_BOOL * CloseCircle ) = 0;
    virtual HRESULT __stdcall put_CloseCircle (
        VARIANT_BOOL CloseCircle ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Pen ) = 0;
    virtual HRESULT __stdcall get_Pointer (
        struct IPointer * * Pointer ) = 0;
    virtual HRESULT __stdcall get_RadiusIncrement (
        double * RadiusIncrement ) = 0;
    virtual HRESULT __stdcall put_RadiusIncrement (
        double RadiusIncrement ) = 0;
    virtual HRESULT __stdcall get_AngleValues (
        struct IValueList * * AngleValues ) = 0;
    virtual HRESULT __stdcall get_RadiusValues (
        struct IValueList * * RadiusValues ) = 0;
    virtual HRESULT __stdcall DrawRing (
        double Value,
        long Z ) = 0;
    virtual HRESULT __stdcall get_CirclePen (
        struct IPen * * CirclePen ) = 0;
    virtual HRESULT __stdcall get_CircleLabels (
        struct ICircleLabels * * Value ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall LoadBackImage (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall ClearBackImage ( ) = 0;
    virtual HRESULT __stdcall get_ClockWiseLabels (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ClockWiseLabels (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_CircleLabelsInside (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_CircleLabelsInside (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        long Value ) = 0;
};

struct __declspec(uuid("b6c104de-fb89-11d4-93c9-006008a7eed4"))
ICustom3DSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddXYZ (
        double AX,
        double AY,
        double AZ,
        BSTR AXLabel,
        OLE_COLOR Value,
        long * AColor ) = 0;
    virtual HRESULT __stdcall MaxZValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall MinZValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall get_TimesZOrder (
        long * TimesZOrder ) = 0;
    virtual HRESULT __stdcall put_TimesZOrder (
        long TimesZOrder ) = 0;
    virtual HRESULT __stdcall get_ZValues (
        struct IValueList * * ZValues ) = 0;
    virtual HRESULT __stdcall get_ZValue (
        long Index,
        double * Value ) = 0;
    virtual HRESULT __stdcall put_ZValue (
        long Index,
        double Value ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Brush ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Pen ) = 0;
    virtual HRESULT __stdcall AddArrayXYZ (
        VARIANT XArray,
        VARIANT YArray,
        VARIANT ZArray ) = 0;
};

struct __declspec(uuid("b6c104df-fb89-11d4-93c9-006008a7eed4"))
IErrorBarSeries : IBarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ErrorPen (
        struct IPen * * ErrorPen ) = 0;
    virtual HRESULT __stdcall get_ErrorValues (
        struct IValueList * * ErrorValues ) = 0;
    virtual HRESULT __stdcall get_ErrorWidth (
        long * ErrorWidth ) = 0;
    virtual HRESULT __stdcall put_ErrorWidth (
        long ErrorWidth ) = 0;
    virtual HRESULT __stdcall get_ErrorWidthUnits (
        enum EErrorWidthUnits * ErrorWidthUnits ) = 0;
    virtual HRESULT __stdcall put_ErrorWidthUnits (
        enum EErrorWidthUnits ErrorWidthUnits ) = 0;
    virtual HRESULT __stdcall AddErrorBar (
        double AX,
        double AY,
        double AError,
        BSTR AXLabel,
        OLE_COLOR Value,
        long * AColor ) = 0;
};

struct __declspec(uuid("b6c104e0-fb89-11d4-93c9-006008a7eed4"))
IVolumeSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_VolumeValues (
        struct IValueList * * VolumeValues ) = 0;
    virtual HRESULT __stdcall get_LinePen (
        struct IPen * * LinePen ) = 0;
    virtual HRESULT __stdcall get_UseYOrigin (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_UseYOrigin (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_YOrigin (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_YOrigin (
        double Value ) = 0;
};

struct __declspec(uuid("b6c104e1-fb89-11d4-93c9-006008a7eed4"))
IAddFunction : IDispatch
{};

struct __declspec(uuid("b6c104e2-fb89-11d4-93c9-006008a7eed4"))
ISubtractFunction : IDispatch
{};

struct __declspec(uuid("b6c104e3-fb89-11d4-93c9-006008a7eed4"))
IMultiplyFunction : IDispatch
{};

struct __declspec(uuid("b6c104e4-fb89-11d4-93c9-006008a7eed4"))
IDivideFunction : IDispatch
{};

struct __declspec(uuid("b6c104e5-fb89-11d4-93c9-006008a7eed4"))
IAverageFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IncludeNulls (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IncludeNulls (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c104e6-fb89-11d4-93c9-006008a7eed4"))
IHighFunction : IDispatch
{};

struct __declspec(uuid("b6c104e7-fb89-11d4-93c9-006008a7eed4"))
ILowFunction : IDispatch
{};

struct __declspec(uuid("b6c104e8-fb89-11d4-93c9-006008a7eed4"))
ICurveFittingFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PolyDegree (
        long * PolyDegree ) = 0;
    virtual HRESULT __stdcall put_PolyDegree (
        long PolyDegree ) = 0;
    virtual HRESULT __stdcall get_TypeFitting (
        enum ETypeFitting * TypeFitting ) = 0;
    virtual HRESULT __stdcall put_TypeFitting (
        enum ETypeFitting TypeFitting ) = 0;
    virtual HRESULT __stdcall get_FirstPoint (
        long * FirstPoint ) = 0;
    virtual HRESULT __stdcall put_FirstPoint (
        long FirstPoint ) = 0;
    virtual HRESULT __stdcall get_LastPoint (
        long * LastPoint ) = 0;
    virtual HRESULT __stdcall put_LastPoint (
        long LastPoint ) = 0;
    virtual HRESULT __stdcall get_FirstCalcPoint (
        long * FirstCalcPoint ) = 0;
    virtual HRESULT __stdcall put_FirstCalcPoint (
        long FirstCalcPoint ) = 0;
    virtual HRESULT __stdcall get_LastCalcPoint (
        long * LastCalcPoint ) = 0;
    virtual HRESULT __stdcall put_LastCalcPoint (
        long LastCalcPoint ) = 0;
    virtual HRESULT __stdcall get_AnswerVector (
        long Index,
        double * Value ) = 0;
    virtual HRESULT __stdcall GetCurveYValue (
        double X,
        double * Value ) = 0;
};

struct __declspec(uuid("b6c104e9-fb89-11d4-93c9-006008a7eed4"))
IExpAvgFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Weight (
        double * Weight ) = 0;
    virtual HRESULT __stdcall put_Weight (
        double Weight ) = 0;
};

struct __declspec(uuid("b6c104ea-fb89-11d4-93c9-006008a7eed4"))
IMovingAvgFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Weighted (
        VARIANT_BOOL * Weighted ) = 0;
    virtual HRESULT __stdcall put_Weighted (
        VARIANT_BOOL Weighted ) = 0;
};

struct __declspec(uuid("b6c104eb-fb89-11d4-93c9-006008a7eed4"))
IChartFont : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Name (
        BSTR * Name ) = 0;
    virtual HRESULT __stdcall put_Name (
        BSTR Name ) = 0;
    virtual HRESULT __stdcall get_Size (
        long * Size ) = 0;
    virtual HRESULT __stdcall put_Size (
        long Size ) = 0;
    virtual HRESULT __stdcall get_Bold (
        VARIANT_BOOL * Bold ) = 0;
    virtual HRESULT __stdcall put_Bold (
        VARIANT_BOOL Bold ) = 0;
    virtual HRESULT __stdcall get_Italic (
        VARIANT_BOOL * Italic ) = 0;
    virtual HRESULT __stdcall put_Italic (
        VARIANT_BOOL Italic ) = 0;
    virtual HRESULT __stdcall get_Underline (
        VARIANT_BOOL * Underline ) = 0;
    virtual HRESULT __stdcall put_Underline (
        VARIANT_BOOL Underline ) = 0;
    virtual HRESULT __stdcall get_Strikethrough (
        VARIANT_BOOL * Strikethrough ) = 0;
    virtual HRESULT __stdcall put_Strikethrough (
        VARIANT_BOOL Strikethrough ) = 0;
    virtual HRESULT __stdcall get_Charset (
        short * Charset ) = 0;
    virtual HRESULT __stdcall put_Charset (
        short Charset ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Height (
        long Value ) = 0;
    virtual HRESULT __stdcall get_PixelsPerInch (
        long * Value ) = 0;
};

struct __declspec(uuid("b6c104ec-fb89-11d4-93c9-006008a7eed4"))
IMomentumFunction : IDispatch
{};

enum ECanvasBackMode
{
    cbmOpaque = 2,
    cbmTransparent = 1,
    cbmNone = 0
};

enum ECanvasTextAlign
{
    ctaLeft = 0,
    ctaCenter = 1,
    ctaRight = 2
};

struct __declspec(uuid("b6c104ed-fb89-11d4-93c9-006008a7eed4"))
IPieOtherSlice : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum EPieOtherStyle * Value ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EPieOtherStyle Value ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_Value (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Value (
        double Value ) = 0;
};

enum EPieOtherStyle
{
    poNone = 0,
    poBelowPercent = 1,
    poBelowValue = 2
};

struct __declspec(uuid("b6c10501-fb89-11d4-93c9-006008a7eed4"))
IExplodedSlices : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Value (
        long Index,
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Value (
        long Index,
        long Value ) = 0;
};

struct __declspec(uuid("b6c10502-fb89-11d4-93c9-006008a7eed4"))
ICustom3DPaletteSeries : ICustom3DSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddPalette (
        double Value,
        OLE_COLOR Color,
        long * Value1 ) = 0;
    virtual HRESULT __stdcall get_StartColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_StartColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_EndColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_EndColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_PaletteSteps (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_PaletteSteps (
        long Value ) = 0;
    virtual HRESULT __stdcall get_UsePalette (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_UsePalette (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_UseColorRange (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_UseColorRange (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall ClearPalette ( ) = 0;
    virtual HRESULT __stdcall CreateDefaultPalette (
        long NumSteps ) = 0;
    virtual HRESULT __stdcall GetSurfacePaletteColor (
        double Y,
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall get_MidColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_MidColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall CreateRangePalette ( ) = 0;
    virtual HRESULT __stdcall get_PaletteStyle (
        enum EPaletteStyle * Value ) = 0;
    virtual HRESULT __stdcall put_PaletteStyle (
        enum EPaletteStyle Value ) = 0;
};

struct __declspec(uuid("b6c10503-fb89-11d4-93c9-006008a7eed4"))
ICustom3DGridSeries : ICustom3DPaletteSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_NumXValues (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_NumXValues (
        long Value ) = 0;
    virtual HRESULT __stdcall get_NumZValues (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_NumZValues (
        long Value ) = 0;
    virtual HRESULT __stdcall GetXZValue (
        long X,
        long Z,
        double * Value ) = 0;
    virtual HRESULT __stdcall get_IrregularGrid (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IrregularGrid (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c10504-fb89-11d4-93c9-006008a7eed4"))
IBezierSeries : ICustomSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_NumBezierPoints (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_NumBezierPoints (
        long Value ) = 0;
    virtual HRESULT __stdcall get_BezierStyle (
        enum EBezierStyle * Value ) = 0;
    virtual HRESULT __stdcall put_BezierStyle (
        enum EBezierStyle Value ) = 0;
};

struct __declspec(uuid("b6c10505-fb89-11d4-93c9-006008a7eed4"))
IRadarSeries : ICustomPolarSeries
{};

struct __declspec(uuid("b6c10506-fb89-11d4-93c9-006008a7eed4"))
IErrorSeries : IErrorBarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ErrorStyle (
        enum EErrorSeriesStyle * Value ) = 0;
    virtual HRESULT __stdcall put_ErrorStyle (
        enum EErrorSeriesStyle Value ) = 0;
};

struct __declspec(uuid("b6c10507-fb89-11d4-93c9-006008a7eed4"))
IPoint3DSeries : ICustom3DSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DepthSize (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_DepthSize (
        double Value ) = 0;
    virtual HRESULT __stdcall get_Pointer (
        struct IPointer * * Value ) = 0;
    virtual HRESULT __stdcall get_LinePen (
        struct IPen * * Value ) = 0;
};

struct __declspec(uuid("b6c10508-fb89-11d4-93c9-006008a7eed4"))
ISurfaceSeries : ICustom3DGridSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DotFrame (
        VARIANT_BOOL * DotFrame ) = 0;
    virtual HRESULT __stdcall put_DotFrame (
        VARIANT_BOOL DotFrame ) = 0;
    virtual HRESULT __stdcall get_WireFrame (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_WireFrame (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_SideBrush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_SmoothPalette (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_SmoothPalette (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c10509-fb89-11d4-93c9-006008a7eed4"))
ISeriesMarksPositions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Position (
        long Index,
        struct ISeriesMarkPosition * * Value ) = 0;
    virtual HRESULT __stdcall Automatic (
        long Index ) = 0;
};

struct __declspec(uuid("b6c1050a-fb89-11d4-93c9-006008a7eed4"))
ISeriesMarkPosition : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ArrowFrom (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall get_ArrowTo (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall get_Custom (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Custom (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Height (
        long Value ) = 0;
    virtual HRESULT __stdcall get_LeftTop (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Width (
        long Value ) = 0;
};

struct __declspec(uuid("b6c1050b-fb89-11d4-93c9-006008a7eed4"))
IPolarSeries : ICustomPolarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddPolar (
        double Angle,
        double Value,
        BSTR ALabel,
        OLE_COLOR Valu,
        long * AColor ) = 0;
};

struct __declspec(uuid("b6c1050c-fb89-11d4-93c9-006008a7eed4"))
ICircleLabels : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Font (
        struct IChartFont * * Value ) = 0;
    virtual HRESULT __stdcall get_Rotated (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Rotated (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_DegreeSymbol (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_DegreeSymbol (
        BSTR Value ) = 0;
};

enum EErrorSeriesStyle
{
    essLeft = 0,
    essRight = 1,
    essLeftRight = 2,
    essTop = 3,
    essBottom = 4,
    essTopBottom = 5
};

enum EFunctionPeriodAlign
{
    paFirst = 0,
    paCenter = 1,
    paLast = 2
};

enum EFunctionPeriodStyle
{
    psNumPoints = 0,
    psRange = 1
};

struct __declspec(uuid("b6c1050d-fb89-11d4-93c9-006008a7eed4"))
ITrendFunction : IDispatch
{};

struct __declspec(uuid("b6c1050e-fb89-11d4-93c9-006008a7eed4"))
IStdDeviationFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Complete (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Complete (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c1050f-fb89-11d4-93c9-006008a7eed4"))
ICumulativeFunction : IDispatch
{};

struct __declspec(uuid("b6c10510-fb89-11d4-93c9-006008a7eed4"))
IRSIFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Style (
        enum ERSIStyle * Value ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum ERSIStyle Value ) = 0;
};

struct __declspec(uuid("b6c10511-fb89-11d4-93c9-006008a7eed4"))
ICountFunction : IDispatch
{};

struct __declspec(uuid("b6c10512-fb89-11d4-93c9-006008a7eed4"))
IEnvironment : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_NoPromptDBConnect (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_NoPromptDBConnect (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_IEPrintWithPage (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IEPrintWithPage (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall InternalRepaint ( ) = 0;
    virtual HRESULT __stdcall get_MouseWheelScroll (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_MouseWheelScroll (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_DecimalSeparator (
        BSTR * Value ) = 0;
};

struct __declspec(uuid("b6c10513-fb89-11d4-93c9-006008a7eed4"))
ITeeLinked : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Chart (
        struct ITChart * _arg1 ) = 0;
    virtual HRESULT __stdcall put_ChartLink (
        long _arg1 ) = 0;
    virtual HRESULT __stdcall AboutBox ( ) = 0;
};

struct __declspec(uuid("b6c10529-fb89-11d4-93c9-006008a7eed4"))
ITeeCommanderEvents : IDispatch
{};

struct __declspec(uuid("b6c1052a-fb89-11d4-93c9-006008a7eed4"))
ITeeCommander : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LabelValues (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_LabelValues (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_Enabled (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Enabled (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall put_Editor (
        struct ITeeEditor * _arg1 ) = 0;
    virtual HRESULT __stdcall put_Previewer (
        struct ITeePreviewer * _arg1 ) = 0;
    virtual HRESULT __stdcall put_EditorLink (
        long _arg1 ) = 0;
    virtual HRESULT __stdcall put_PreviewerLink (
        long _arg1 ) = 0;
    virtual HRESULT __stdcall get_Vertical (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Vertical (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Controls (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Controls (
        VARIANT Value ) = 0;
    virtual HRESULT __stdcall get_Buttons (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Buttons (
        VARIANT Value ) = 0;
};

struct __declspec(uuid("b6c1052b-fb89-11d4-93c9-006008a7eed4"))
ITeeListBox : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall UpdateSeries ( ) = 0;
    virtual HRESULT __stdcall get_SelectedSeries (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_SelectedSeries (
        long Value ) = 0;
    virtual HRESULT __stdcall get_ShowActive (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowActive (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShowColor (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowColor (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShowTitle (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowTitle (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShowIcon (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowIcon (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c1052c-fb89-11d4-93c9-006008a7eed4"))
ITeeListBoxEvents : IDispatch
{};

struct __declspec(uuid("b6c1052d-fb89-11d4-93c9-006008a7eed4"))
TeeListBox;
    // [ default ] interface ITeeListBox
    // [ default, source ] dispinterface ITeeListBoxEvents

struct __declspec(uuid("b6c1052e-fb89-11d4-93c9-006008a7eed4"))
ITeeEditor : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_EditorTitle (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_EditorTitle (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_DefaultPage (
        enum ETeeEditorPage * Value ) = 0;
    virtual HRESULT __stdcall put_DefaultPage (
        enum ETeeEditorPage Value ) = 0;
    virtual HRESULT __stdcall ShowEditor ( ) = 0;
    virtual HRESULT __stdcall get_AutoRepaint (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AutoRepaint (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShowPages (
        struct ITeeEditorShowPages * * Value ) = 0;
    virtual HRESULT __stdcall get_EditorLink (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Options (
        struct ITeeEditorOptions * * Value ) = 0;
};

struct __declspec(uuid("b6c1052f-fb89-11d4-93c9-006008a7eed4"))
ITeePreviewer : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_PreviewTitle (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_PreviewTitle (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall ShowPreview ( ) = 0;
    virtual HRESULT __stdcall get_PaperColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_PaperColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_PreviewerLink (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Maximized (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Maximized (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Options (
        struct ITeePreviewerOptions * * Value ) = 0;
};

struct __declspec(uuid("b6c10530-fb89-11d4-93c9-006008a7eed4"))
TeeEditor;
    // [ default ] interface ITeeEditor

struct __declspec(uuid("b6c10531-fb89-11d4-93c9-006008a7eed4"))
TeePreviewer;
    // [ default ] interface ITeePreviewer

struct __declspec(uuid("b6c10532-fb89-11d4-93c9-006008a7eed4"))
TeeCommander;
    // [ default ] interface ITeeCommander
    // [ default, source ] dispinterface ITeeCommanderEvents

enum ETeeEditorPage
{
    epMain = 0,
    epGeneral = 1,
    epAxis = 2,
    epTitles = 3,
    epLegend = 4,
    epPanel = 5,
    epPaging = 6,
    epWalls = 7,
    epAspect = 8,
    epSeriesGeneral = 9,
    epSeriesMarks = 10,
    epAllSeries = 11,
    epSeriesData = 12,
    epExport = 13,
    epTools = 14,
    epPrintPreview = 15,
    epOpenGL = 16
};

struct __declspec(uuid("b6c10533-fb89-11d4-93c9-006008a7eed4"))
ITeePoint2D : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_X (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_X (
        double Value ) = 0;
    virtual HRESULT __stdcall get_Y (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Y (
        double Value ) = 0;
};

struct __declspec(uuid("b6c10534-fb89-11d4-93c9-006008a7eed4"))
ITeePoint3D : ITeePoint2D
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Z (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Z (
        double Value ) = 0;
};

struct __declspec(uuid("b6c10535-fb89-11d4-93c9-006008a7eed4"))
ITeeEditorShowPages : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Main (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Main (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_General (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_General (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Axis (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Axis (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Titles (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Titles (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Legend (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Legend (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Panel (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Panel (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Paging (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Paging (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Walls (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Walls (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Aspect (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Aspect (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_SeriesGeneral (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_SeriesGeneral (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_SeriesMarks (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_SeriesMarks (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Tools (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Tools (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_SeriesData (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_SeriesData (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ExportDialog (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ExportDialog (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_PrintPreview (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_PrintPreview (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_OpenGL (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_OpenGL (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c10536-fb89-11d4-93c9-006008a7eed4"))
ITeeEditorOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Add (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Add (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Delete (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Delete (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Change (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Change (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Clone (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Clone (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_DataSource (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DataSource (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Title (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Title (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Help (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Help (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c10537-fb89-11d4-93c9-006008a7eed4"))
ITeePreviewerOptions : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ChangePrinter (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ChangePrinter (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_SetupPrinter (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_SetupPrinter (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ResizeImage (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ResizeImage (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_MoveImage (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_MoveImage (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ChangeDetail (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ChangeDetail (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ChangePaperOrientation (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ChangePaperOrientation (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ChangeMargins (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ChangeMargins (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_DragImage (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DragImage (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_PrintPanel (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_PrintPanel (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_AsBitmap (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AsBitmap (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c10538-fb89-11d4-93c9-006008a7eed4"))
ITeeOpenGL : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Active (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Active (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_AmbientLight (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_AmbientLight (
        long Value ) = 0;
    virtual HRESULT __stdcall get_LightPosition (
        struct ITeePoint3D * * Value ) = 0;
    virtual HRESULT __stdcall get_LightColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_LightColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_FontOutlines (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_FontOutlines (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShadeQuality (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShadeQuality (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b6c10539-fb89-11d4-93c9-006008a7eed4"))
IClockSeries : ICustomPolarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_RomanNumbers (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_RomanNumbers (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_PenHours (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_PenMinutes (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_PenSeconds (
        struct IPen * * Value ) = 0;
};

struct __declspec(uuid("b6c1053a-fb89-11d4-93c9-006008a7eed4"))
IWindRoseSeries : ICustomPolarSeries
{};

struct __declspec(uuid("b6c1053c-fb89-11d4-93c9-006008a7eed4"))
IBar3DSeries : IBarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddBar (
        double AX,
        double AY,
        double AOffset,
        BSTR ALabel,
        OLE_COLOR AColor,
        long * Value ) = 0;
    virtual HRESULT __stdcall get_OffsetValues (
        struct IValueList * * Value ) = 0;
};

struct __declspec(uuid("b6c1053b-fb89-11d4-93c9-006008a7eed4"))
IImageBarSeries : IBarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall LoadImage (
        BSTR FileName,
        VARIANT_BOOL * retval ) = 0;
    virtual HRESULT __stdcall ClearImage ( ) = 0;
    virtual HRESULT __stdcall get_ImageTiled (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ImageTiled (
        VARIANT_BOOL Value ) = 0;
};

enum EStreamType
{
    stJpeg = 0,
    stTeeTemplate = 1
};

struct __declspec(uuid("67d7aa1c-12fa-4f34-8eb2-b3e8646e0e5f"))
ITools : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_asTeeCursor (
        struct ICursorTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asDragMarks (
        struct IDragMarksTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asAxisArrow (
        struct IAxisArrowTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asDrawLine (
        struct IDrawLineTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asNearest (
        struct INearestTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asColorband (
        struct IColorBandTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asColorLine (
        struct IColorLineTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asRotate (
        struct IRotateTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asMarksTip (
        struct IMarksTipTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asChartImage (
        struct IChartImageTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asAnnotation (
        struct IAnnotationTool * * Value ) = 0;
    virtual HRESULT __stdcall get_asPageNum (
        struct IPageNumTool * * Value ) = 0;
    virtual HRESULT __stdcall get_Active (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Active (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Description (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall get_ToolType (
        enum EToolClass * Value ) = 0;
};

struct __declspec(uuid("62dd8655-f041-11d4-93b1-006008a7eed4"))
ICustomToolSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Series (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Series (
        VARIANT Value ) = 0;
};

enum ECursorToolStyle
{
    cssHorizontal = 0,
    cssVertical = 1,
    cssBoth = 2
};

struct __declspec(uuid("9ce4e780-4431-4504-948a-797d83c1e310"))
IDragMarksTool : ICustomToolSeries
{};

struct __declspec(uuid("11f8e071-f114-11d4-93b3-006008a7eed4"))
ICustomToolAxis : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Axis (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Axis (
        VARIANT Value ) = 0;
};

struct __declspec(uuid("5970102e-e487-4b12-88a8-a7930ef23e5d"))
IDrawLineTool : ICustomToolSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_FromPoint (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall get_ToPoint (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall AxisPoint (
        double X,
        double Y,
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall Clicked (
        long X,
        long Y,
        long * Value ) = 0;
    virtual HRESULT __stdcall DeleteSelected ( ) = 0;
    virtual HRESULT __stdcall ScreenPoint (
        long X,
        long Y,
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall get_Lines (
        struct IDrawLineList * * Value ) = 0;
    virtual HRESULT __stdcall get_Selected (
        long * Index ) = 0;
    virtual HRESULT __stdcall put_Selected (
        long Index ) = 0;
    virtual HRESULT __stdcall get_Button (
        enum EMouseButton * Value ) = 0;
    virtual HRESULT __stdcall put_Button (
        enum EMouseButton Value ) = 0;
    virtual HRESULT __stdcall get_EnableDraw (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_EnableDraw (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_EnableSelect (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_EnableSelect (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall AddLine (
        double FromX,
        double FromY,
        double ToX,
        double ToY,
        long * retval ) = 0;
};

struct __declspec(uuid("2eb35e28-80cf-4f35-9b6b-427e2ac1bfa6"))
INearestTool : ICustomToolSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_DrawLine (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DrawLine (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_FullRepaint (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_FullRepaint (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Size (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Size (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum ENearestToolStyle * Value ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum ENearestToolStyle Value ) = 0;
};

struct __declspec(uuid("c9f8e464-0b4b-4427-8678-363cf8e1955d"))
IColorBandTool : ICustomToolAxis
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_EndValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_EndValue (
        double Value ) = 0;
    virtual HRESULT __stdcall get_StartValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_StartValue (
        double Value ) = 0;
    virtual HRESULT __stdcall get_DrawBehind (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DrawBehind (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Value ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        long Value ) = 0;
};

struct __declspec(uuid("cde865c4-6b25-4604-8813-f0a65e51f1c8"))
IColorLineTool : ICustomToolAxis
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Value (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Value (
        double Value ) = 0;
    virtual HRESULT __stdcall get_AllowDrag (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AllowDrag (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall Clicked (
        long X,
        long Y,
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall get_DragRepaint (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DragRepaint (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_NoLimitDrag (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_NoLimitDrag (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("97763cec-4d57-4612-a799-05c6e19ac789"))
IRotateTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Active (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Active (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Button (
        enum EMouseButton * Value ) = 0;
    virtual HRESULT __stdcall put_Button (
        enum EMouseButton Value ) = 0;
    virtual HRESULT __stdcall Description (
        BSTR * Value ) = 0;
};

enum EAxisArrowToolPosition
{
    aaStart = 0,
    aaEnd = 1,
    aaBoth = 2
};

enum ENearestToolStyle
{
    hsNone = 0,
    hsCircle = 1,
    hsRectangle = 2,
    hsDiamond = 3
};

struct __declspec(uuid("c793db5d-e235-4248-87ad-e436822e64f2"))
IHorizLineSeries : ILineSeries
{};

struct __declspec(uuid("b4b8b973-32bf-40a8-8e07-efba557e13f8"))
IHighLowSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddHighLow (
        double AX,
        double AHigh,
        double ALow,
        BSTR AXLabel,
        OLE_COLOR AColor,
        long * Value ) = 0;
    virtual HRESULT __stdcall get_HighBrush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_HighPen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_HighValues (
        struct IValueList * * Value ) = 0;
    virtual HRESULT __stdcall get_LowBrush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_LowPen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_LowValues (
        struct IValueList * * Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
};

struct __declspec(uuid("3b2b9817-fbbf-11d4-93ca-006008a7eed4"))
ITitles : ITeeShapePosition
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AdjustFrame (
        VARIANT_BOOL * AdjustFrame ) = 0;
    virtual HRESULT __stdcall put_AdjustFrame (
        VARIANT_BOOL AdjustFrame ) = 0;
    virtual HRESULT __stdcall get_Alignment (
        enum ETitleAlignment * Alignment ) = 0;
    virtual HRESULT __stdcall put_Alignment (
        enum ETitleAlignment Alignment ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Brush ) = 0;
    virtual HRESULT __stdcall get_Frame (
        struct IPen * * Frame ) = 0;
    virtual HRESULT __stdcall get_Text (
        struct IStrings * * Text ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
};

enum EChartObjectShapeStyle
{
    fosRectangle = 0,
    fosRoundRectangle = 1
};

struct __declspec(uuid("750eb847-b333-4a73-8aee-9087f8b98d1e"))
IToolList : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Add (
        enum EToolClass ToolClass,
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Items (
        long Index,
        struct ITools * * Value ) = 0;
    virtual HRESULT __stdcall get_ControlDefault (
        long Index,
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall Delete (
        long Index ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Value ) = 0;
};

enum EToolClass
{
    tcCursor = 0,
    tcDragMarks = 1,
    tcAxisArrow = 2,
    tcDrawLine = 3,
    tcNearest = 4,
    tcColorband = 5,
    tcColorLine = 6,
    tcRotate = 7,
    tcMarksTip = 8,
    tcChartImage = 9,
    tcAnnotate = 10,
    tcPageNumber = 11
};

struct __declspec(uuid("cc476b13-71ac-463f-85e4-0aa8dd8b8bde"))
ILegendSymbol : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Continuous (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Continuous (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Position (
        enum ELegendSymbolPosition * Value ) = 0;
    virtual HRESULT __stdcall put_Position (
        enum ELegendSymbolPosition Value ) = 0;
    virtual HRESULT __stdcall get_Width (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Width (
        long Value ) = 0;
    virtual HRESULT __stdcall get_WidthUnits (
        enum ELegendSymbolSize * Value ) = 0;
    virtual HRESULT __stdcall put_WidthUnits (
        enum ELegendSymbolSize Value ) = 0;
};

enum ELegendSymbolPosition
{
    spLeft = 0,
    spRight = 1
};

enum ELegendSymbolSize
{
    lcsPercent = 0,
    lcsPixels = 1
};

struct __declspec(uuid("3b2b9819-fbbf-11d4-93ca-006008a7eed4"))
ITeeFont : IChartFont
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_InterCharSize (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_InterCharSize (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Shadow (
        struct ITeeShadow * * Value ) = 0;
};

struct __declspec(uuid("5101d067-ad02-426b-832e-a898af6e4f5e"))
ITeeShadow : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_HorizSize (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_HorizSize (
        long Value ) = 0;
    virtual HRESULT __stdcall get_VertSize (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_VertSize (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
};

enum ETeeZoomDirection
{
    tzdHorizontal = 0,
    tzdVertical = 1,
    tzdBoth = 2
};

struct __declspec(uuid("252a62f5-0c94-48e0-90ad-7b64200e53c1"))
ITeePreviewPanel : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_AllowResize (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AllowResize (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_AllowMove (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AllowMove (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_AsBitmap (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AsBitmap (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_DragImage (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_DragImage (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Orientation (
        enum ETeePreviewPanelOrientation * Value ) = 0;
    virtual HRESULT __stdcall put_Orientation (
        enum ETeePreviewPanelOrientation Value ) = 0;
    virtual HRESULT __stdcall get_PaperColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_PaperColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_ShadowColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_ShadowColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_ShadowSize (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_ShadowSize (
        long Value ) = 0;
    virtual HRESULT __stdcall get_ShowImage (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowImage (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Title (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_Title (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall Repaint ( ) = 0;
    virtual HRESULT __stdcall get_Panels (
        struct ITeePanelsList * * Value ) = 0;
    virtual HRESULT __stdcall AddChart (
        struct ITChart * Value ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Value ) = 0;
    virtual HRESULT __stdcall get_Margins (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall PrintPage ( ) = 0;
    virtual HRESULT __stdcall AddChartLink (
        long Value ) = 0;
};

struct __declspec(uuid("26f54550-bcb7-4cae-b817-0d681fef07f7"))
ITeePreviewPanelEvents : IDispatch
{};

struct __declspec(uuid("1fdb3feb-a12b-4a8f-9ba7-cc342949d9af"))
TeePreviewPanel;
    // [ default ] interface ITeePreviewPanel
    // [ default, source ] dispinterface ITeePreviewPanelEvents

enum ETeePreviewPanelOrientation
{
    ppoDefault = 0,
    ppoPortrait = 1,
    ppoLandscape = 2
};

struct __declspec(uuid("fd15f1c9-69d8-4fae-9a96-dd2e0b88ddd4"))
IChartGrid : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Col (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Col (
        long Value ) = 0;
    virtual HRESULT __stdcall get_ColCount (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Colwidths (
        long Index,
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Colwidths (
        long Index,
        long Value ) = 0;
    virtual HRESULT __stdcall get_EditorMode (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_EditorMode (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_GridHeight (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_GridWidth (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_LeftCol (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_LeftCol (
        long Value ) = 0;
    virtual HRESULT __stdcall get_GridLink (
        long * Value ) = 0;
    virtual HRESULT __stdcall RecalcDimensions ( ) = 0;
    virtual HRESULT __stdcall get_ShowLabels (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowLabels (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShowColors (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowColors (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ShowFields (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ShowFields (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall Cols (
        struct IChartGridCols * * Value ) = 0;
    virtual HRESULT __stdcall Rows (
        struct IChartGridRows * * Value ) = 0;
};

struct __declspec(uuid("74687f85-2744-11d5-9411-006008a7eed4"))
IChartGridEvents : IDispatch
{};

struct __declspec(uuid("9a52f188-2664-4615-b199-b9aa9ad22861"))
IChartGridNavigator : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall put_Grid (
        struct IChartGrid * _arg1 ) = 0;
    virtual HRESULT __stdcall put_GridLink (
        long _arg1 ) = 0;
    virtual HRESULT __stdcall EnableButtons ( ) = 0;
};

struct __declspec(uuid("a92b03a8-d509-4d2f-a953-b26ed8498ab0"))
ChartGridNavigator;
    // [ default ] interface IChartGridNavigator

struct __declspec(uuid("32268bd8-c0d1-473d-a13c-65ab4a58397b"))
IChartPageNavigator : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall EnableButtons ( ) = 0;
};

struct __declspec(uuid("c4bb55c5-9f2c-4b46-86f3-f3bb52a83b4e"))
ChartPageNavigator;
    // [ default ] interface IChartPageNavigator

struct __declspec(uuid("8a48ba34-fa69-4168-a477-026f96344c49"))
IChartEditorPanel : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SelectUnderMouse ( ) = 0;
    virtual HRESULT __stdcall get_BevelOuter (
        enum EPanelBevel * Value ) = 0;
    virtual HRESULT __stdcall put_BevelOuter (
        enum EPanelBevel Value ) = 0;
};

struct __declspec(uuid("2c37b0ad-0ff7-4e18-bf8a-b43469a2c414"))
ChartEditorPanel;
    // [ default ] interface IChartEditorPanel

enum ERSIStyle
{
    rsiOpenClose = 0,
    rsiClose = 1
};

enum ECustomSeriesStack
{
    cssNone = 0,
    cssOverlap = 1,
    cssStack = 2,
    cssStack100 = 3
};

enum ETeeVertAlign
{
    vaTop = 0,
    vaCenter = 1,
    vaBottom = 2
};

enum EAxisLabelAlign
{
    alDefault = 0,
    alOpposite = 1
};

struct __declspec(uuid("f66470fb-1309-47ff-a790-26e2e38bebd0"))
IContourLevels : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Items (
        long Index,
        struct IContourLevel * * Value ) = 0;
};

struct __declspec(uuid("0b304b42-253f-4221-8c87-8ad1fca76c94"))
IContourLevel : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_UpToValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_UpToValue (
        double Value ) = 0;
};

struct __declspec(uuid("41a5c203-7f36-4e11-840d-d41230760d8e"))
IDonutSeries : IPieSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DonutPercent (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_DonutPercent (
        long Value ) = 0;
};

struct __declspec(uuid("5b9827e5-3be4-4da3-9a6f-611bf900e4e1"))
ITriSurfaceSeries : ICustom3DPaletteSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Border (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_HideTriangles (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_HideTriangles (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_CacheTriangles (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_CacheTriangles (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("9df3ed1f-13b7-4a7e-803e-d4bb0c7e5900"))
ICustomBoxSeries : IPointSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_ExtrOut (
        struct IPointer * * Value ) = 0;
    virtual HRESULT __stdcall get_MedianPen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_MildOut (
        struct IPointer * * Value ) = 0;
    virtual HRESULT __stdcall get_Position (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Position (
        double Value ) = 0;
    virtual HRESULT __stdcall get_WhiskerLength (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_WhiskerLength (
        double Value ) = 0;
    virtual HRESULT __stdcall get_WhiskerPen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Box (
        struct IPointer * * Value ) = 0;
};

struct __declspec(uuid("cb0ce331-76cb-449c-9be7-fb69c03c3439"))
IHorizBoxPlotSeries : ICustomBoxSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall MaxYValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall MinYValue (
        double * Value ) = 0;
};

struct __declspec(uuid("70c80bd0-d36a-46c9-a9d6-ae8687ca0ea5"))
IHistogramSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_LinesPen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Transparency (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Transparency (
        long Value ) = 0;
    virtual HRESULT __stdcall get_LinePen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
};

struct __declspec(uuid("ba3a0e2d-cce7-4cf6-82d2-044b2a64ee59"))
IColorGridSeries : ICustom3DGridSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall MaxXValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall MaxYValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall MinYValue (
        double * Value ) = 0;
};

struct __declspec(uuid("da944291-24c8-4956-bee4-3129a675a49c"))
IBarJoinSeries : IBarSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_JoinPen (
        struct IPen * * Value ) = 0;
};

struct __declspec(uuid("4cc67466-2a11-45c6-924e-15e8b9f6b780"))
IWaterfallSeries : ISurfaceSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Waterfall (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Waterfall (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_WaterLines (
        struct IPen * * Value ) = 0;
};

struct __declspec(uuid("69a3c18d-728e-47b5-9144-7c58b59aa42d"))
ISmithSeries : ICircledSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CCirclePen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_CirclePen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_CLabels (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_CLabels (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_CLabelsFont (
        struct ITeeFont * * Value ) = 0;
    virtual HRESULT __stdcall get_ResistenceValues (
        struct IValueList * * Value ) = 0;
    virtual HRESULT __stdcall get_ReactanceValues (
        struct IValueList * * Value ) = 0;
    virtual HRESULT __stdcall get_Pointer (
        struct IPointer * * Value ) = 0;
    virtual HRESULT __stdcall get_RCirclePen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_RLabels (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_RLabels (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_RLabelsFont (
        struct ITeeFont * * Value ) = 0;
};

struct __declspec(uuid("fdb6ae9b-ae83-4cc3-ac6d-03cf0e133867"))
IPyramidSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_SizePercent (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_SizePercent (
        long Value ) = 0;
};

struct __declspec(uuid("33a0cf4e-ae1f-43db-a3cf-b7f9905085c8"))
IMapSeries : ICustom3DPaletteSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Shapes (
        struct IMapPolygonList * * Value ) = 0;
};

struct __declspec(uuid("dfbf9393-46fd-11d2-aec3-00400141862d"))
IContourSeries : ICustom3DGridSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_NumLevels (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_NumLevels (
        long Value ) = 0;
    virtual HRESULT __stdcall get_YPositionLevel (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_YPositionLevel (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_YPosition (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_YPosition (
        double Value ) = 0;
    virtual HRESULT __stdcall get_Levels (
        struct IContourLevels * * Value ) = 0;
    virtual HRESULT __stdcall get_AutomaticLevels (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AutomaticLevels (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall CreateAutoLevels ( ) = 0;
};

struct __declspec(uuid("2e375632-a81d-400a-9369-f609b6b914ac"))
IBoxPlotSeries : ICustomBoxSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall MaxXValue (
        double * Value ) = 0;
    virtual HRESULT __stdcall MinXValue (
        double * Value ) = 0;
};

struct __declspec(uuid("cf5dfd57-e60d-11d4-93a2-006008a7eed4"))
ITeePanelsList : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Delete (
        long Index ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Value ) = 0;
};

struct TeeRect
{
    long Left;
    long Top;
    long Right;
    long Bottom;
};

enum EBezierStyle
{
    bsWindows = 0,
    bsBezier3 = 1,
    bsBezier4 = 2
};

enum EPaletteStyle
{
    psPale = 0,
    psStrong = 1
};

struct __declspec(uuid("449c6526-c2f8-47ee-8386-32d20b488b8b"))
ICursorTool : ICustomToolSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_FollowMouse (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_FollowMouse (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Snap (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Snap (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum ECursorToolStyle * Value ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum ECursorToolStyle Value ) = 0;
    virtual HRESULT __stdcall get_XVal (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_XVal (
        double Value ) = 0;
    virtual HRESULT __stdcall get_YVal (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_YVal (
        double Value ) = 0;
};

struct __declspec(uuid("62dd8657-f041-11d4-93b1-006008a7eed4"))
IDrawLineList : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Items (
        long Index,
        struct IDrawLine * * Value ) = 0;
    virtual HRESULT __stdcall get_ControlDefault (
        long Index,
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall Delete (
        long Index ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Value ) = 0;
};

struct __declspec(uuid("62dd8659-f041-11d4-93b1-006008a7eed4"))
IDrawLine : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_EndPos (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall get_StartPos (
        struct ITeePoint2D * * Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall DrawHandles ( ) = 0;
    virtual HRESULT __stdcall EndHandle (
        struct TeeRect * Value ) = 0;
    virtual HRESULT __stdcall StartHandle (
        struct TeeRect * Value ) = 0;
};

struct __declspec(uuid("c746269f-0a39-4ec5-b52f-7e489835035b"))
IAxisArrowTool : ICustomToolAxis
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Position (
        enum EAxisArrowToolPosition * Value ) = 0;
    virtual HRESULT __stdcall put_Position (
        enum EAxisArrowToolPosition Value ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_Length (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Length (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_ScrollPercent (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_ScrollPercent (
        long Value ) = 0;
    virtual HRESULT __stdcall get_ScrollInverted (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ScrollInverted (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("235fb742-f8ed-11d4-93c8-006008a7eed4"))
IExportFormat : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Width (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Width (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Height (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Height (
        long Value ) = 0;
    virtual HRESULT __stdcall SaveToFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall SaveToStream (
        VARIANT * Value ) = 0;
};

struct __declspec(uuid("a77491e3-f825-11d4-93c7-006008a7eed4"))
IJPEGExport : IExportFormat
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_GrayScale (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_GrayScale (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_CompressionQuality (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_CompressionQuality (
        long Value ) = 0;
};

struct __declspec(uuid("235fb744-f8ed-11d4-93c8-006008a7eed4"))
IPNGExport : IExportFormat
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_CompressionLevel (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_CompressionLevel (
        long Value ) = 0;
};

struct __declspec(uuid("235fb746-f8ed-11d4-93c8-006008a7eed4"))
IGIFExport : IExportFormat
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Compression (
        enum EGIFCompression * Value ) = 0;
    virtual HRESULT __stdcall put_Compression (
        enum EGIFCompression Value ) = 0;
    virtual HRESULT __stdcall get_DitherMode (
        enum EGIFDitherMode * Value ) = 0;
    virtual HRESULT __stdcall put_DitherMode (
        enum EGIFDitherMode Value ) = 0;
    virtual HRESULT __stdcall get_ColorReduction (
        enum EGIFColorReduction * Value ) = 0;
    virtual HRESULT __stdcall put_ColorReduction (
        enum EGIFColorReduction Value ) = 0;
};

enum EGIFCompression
{
    gcLZW = 0,
    gcRLE = 1
};

enum EGIFDitherMode
{
    dmNearest = 0,
    dmFloydSteinberg = 1,
    dmStucki = 2,
    dmSierra = 3,
    dmJaJuNI = 4,
    dmSteveArche = 5,
    dmBurkes = 6
};

enum EGIFColorReduction
{
    rmNone = 0,
    rmWindows20 = 1,
    rmWindows256 = 2,
    rmWindowsGray = 3,
    rmMonochrome = 4,
    rmGrayScale = 5,
    rmNetscape = 6,
    rmQuantize = 7,
    rmQuantize256 = 8
};

struct __declspec(uuid("235fb74b-f8ed-11d4-93c8-006008a7eed4"))
IPCXExport : IExportFormat
{};

struct __declspec(uuid("235fb74d-f8ed-11d4-93c8-006008a7eed4"))
IMetafileExport : IExportFormat
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Enhanced (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Enhanced (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("235fb74f-f8ed-11d4-93c8-006008a7eed4"))
IBMPExport : IExportFormat
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Colors (
        enum EPixelFormat * Value ) = 0;
    virtual HRESULT __stdcall put_Colors (
        enum EPixelFormat Value ) = 0;
    virtual HRESULT __stdcall get_Monochrome (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Monochrome (
        VARIANT_BOOL Value ) = 0;
};

enum EPixelFormat
{
    pfDevice = 0,
    pf1bit = 1,
    pf4bit = 2,
    pf8bit = 3,
    pf15bit = 4,
    pf16bit = 5,
    pf24bit = 6,
    pf32bit = 7
};

struct __declspec(uuid("235fb753-f8ed-11d4-93c8-006008a7eed4"))
IMarksTipTool : ICustomToolSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_MouseAction (
        enum EMarkToolMouseAction * Value ) = 0;
    virtual HRESULT __stdcall put_MouseAction (
        enum EMarkToolMouseAction Value ) = 0;
    virtual HRESULT __stdcall get_Style (
        enum EMarkStyle * Value ) = 0;
    virtual HRESULT __stdcall put_Style (
        enum EMarkStyle Value ) = 0;
    virtual HRESULT __stdcall get_Delay (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Delay (
        long Value ) = 0;
};

struct __declspec(uuid("235fb755-f8ed-11d4-93c8-006008a7eed4"))
IChartImageTool : ICustomToolSeries
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall ImageLoad (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall ImageClear ( ) = 0;
};

enum EMarkToolMouseAction
{
    mtmMove = 0,
    mtmClick = 1
};

struct __declspec(uuid("6321aac0-d3f4-4dbd-8f84-27d98ec46046"))
IMomentumDivFunction : IDispatch
{};

struct __declspec(uuid("a3aa3639-e612-4d0a-ade7-57abdeb6ead6"))
IExpTrendFunction : IDispatch
{};

struct __declspec(uuid("d1a32481-6206-4cbf-8261-55141706e6ac"))
IExpMovAvgFunction : IDispatch
{};

struct __declspec(uuid("662c9054-0898-4f09-881e-5abb47978fb6"))
IRMSFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Complete (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Complete (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("b86ae373-50dc-4ae9-8872-8e3f9fc21a4e"))
IMACDFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Period2 (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Period2 (
        double Value ) = 0;
    virtual HRESULT __stdcall get_MACDExp (
        struct ISeries * * Value ) = 0;
    virtual HRESULT __stdcall get_Histogram (
        struct ISeries * * Value ) = 0;
    virtual HRESULT __stdcall get_Period3 (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Period3 (
        long Value ) = 0;
};

struct __declspec(uuid("aa13e17b-57fc-4364-9bbe-ee2095821f16"))
IStochasticFunction : IDispatch
{};

struct __declspec(uuid("2dcbf4ff-bedf-4140-b726-70996bb2b6e6"))
IBollingerFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Deviation (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Deviation (
        double Value ) = 0;
    virtual HRESULT __stdcall get_Exponential (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Exponential (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_LowBand (
        struct ISeries * * Value ) = 0;
};

struct __declspec(uuid("3752717c-15c0-4c15-9532-c9c371388028"))
IADXFunction : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_DMDown (
        struct ISeries * * Value ) = 0;
    virtual HRESULT __stdcall get_DMUp (
        struct ISeries * * Value ) = 0;
};

struct __declspec(uuid("ac690acd-0730-11d5-93e3-006008a7eed4"))
INativeExport : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall SaveToFile (
        BSTR FileName,
        VARIANT_BOOL IncludeData ) = 0;
    virtual HRESULT __stdcall SaveToStream (
        VARIANT_BOOL IncludeData,
        VARIANT * Value ) = 0;
};

struct __declspec(uuid("ac690acf-0730-11d5-93e3-006008a7eed4"))
IDataExport : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_IncludeHeader (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IncludeHeader (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_IncludeLabels (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IncludeLabels (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_IncludeIndex (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_IncludeIndex (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Series (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Series (
        VARIANT Value ) = 0;
    virtual HRESULT __stdcall SaveToFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall SaveToStream (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall AsString (
        BSTR * Value ) = 0;
};

struct __declspec(uuid("ac690ad1-0730-11d5-93e3-006008a7eed4"))
IXMLExport : IDataExport
{};

struct __declspec(uuid("ac690ad3-0730-11d5-93e3-006008a7eed4"))
IXLSExport : IDataExport
{};

struct __declspec(uuid("ac690ad5-0730-11d5-93e3-006008a7eed4"))
IHTMLExport : IDataExport
{};

struct __declspec(uuid("ac690ad7-0730-11d5-93e3-006008a7eed4"))
ITextExport : IDataExport
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_TextDelimiter (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_TextDelimiter (
        BSTR Value ) = 0;
};

struct __declspec(uuid("ac690ad9-0730-11d5-93e3-006008a7eed4"))
IMapPolygonList : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Add (
        long * Index ) = 0;
    virtual HRESULT __stdcall get_Polygon (
        long Index,
        struct IMapPolygon * * Value1 ) = 0;
};

struct __declspec(uuid("ac690adb-0730-11d5-93e3-006008a7eed4"))
IMapPolygon : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_Color (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_Color (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_Gradient (
        struct IGradient * * Value ) = 0;
    virtual HRESULT __stdcall get_ParentBrush (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ParentBrush (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ParentPen (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ParentPen (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_Z (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Z (
        double Value ) = 0;
    virtual HRESULT __stdcall AddXY (
        double X,
        double Y,
        long * Value ) = 0;
};

struct __declspec(uuid("01e6d0d8-07ee-11d5-93e4-006008a7eed4"))
IFunnelSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall AddSegment (
        double AQuote,
        double AOpportunity,
        BSTR ALabel,
        OLE_COLOR AColor,
        long * Index ) = 0;
    virtual HRESULT __stdcall Recalc ( ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_Pen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_LinesPen (
        struct IPen * * Value ) = 0;
    virtual HRESULT __stdcall get_AutoUpdate (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_AutoUpdate (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_QuotesSorted (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_QuotesSorted (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_DifferenceLimit (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_DifferenceLimit (
        double Value ) = 0;
    virtual HRESULT __stdcall get_AboveColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_AboveColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_WithinColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_WithinColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_BelowColor (
        OLE_COLOR * Value ) = 0;
    virtual HRESULT __stdcall put_BelowColor (
        OLE_COLOR Value ) = 0;
    virtual HRESULT __stdcall get_OpportunityValues (
        struct IValueList * * Value ) = 0;
    virtual HRESULT __stdcall get_QuoteValues (
        struct IValueList * * Value ) = 0;
};

struct __declspec(uuid("01e6d0da-07ee-11d5-93e4-006008a7eed4"))
ICalendarSeries : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Date (
        double * Value ) = 0;
    virtual HRESULT __stdcall put_Date (
        double Value ) = 0;
    virtual HRESULT __stdcall get_Days (
        struct ICalendarCell * * Value ) = 0;
    virtual HRESULT __stdcall get_Months (
        struct ICalendarCellUpper * * Value ) = 0;
    virtual HRESULT __stdcall get_Trailing (
        struct ICalendarCell * * Value ) = 0;
    virtual HRESULT __stdcall get_Sunday (
        struct ICalendarCell * * Value ) = 0;
    virtual HRESULT __stdcall get_Today (
        struct ICalendarCell * * Value ) = 0;
    virtual HRESULT __stdcall get_Weekdays (
        struct ICalendarCellUpper * * Value ) = 0;
    virtual HRESULT __stdcall NextMonth ( ) = 0;
    virtual HRESULT __stdcall PreviousMonth ( ) = 0;
    virtual HRESULT __stdcall RectCell (
        long Column,
        long Row,
        struct TeeRect * result ) = 0;
    virtual HRESULT __stdcall Rows (
        long * result ) = 0;
    virtual HRESULT __stdcall SeriesRect (
        struct TeeRect * result ) = 0;
    virtual HRESULT __stdcall get_NextButtonVisible (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_NextButtonVisible (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_PreviousButtonVisible (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_PreviousButtonVisible (
        VARIANT_BOOL Value ) = 0;
};

enum ETeeCommanderControls
{
    tcbNormal = 0,
    tcbSeparator = 1,
    tcbRotate = 2,
    tcbMove = 3,
    tcbZoom = 4,
    tcbDepth = 5,
    tcbEdit = 6,
    tcbPrintPreview = 7,
    tcbCopy = 8,
    tcbSave = 9,
    tcbLabel = 10,
    tcb3D = 11
};

struct __declspec(uuid("e517cb25-1c48-11d5-9400-006008a7eed4"))
ICalendarCell : ITeeCustomShape
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("e517cb27-1c48-11d5-9400-006008a7eed4"))
ICalendarCellUpper : ICalendarCell
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Format (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_Format (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_UpperCase (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_UpperCase (
        VARIANT_BOOL Value ) = 0;
};

struct __declspec(uuid("e517cb29-1c48-11d5-9400-006008a7eed4"))
IAnnotationTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Position (
        enum EAnnotationPosition * Value ) = 0;
    virtual HRESULT __stdcall put_Position (
        enum EAnnotationPosition Value ) = 0;
    virtual HRESULT __stdcall get_Shape (
        struct ITeeShapePanel * * Value ) = 0;
    virtual HRESULT __stdcall get_Text (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_Text (
        BSTR Value ) = 0;
};

enum EAnnotationPosition
{
    ppLeftTop = 0,
    ppLeftBottom = 1,
    ppRightTop = 2,
    ppRightBottom = 3
};

struct __declspec(uuid("b6c104a8-fb89-11d4-93c9-006008a7eed4"))
ILegend : ITeeShapePosition
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Alignment (
        enum ELegendAlignment * Alignment ) = 0;
    virtual HRESULT __stdcall put_Alignment (
        enum ELegendAlignment Alignment ) = 0;
    virtual HRESULT __stdcall get_ColorWidth (
        long * ColorWidth ) = 0;
    virtual HRESULT __stdcall put_ColorWidth (
        long ColorWidth ) = 0;
    virtual HRESULT __stdcall get_DividingLines (
        struct IPen * * DividingLines ) = 0;
    virtual HRESULT __stdcall get_FirstValue (
        long * FirstValue ) = 0;
    virtual HRESULT __stdcall put_FirstValue (
        long FirstValue ) = 0;
    virtual HRESULT __stdcall get_Frame (
        struct IPen * * Frame ) = 0;
    virtual HRESULT __stdcall get_HorizMargin (
        long * HorizMargin ) = 0;
    virtual HRESULT __stdcall put_HorizMargin (
        long HorizMargin ) = 0;
    virtual HRESULT __stdcall get_Inverted (
        VARIANT_BOOL * Inverted ) = 0;
    virtual HRESULT __stdcall put_Inverted (
        VARIANT_BOOL Inverted ) = 0;
    virtual HRESULT __stdcall get_LegendStyle (
        enum ELegendStyle * LegendStyle ) = 0;
    virtual HRESULT __stdcall put_LegendStyle (
        enum ELegendStyle LegendStyle ) = 0;
    virtual HRESULT __stdcall get_ResizeChart (
        VARIANT_BOOL * ResizeChart ) = 0;
    virtual HRESULT __stdcall put_ResizeChart (
        VARIANT_BOOL ResizeChart ) = 0;
    virtual HRESULT __stdcall get_TextStyle (
        enum ELegendTextStyle * TextStyle ) = 0;
    virtual HRESULT __stdcall put_TextStyle (
        enum ELegendTextStyle TextStyle ) = 0;
    virtual HRESULT __stdcall get_TopPos (
        long * TopPos ) = 0;
    virtual HRESULT __stdcall put_TopPos (
        long TopPos ) = 0;
    virtual HRESULT __stdcall get_VertMargin (
        long * VertMargin ) = 0;
    virtual HRESULT __stdcall put_VertMargin (
        long VertMargin ) = 0;
    virtual HRESULT __stdcall get_Visible (
        VARIANT_BOOL * Visible ) = 0;
    virtual HRESULT __stdcall put_Visible (
        VARIANT_BOOL Visible ) = 0;
    virtual HRESULT __stdcall Formatted (
        long SomeSeriesOrValueIndex,
        BSTR * SeriesOrValueIndex ) = 0;
    virtual HRESULT __stdcall FormattedValue (
        long aSeries,
        long SomeValueIndex,
        BSTR * ValueIndex ) = 0;
    virtual HRESULT __stdcall Clicked (
        long X,
        long Y,
        long * Value ) = 0;
    virtual HRESULT __stdcall get_MaxNumRows (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_MaxNumRows (
        long Value ) = 0;
    virtual HRESULT __stdcall BackImageLoad (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall BackImageClear ( ) = 0;
    virtual HRESULT __stdcall get_Brush (
        struct IBrush * * Value ) = 0;
    virtual HRESULT __stdcall get_Series (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Series (
        VARIANT Value ) = 0;
    virtual HRESULT __stdcall DrawLegend ( ) = 0;
    virtual HRESULT __stdcall get_FontSeriesColor (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_FontSeriesColor (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_CurrentPage (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_CurrentPage (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_Symbol (
        struct ILegendSymbol * * Value ) = 0;
    virtual HRESULT __stdcall get_CheckBoxes (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_CheckBoxes (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ColumnWidthAuto (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_ColumnWidthAuto (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_ColumnWidths (
        long Index,
        long * Value ) = 0;
    virtual HRESULT __stdcall put_ColumnWidths (
        long Index,
        long Value ) = 0;
    virtual HRESULT __stdcall get_Vertspacing (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Vertspacing (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Vertical (
        VARIANT_BOOL * Value ) = 0;
};

struct __declspec(uuid("e517cb2e-1c48-11d5-9400-006008a7eed4"))
IPageNumTool : IAnnotationTool
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Format (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_Format (
        BSTR Value ) = 0;
};

struct __declspec(uuid("4061f8f0-1d1c-11d5-9401-006008a7eed4"))
ISeriesTextSource : ITeeLinked
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall Close ( ) = 0;
    virtual HRESULT __stdcall Load ( ) = 0;
    virtual HRESULT __stdcall LoadAsStream (
        VARIANT AStream ) = 0;
    virtual HRESULT __stdcall LoadFromFile (
        BSTR FileName ) = 0;
    virtual HRESULT __stdcall LoadFromURL (
        BSTR URL ) = 0;
    virtual HRESULT __stdcall Open ( ) = 0;
    virtual HRESULT __stdcall get_Active (
        VARIANT_BOOL * Value ) = 0;
    virtual HRESULT __stdcall put_Active (
        VARIANT_BOOL Value ) = 0;
    virtual HRESULT __stdcall get_HeaderLines (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_HeaderLines (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Fields (
        struct ISeriesTextFields * * Value ) = 0;
    virtual HRESULT __stdcall get_FieldSeparator (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_FieldSeparator (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_FileName (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_FileName (
        BSTR Value ) = 0;
    virtual HRESULT __stdcall get_Series (
        VARIANT * Value ) = 0;
    virtual HRESULT __stdcall put_Series (
        VARIANT Value ) = 0;
    virtual HRESULT __stdcall AddField (
        BSTR AName,
        long AIndex,
        struct ISeriesTextField * * result ) = 0;
};

struct __declspec(uuid("4061f8f2-1d1c-11d5-9401-006008a7eed4"))
SeriesTextSource;
    // [ default ] interface ISeriesTextSource

struct __declspec(uuid("4061f8f5-1d1c-11d5-9401-006008a7eed4"))
ISeriesTextFields : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Items (
        long Index,
        struct ISeriesTextField * * Value ) = 0;
    virtual HRESULT __stdcall Clear ( ) = 0;
    virtual HRESULT __stdcall Delete (
        long Index ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Value ) = 0;
};

struct __declspec(uuid("4061f8f7-1d1c-11d5-9401-006008a7eed4"))
ISeriesTextField : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_FieldIndex (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_FieldIndex (
        long Value ) = 0;
    virtual HRESULT __stdcall get_FieldName (
        BSTR * Value ) = 0;
    virtual HRESULT __stdcall put_FieldName (
        BSTR Value ) = 0;
};

struct __declspec(uuid("f069c83a-876f-4c9d-b540-d761428606db"))
ChartGrid;
    // [ default ] interface IChartGrid
    // [ default, source ] dispinterface IChartGridEvents

enum EDatasourceType
{
    dstAllRecords = 0,
    dstSingleRecord = 1
};

struct __declspec(uuid("a841a3e5-3ed7-11d5-943d-006008a7eed4"))
IValueLists : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Count (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Items (
        long Index,
        struct IValueList * * Value ) = 0;
};

struct __declspec(uuid("22a5d9bb-b643-11d5-94f8-006008a7eed4"))
ITeeShapePanel : ITeeShapePosition
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Frame (
        struct IPen * * Value ) = 0;
};

struct __declspec(uuid("5253cebf-921c-4b2a-80d8-c23be8908900"))
IChartGridRows : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Row (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Row (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Heights (
        long Index,
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Heights (
        long Index,
        long Value ) = 0;
};

struct __declspec(uuid("8bfbfaf7-2fab-4f28-9c7b-08a2d1f157ae"))
IChartGridCols : IDispatch
{
    //
    // Raw methods provided by interface
    //

    virtual HRESULT __stdcall get_Col (
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Col (
        long Value ) = 0;
    virtual HRESULT __stdcall get_Count (
        long * Value ) = 0;
    virtual HRESULT __stdcall get_Widths (
        long Index,
        long * Value ) = 0;
    virtual HRESULT __stdcall put_Widths (
        long Index,
        long Value ) = 0;
};

enum EPenEndStyle
{
    esRound = 0,
    esSquare = 1,
    esFlat = 2
};

struct TeePoint2D
{
    long X;
    long Y;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_TeeChart =
    {0xb6c10482,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITChart =
    {0xb6c10485,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) DIID_ITChartEvents =
    {0xb6c10487,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_TChart =
    {0xb6c10489,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPen =
    {0xb6c1048b,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IBrush =
    {0xb6c1048d,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IStrings =
    {0xb6c1048e,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICanvas =
    {0xb6c1048f,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAspect =
    {0xb6c10490,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAxes =
    {0xb6c10491,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAxis =
    {0xb6c104c6,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAxisLabels =
    {0xb6c10493,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAxisTitle =
    {0xb6c10494,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeCustomShape =
    {0xb6c10495,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IExport =
    {0xb6c10496,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IImport =
    {0xb6c10497,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IScroll =
    {0xb6c104a3,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IZoom =
    {0xb6c104a4,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPrinter =
    {0xb6c104a5,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IWall =
    {0xb6c104a6,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IWalls =
    {0xb6c104a7,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeShapePosition =
    {0xe517cb2c,0x1c48,0x11d5,{0x94,0x00,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IGradient =
    {0xb6c104a9,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPage =
    {0xb6c104aa,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPanel =
    {0xb6c104ab,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISeries =
    {0xb6c104ac,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeFunction =
    {0xb6c104ad,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMarks =
    {0xb6c104ae,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IValueList =
    {0xb6c104af,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPointer =
    {0xb6c104bd,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICustomSeries =
    {0xb6c104be,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAreaSeries =
    {0xb6c104bf,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPointSeries =
    {0xb6c104c0,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ILineSeries =
    {0xb6c104c1,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IFastLineSeries =
    {0xb6c104c2,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICircledSeries =
    {0xb6c104c3,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPieSeries =
    {0xb6c104c4,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IBubbleSeries =
    {0xb6c104c5,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IGanttSeries =
    {0xb6c104c7,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IShapeSeries =
    {0xb6c104c8,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IArrowSeries =
    {0xb6c104c9,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICustomBarSeries =
    {0xb6c104ca,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IBarSeries =
    {0xb6c104cb,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IHorizBarSeries =
    {0xb6c104db,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICandleSeries =
    {0xb6c104dc,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICustomPolarSeries =
    {0xb6c104dd,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICustom3DSeries =
    {0xb6c104de,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IErrorBarSeries =
    {0xb6c104df,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IVolumeSeries =
    {0xb6c104e0,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAddFunction =
    {0xb6c104e1,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISubtractFunction =
    {0xb6c104e2,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMultiplyFunction =
    {0xb6c104e3,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IDivideFunction =
    {0xb6c104e4,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAverageFunction =
    {0xb6c104e5,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IHighFunction =
    {0xb6c104e6,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ILowFunction =
    {0xb6c104e7,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICurveFittingFunction =
    {0xb6c104e8,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IExpAvgFunction =
    {0xb6c104e9,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMovingAvgFunction =
    {0xb6c104ea,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IChartFont =
    {0xb6c104eb,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMomentumFunction =
    {0xb6c104ec,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPieOtherSlice =
    {0xb6c104ed,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IExplodedSlices =
    {0xb6c10501,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICustom3DPaletteSeries =
    {0xb6c10502,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICustom3DGridSeries =
    {0xb6c10503,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IBezierSeries =
    {0xb6c10504,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IRadarSeries =
    {0xb6c10505,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IErrorSeries =
    {0xb6c10506,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPoint3DSeries =
    {0xb6c10507,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISurfaceSeries =
    {0xb6c10508,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISeriesMarksPositions =
    {0xb6c10509,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISeriesMarkPosition =
    {0xb6c1050a,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPolarSeries =
    {0xb6c1050b,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICircleLabels =
    {0xb6c1050c,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITrendFunction =
    {0xb6c1050d,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IStdDeviationFunction =
    {0xb6c1050e,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICumulativeFunction =
    {0xb6c1050f,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IRSIFunction =
    {0xb6c10510,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICountFunction =
    {0xb6c10511,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IEnvironment =
    {0xb6c10512,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeLinked =
    {0xb6c10513,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) DIID_ITeeCommanderEvents =
    {0xb6c10529,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeCommander =
    {0xb6c1052a,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeListBox =
    {0xb6c1052b,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) DIID_ITeeListBoxEvents =
    {0xb6c1052c,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_TeeListBox =
    {0xb6c1052d,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeEditor =
    {0xb6c1052e,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeePreviewer =
    {0xb6c1052f,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_TeeEditor =
    {0xb6c10530,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_TeePreviewer =
    {0xb6c10531,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_TeeCommander =
    {0xb6c10532,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeePoint2D =
    {0xb6c10533,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeePoint3D =
    {0xb6c10534,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeEditorShowPages =
    {0xb6c10535,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeEditorOptions =
    {0xb6c10536,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeePreviewerOptions =
    {0xb6c10537,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeOpenGL =
    {0xb6c10538,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IClockSeries =
    {0xb6c10539,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IWindRoseSeries =
    {0xb6c1053a,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IBar3DSeries =
    {0xb6c1053c,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IImageBarSeries =
    {0xb6c1053b,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITools =
    {0x67d7aa1c,0x12fa,0x4f34,{0x8e,0xb2,0xb3,0xe8,0x64,0x6e,0x0e,0x5f}};
extern "C" const GUID __declspec(selectany) IID_ICustomToolSeries =
    {0x62dd8655,0xf041,0x11d4,{0x93,0xb1,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IDragMarksTool =
    {0x9ce4e780,0x4431,0x4504,{0x94,0x8a,0x79,0x7d,0x83,0xc1,0xe3,0x10}};
extern "C" const GUID __declspec(selectany) IID_ICustomToolAxis =
    {0x11f8e071,0xf114,0x11d4,{0x93,0xb3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IDrawLineTool =
    {0x5970102e,0xe487,0x4b12,{0x88,0xa8,0xa7,0x93,0x0e,0xf2,0x3e,0x5d}};
extern "C" const GUID __declspec(selectany) IID_INearestTool =
    {0x2eb35e28,0x80cf,0x4f35,{0x9b,0x6b,0x42,0x7e,0x2a,0xc1,0xbf,0xa6}};
extern "C" const GUID __declspec(selectany) IID_IColorBandTool =
    {0xc9f8e464,0x0b4b,0x4427,{0x86,0x78,0x36,0x3c,0xf8,0xe1,0x95,0x5d}};
extern "C" const GUID __declspec(selectany) IID_IColorLineTool =
    {0xcde865c4,0x6b25,0x4604,{0x88,0x13,0xf0,0xa6,0x5e,0x51,0xf1,0xc8}};
extern "C" const GUID __declspec(selectany) IID_IRotateTool =
    {0x97763cec,0x4d57,0x4612,{0xa7,0x99,0x05,0xc6,0xe1,0x9a,0xc7,0x89}};
extern "C" const GUID __declspec(selectany) IID_IHorizLineSeries =
    {0xc793db5d,0xe235,0x4248,{0x87,0xad,0xe4,0x36,0x82,0x2e,0x64,0xf2}};
extern "C" const GUID __declspec(selectany) IID_IHighLowSeries =
    {0xb4b8b973,0x32bf,0x40a8,{0x8e,0x07,0xef,0xba,0x55,0x7e,0x13,0xf8}};
extern "C" const GUID __declspec(selectany) IID_ITitles =
    {0x3b2b9817,0xfbbf,0x11d4,{0x93,0xca,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IToolList =
    {0x750eb847,0xb333,0x4a73,{0x8a,0xee,0x90,0x87,0xf8,0xb9,0x8d,0x1e}};
extern "C" const GUID __declspec(selectany) IID_ILegendSymbol =
    {0xcc476b13,0x71ac,0x463f,{0x85,0xe4,0x0a,0xa8,0xdd,0x8b,0x8b,0xde}};
extern "C" const GUID __declspec(selectany) IID_ITeeFont =
    {0x3b2b9819,0xfbbf,0x11d4,{0x93,0xca,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeShadow =
    {0x5101d067,0xad02,0x426b,{0x83,0x2e,0xa8,0x98,0xaf,0x6e,0x4f,0x5e}};
extern "C" const GUID __declspec(selectany) IID_ITeePreviewPanel =
    {0x252a62f5,0x0c94,0x48e0,{0x90,0xad,0x7b,0x64,0x20,0x0e,0x53,0xc1}};
extern "C" const GUID __declspec(selectany) DIID_ITeePreviewPanelEvents =
    {0x26f54550,0xbcb7,0x4cae,{0xb8,0x17,0x0d,0x68,0x1f,0xef,0x07,0xf7}};
extern "C" const GUID __declspec(selectany) CLSID_TeePreviewPanel =
    {0x1fdb3feb,0xa12b,0x4a8f,{0x9b,0xa7,0xcc,0x34,0x29,0x49,0xd9,0xaf}};
extern "C" const GUID __declspec(selectany) IID_IChartGrid =
    {0xfd15f1c9,0x69d8,0x4fae,{0x9a,0x96,0xdd,0x2e,0x0b,0x88,0xdd,0xd4}};
extern "C" const GUID __declspec(selectany) DIID_IChartGridEvents =
    {0x74687f85,0x2744,0x11d5,{0x94,0x11,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IChartGridNavigator =
    {0x9a52f188,0x2664,0x4615,{0xb1,0x99,0xb9,0xaa,0x9a,0xd2,0x28,0x61}};
extern "C" const GUID __declspec(selectany) CLSID_ChartGridNavigator =
    {0xa92b03a8,0xd509,0x4d2f,{0xa9,0x53,0xb2,0x6e,0xd8,0x49,0x8a,0xb0}};
extern "C" const GUID __declspec(selectany) IID_IChartPageNavigator =
    {0x32268bd8,0xc0d1,0x473d,{0xa1,0x3c,0x65,0xab,0x4a,0x58,0x39,0x7b}};
extern "C" const GUID __declspec(selectany) CLSID_ChartPageNavigator =
    {0xc4bb55c5,0x9f2c,0x4b46,{0x86,0xf3,0xf3,0xbb,0x52,0xa8,0x3b,0x4e}};
extern "C" const GUID __declspec(selectany) IID_IChartEditorPanel =
    {0x8a48ba34,0xfa69,0x4168,{0xa4,0x77,0x02,0x6f,0x96,0x34,0x4c,0x49}};
extern "C" const GUID __declspec(selectany) CLSID_ChartEditorPanel =
    {0x2c37b0ad,0x0ff7,0x4e18,{0xbf,0x8a,0xb4,0x34,0x69,0xa2,0xc4,0x14}};
extern "C" const GUID __declspec(selectany) IID_IContourLevels =
    {0xf66470fb,0x1309,0x47ff,{0xa7,0x90,0x26,0xe2,0xe3,0x8b,0xeb,0xd0}};
extern "C" const GUID __declspec(selectany) IID_IContourLevel =
    {0x0b304b42,0x253f,0x4221,{0x8c,0x87,0x8a,0xd1,0xfc,0xa7,0x6c,0x94}};
extern "C" const GUID __declspec(selectany) IID_IDonutSeries =
    {0x41a5c203,0x7f36,0x4e11,{0x84,0x0d,0xd4,0x12,0x30,0x76,0x0d,0x8e}};
extern "C" const GUID __declspec(selectany) IID_ITriSurfaceSeries =
    {0x5b9827e5,0x3be4,0x4da3,{0x9a,0x6f,0x61,0x1b,0xf9,0x00,0xe4,0xe1}};
extern "C" const GUID __declspec(selectany) IID_ICustomBoxSeries =
    {0x9df3ed1f,0x13b7,0x4a7e,{0x80,0x3e,0xd4,0xbb,0x0c,0x7e,0x59,0x00}};
extern "C" const GUID __declspec(selectany) IID_IHorizBoxPlotSeries =
    {0xcb0ce331,0x76cb,0x449c,{0x9b,0xe7,0xfb,0x69,0xc0,0x3c,0x34,0x39}};
extern "C" const GUID __declspec(selectany) IID_IHistogramSeries =
    {0x70c80bd0,0xd36a,0x46c9,{0xa9,0xd6,0xae,0x86,0x87,0xca,0x0e,0xa5}};
extern "C" const GUID __declspec(selectany) IID_IColorGridSeries =
    {0xba3a0e2d,0xcce7,0x4cf6,{0x82,0xd2,0x04,0x4b,0x2a,0x64,0xee,0x59}};
extern "C" const GUID __declspec(selectany) IID_IBarJoinSeries =
    {0xda944291,0x24c8,0x4956,{0xbe,0xe4,0x31,0x29,0xa6,0x75,0xa4,0x9c}};
extern "C" const GUID __declspec(selectany) IID_IWaterfallSeries =
    {0x4cc67466,0x2a11,0x45c6,{0x92,0x4e,0x15,0xe8,0xb9,0xf6,0xb7,0x80}};
extern "C" const GUID __declspec(selectany) IID_ISmithSeries =
    {0x69a3c18d,0x728e,0x47b5,{0x91,0x44,0x7c,0x58,0xb5,0x9a,0xa4,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IPyramidSeries =
    {0xfdb6ae9b,0xae83,0x4cc3,{0xac,0x6d,0x03,0xcf,0x0e,0x13,0x38,0x67}};
extern "C" const GUID __declspec(selectany) IID_IMapSeries =
    {0x33a0cf4e,0xae1f,0x43db,{0xa3,0xcf,0xb7,0xf9,0x90,0x50,0x85,0xc8}};
extern "C" const GUID __declspec(selectany) IID_IContourSeries =
    {0xdfbf9393,0x46fd,0x11d2,{0xae,0xc3,0x00,0x40,0x01,0x41,0x86,0x2d}};
extern "C" const GUID __declspec(selectany) IID_IBoxPlotSeries =
    {0x2e375632,0xa81d,0x400a,{0x93,0x69,0xf6,0x09,0xb6,0xb9,0x14,0xac}};
extern "C" const GUID __declspec(selectany) IID_ITeePanelsList =
    {0xcf5dfd57,0xe60d,0x11d4,{0x93,0xa2,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICursorTool =
    {0x449c6526,0xc2f8,0x47ee,{0x83,0x86,0x32,0xd2,0x0b,0x48,0x8b,0x8b}};
extern "C" const GUID __declspec(selectany) IID_IDrawLineList =
    {0x62dd8657,0xf041,0x11d4,{0x93,0xb1,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IDrawLine =
    {0x62dd8659,0xf041,0x11d4,{0x93,0xb1,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAxisArrowTool =
    {0xc746269f,0x0a39,0x4ec5,{0xb5,0x2f,0x7e,0x48,0x98,0x35,0x03,0x5b}};
extern "C" const GUID __declspec(selectany) IID_IExportFormat =
    {0x235fb742,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IJPEGExport =
    {0xa77491e3,0xf825,0x11d4,{0x93,0xc7,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPNGExport =
    {0x235fb744,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IGIFExport =
    {0x235fb746,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPCXExport =
    {0x235fb74b,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMetafileExport =
    {0x235fb74d,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IBMPExport =
    {0x235fb74f,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMarksTipTool =
    {0x235fb753,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IChartImageTool =
    {0x235fb755,0xf8ed,0x11d4,{0x93,0xc8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMomentumDivFunction =
    {0x6321aac0,0xd3f4,0x4dbd,{0x8f,0x84,0x27,0xd9,0x8e,0xc4,0x60,0x46}};
extern "C" const GUID __declspec(selectany) IID_IExpTrendFunction =
    {0xa3aa3639,0xe612,0x4d0a,{0xad,0xe7,0x57,0xab,0xde,0xb6,0xea,0xd6}};
extern "C" const GUID __declspec(selectany) IID_IExpMovAvgFunction =
    {0xd1a32481,0x6206,0x4cbf,{0x82,0x61,0x55,0x14,0x17,0x06,0xe6,0xac}};
extern "C" const GUID __declspec(selectany) IID_IRMSFunction =
    {0x662c9054,0x0898,0x4f09,{0x88,0x1e,0x5a,0xbb,0x47,0x97,0x8f,0xb6}};
extern "C" const GUID __declspec(selectany) IID_IMACDFunction =
    {0xb86ae373,0x50dc,0x4ae9,{0x88,0x72,0x8e,0x3f,0x9f,0xc2,0x1a,0x4e}};
extern "C" const GUID __declspec(selectany) IID_IStochasticFunction =
    {0xaa13e17b,0x57fc,0x4364,{0x9b,0xbe,0xee,0x20,0x95,0x82,0x1f,0x16}};
extern "C" const GUID __declspec(selectany) IID_IBollingerFunction =
    {0x2dcbf4ff,0xbedf,0x4140,{0xb7,0x26,0x70,0x99,0x6b,0xb2,0xb6,0xe6}};
extern "C" const GUID __declspec(selectany) IID_IADXFunction =
    {0x3752717c,0x15c0,0x4c15,{0x95,0x32,0xc9,0xc3,0x71,0x38,0x80,0x28}};
extern "C" const GUID __declspec(selectany) IID_INativeExport =
    {0xac690acd,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IDataExport =
    {0xac690acf,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IXMLExport =
    {0xac690ad1,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IXLSExport =
    {0xac690ad3,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IHTMLExport =
    {0xac690ad5,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITextExport =
    {0xac690ad7,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMapPolygonList =
    {0xac690ad9,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IMapPolygon =
    {0xac690adb,0x0730,0x11d5,{0x93,0xe3,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IFunnelSeries =
    {0x01e6d0d8,0x07ee,0x11d5,{0x93,0xe4,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICalendarSeries =
    {0x01e6d0da,0x07ee,0x11d5,{0x93,0xe4,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICalendarCell =
    {0xe517cb25,0x1c48,0x11d5,{0x94,0x00,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ICalendarCellUpper =
    {0xe517cb27,0x1c48,0x11d5,{0x94,0x00,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IAnnotationTool =
    {0xe517cb29,0x1c48,0x11d5,{0x94,0x00,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ILegend =
    {0xb6c104a8,0xfb89,0x11d4,{0x93,0xc9,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IPageNumTool =
    {0xe517cb2e,0x1c48,0x11d5,{0x94,0x00,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISeriesTextSource =
    {0x4061f8f0,0x1d1c,0x11d5,{0x94,0x01,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_SeriesTextSource =
    {0x4061f8f2,0x1d1c,0x11d5,{0x94,0x01,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISeriesTextFields =
    {0x4061f8f5,0x1d1c,0x11d5,{0x94,0x01,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ISeriesTextField =
    {0x4061f8f7,0x1d1c,0x11d5,{0x94,0x01,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) CLSID_ChartGrid =
    {0xf069c83a,0x876f,0x4c9d,{0xb5,0x40,0xd7,0x61,0x42,0x86,0x06,0xdb}};
extern "C" const GUID __declspec(selectany) IID_IValueLists =
    {0xa841a3e5,0x3ed7,0x11d5,{0x94,0x3d,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_ITeeShapePanel =
    {0x22a5d9bb,0xb643,0x11d5,{0x94,0xf8,0x00,0x60,0x08,0xa7,0xee,0xd4}};
extern "C" const GUID __declspec(selectany) IID_IChartGridRows =
    {0x5253cebf,0x921c,0x4b2a,{0x80,0xd8,0xc2,0x3b,0xe8,0x90,0x89,0x00}};
extern "C" const GUID __declspec(selectany) IID_IChartGridCols =
    {0x8bfbfaf7,0x2fab,0x4f28,{0x9c,0x7b,0x08,0xa2,0xd1,0xf1,0x57,0xae}};

#pragma pack(pop)
