/*
//               INTEL CORPORATION PROPRIETARY INFORMATION
//  This software is supplied under the terms of a license agreement or
//  nondisclosure agreement with Intel Corporation and may not be copied
//  or disclosed except in accordance with the terms of that agreement.
//    Copyright (c) 1999, 2000 Intel Corporation. All Rights Reserved.
//
// File    : mkl_lapack32.h
// Purpose : MKL Fortran interface for LAPACK routines
//           for single precision data
// Author  : Shemyakin Andrey
*/

#ifndef _MKL_LAPACK_S_H_

#define _MKL_LAPACK_S_H_

#include "mkl_types.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

void CBDSQR(char *UPLO, int *N, int *NCVT, int *NRU, int *NCC, float *D, float *E, MKL_Complex8 *VT, int *LDVT, MKL_Complex8 *U, int *LDU, MKL_Complex8 *C, int *LDC, float *RWORK, int *INFO);
void CGBBRD(char *VECT, int *M, int *N, int *NCC, int *KL, int *KU, MKL_Complex8 *AB, int *LDAB, float *D, float *E, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *PT, int *LDPT, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGBCON(char *NORM, int *N, int *KL, int *KU, MKL_Complex8 *AB, int *LDAB, int *IPIV, float *ANORM, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGBEQU(int *M, int *N, int *KL, int *KU, MKL_Complex8 *AB, int *LDAB, float *R, float *C, float *ROWCND, float *COLCND, float *AMAX, int *INFO);
void CGBRFS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *AFB, int *LDAFB, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGBSV(int *N, int *KL, int *KU, int *NRHS, MKL_Complex8 *AB, int *LDAB, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CGBSVX(char *FACT, char *TRANS, int *N, int *KL, int *KU, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *AFB, int *LDAFB, int *IPIV, char *EQUED, float *R, float *C, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGBTF2(int *M, int *N, int *KL, int *KU, MKL_Complex8 *AB, int *LDAB, int *IPIV, int *INFO);
void CGBTRF(int *M, int *N, int *KL, int *KU, MKL_Complex8 *AB, int *LDAB, int *IPIV, int *INFO);
void CGBTRS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, MKL_Complex8 *AB, int *LDAB, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CGEBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, float *SCALE, int *M, MKL_Complex8 *V, int *LDV, int *INFO);
void CGEBAL(char *JOB, int *N, MKL_Complex8 *A, int *LDA, int *ILO, int *IHI, float *SCALE, int *INFO);
void CGEBD2(int *M, int *N, MKL_Complex8 *A, int *LDA, float *D, float *E, MKL_Complex8 *TAUQ, MKL_Complex8 *TAUP, MKL_Complex8 *WORK, int *INFO);
void CGEBRD(int *M, int *N, MKL_Complex8 *A, int *LDA, float *D, float *E, MKL_Complex8 *TAUQ, MKL_Complex8 *TAUP, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGECON(char *NORM, int *N, MKL_Complex8 *A, int *LDA, float *ANORM, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGEEQU(int *M, int *N, MKL_Complex8 *A, int *LDA, float *R, float *C, float *ROWCND, float *COLCND, float *AMAX, int *INFO);
void CGEES(char *JOBVS, char *SORT, int *SELECT, int *N, MKL_Complex8 *A, int *LDA, int *SDIM, MKL_Complex8 *W, MKL_Complex8 *VS, int *LDVS, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *BWORK, int *INFO);
void CGEESX(char *JOBVS, char *SORT, int *SELECT, char *SENSE, int *N, MKL_Complex8 *A, int *LDA, int *SDIM, MKL_Complex8 *W, MKL_Complex8 *VS, int *LDVS, float *RCONDE, float *RCONDV, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *BWORK, int *INFO);
void CGEEV(char *JOBVL, char *JOBVR, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *W, MKL_Complex8 *VL, int *LDVL, MKL_Complex8 *VR, int *LDVR, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CGEEVX(char *BALANC, char *JOBVL, char *JOBVR, char *SENSE, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *W, MKL_Complex8 *VL, int *LDVL, MKL_Complex8 *VR, int *LDVR, int *ILO, int *IHI, float *SCALE, float *ABNRM, float *RCONDE, float *RCONDV, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CGEGS(char *JOBVSL, char *JOBVSR, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *ALPHA, MKL_Complex8 *BETA, MKL_Complex8 *VSL, int *LDVSL, MKL_Complex8 *VSR, int *LDVSR, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CGEGV(char *JOBVL, char *JOBVR, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *ALPHA, MKL_Complex8 *BETA, MKL_Complex8 *VL, int *LDVL, MKL_Complex8 *VR, int *LDVR, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CGEHD2(int *N, int *ILO, int *IHI, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CGEHRD(int *N, int *ILO, int *IHI, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGELQ2(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CGELQF(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGELS(char *TRANS, int *M, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGELSS(int *M, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, float *S, float *RCOND, int *RANK, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CGELSD(int *M, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, float *S, float *RCOND, int *RANK, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *IWORK, int *INFO);
void CGELSX(int *M, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, int *JPVT, float *RCOND, int *RANK, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGEQL2(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CGEQLF(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGEQR2(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CGEQRF(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGERFS(char *TRANS, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGERQ2(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CGERQF(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGESV(int *N, int *NRHS, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CGESVD(char *JOBU, char *JOBVT, int *M, int *N, MKL_Complex8 *A, int *LDA, float *S, MKL_Complex8 *U, int *LDU, MKL_Complex8 *VT, int *LDVT, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CGESVX(char *FACT, char *TRANS, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, int *IPIV, char *EQUED, float *R, float *C, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGETF2(int *M, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, int *INFO);
void CGETRF(int *M, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, int *INFO);
void CGETRI(int *N, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGETRS(char *TRANS, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CGGBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, float *LSCALE, float *RSCALE, int *M, MKL_Complex8 *V, int *LDV, int *INFO);
void CGGBAL(char *JOB, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, int *ILO, int *IHI, float *LSCALE, float *RSCALE, float *WORK, int *INFO);
void CGGGLM(int *N, int *M, int *P, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *D, MKL_Complex8 *X, MKL_Complex8 *Y, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGGHRD(char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *Z, int *LDZ, int *INFO);
void CGGLSE(int *M, int *N, int *P, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *C, MKL_Complex8 *D, MKL_Complex8 *X, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGGQRF(int *N, int *M, int *P, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAUA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *TAUB, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGGRQF(int *M, int *P, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAUA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *TAUB, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CGGSVD(char *JOBU, char *JOBV, char *JOBQ, int *M, int *N, int *P, int *K, int *L, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, float *ALPHA, float *BETA, MKL_Complex8 *U, int *LDU, MKL_Complex8 *V, int *LDV, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *WORK, float *RWORK, int *IWORK, int *INFO);
void CGGSVP(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, float *TOLA, float *TOLB, int *K, int *L, MKL_Complex8 *U, int *LDU, MKL_Complex8 *V, int *LDV, MKL_Complex8 *Q, int *LDQ, int *IWORK, float *RWORK, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CGTCON(char *NORM, int *N, MKL_Complex8 *DL, MKL_Complex8 *D, MKL_Complex8 *DU, MKL_Complex8 *DU2, int *IPIV, float *ANORM, float *RCOND, MKL_Complex8 *WORK, int *INFO);
void CGTRFS(char *TRANS, int *N, int *NRHS, MKL_Complex8 *DL, MKL_Complex8 *D, MKL_Complex8 *DU, MKL_Complex8 *DLF, MKL_Complex8 *DF, MKL_Complex8 *DUF, MKL_Complex8 *DU2, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGTSV(int *N, int *NRHS, MKL_Complex8 *DL, MKL_Complex8 *D, MKL_Complex8 *DU, MKL_Complex8 *B, int *LDB, int *INFO);
void CGTSVX(char *FACT, char *TRANS, int *N, int *NRHS, MKL_Complex8 *DL, MKL_Complex8 *D, MKL_Complex8 *DU, MKL_Complex8 *DLF, MKL_Complex8 *DF, MKL_Complex8 *DUF, MKL_Complex8 *DU2, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CGTTRF(int *N, MKL_Complex8 *DL, MKL_Complex8 *D, MKL_Complex8 *DU, MKL_Complex8 *DU2, int *IPIV, int *INFO);
void CGTTRS(char *TRANS, int *N, int *NRHS, MKL_Complex8 *DL, MKL_Complex8 *D, MKL_Complex8 *DU, MKL_Complex8 *DU2, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CHBEV(char *JOBZ, char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHBEVD(char *JOBZ, char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void CHBEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *Q, int *LDQ, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, int *M, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, float *RWORK, int *IWORK, int *IFAIL, int *INFO);
void CHBGST(char *VECT, char *UPLO, int *N, int *KA, int *KB, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *BB, int *LDBB, MKL_Complex8 *X, int *LDX, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHBGV(char *JOBZ, char *UPLO, int *N, int *KA, int *KB, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *BB, int *LDBB, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHBTRD(char *VECT, char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, float *D, float *E, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *WORK, int *INFO);
void CHECON(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, float *ANORM, float *RCOND, MKL_Complex8 *WORK, int *INFO);
void CHEEV(char *JOBZ, char *UPLO, int *N, MKL_Complex8 *A, int *LDA, float *W, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CHEEVD(char *JOBZ, char *UPLO, int *N, MKL_Complex8 *A, int *LDA, float *W, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void CHEEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, MKL_Complex8 *A, int *LDA, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, int *M, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *IWORK, int *IFAIL, int *INFO);
void CHEGS2(int *ITYPE, char *UPLO, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, int *INFO);
void CHEGST(int *ITYPE, char *UPLO, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, int *INFO);
void CHEGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, float *W, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CHERFS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHESV(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CHESVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CHETD2(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, float *D, float *E, MKL_Complex8 *TAU, int *INFO);
void CHETF2(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, int *INFO);
void CHETRD(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, float *D, float *E, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CHETRF(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CHETRI(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *WORK, int *INFO);
void CHETRS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CHGEQZ(char *JOB, char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *ALPHA, MKL_Complex8 *BETA, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CHPCON(char *UPLO, int *N, MKL_Complex8 *AP, int *IPIV, float *ANORM, float *RCOND, MKL_Complex8 *WORK, int *INFO);
void CHPEV(char *JOBZ, char *UPLO, int *N, MKL_Complex8 *AP, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHPEVD(char *JOBZ, char *UPLO, int *N, MKL_Complex8 *AP, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void CHPEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, MKL_Complex8 *AP, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, int *M, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, float *RWORK, int *IWORK, int *IFAIL, int *INFO);
void CHPGST(int *ITYPE, char *UPLO, int *N, MKL_Complex8 *AP, MKL_Complex8 *BP, int *INFO);
void CHPGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, MKL_Complex8 *AP, MKL_Complex8 *BP, float *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHPRFS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *AFP, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHPSV(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CHPSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *AFP, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CHPTRD(char *UPLO, int *N, MKL_Complex8 *AP, float *D, float *E, MKL_Complex8 *TAU, int *INFO);
void CHPTRF(char *UPLO, int *N, MKL_Complex8 *AP, int *IPIV, int *INFO);
void CHPTRI(char *UPLO, int *N, MKL_Complex8 *AP, int *IPIV, MKL_Complex8 *WORK, int *INFO);
void CHPTRS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CHSEIN(char *SIDE, char *EIGSRC, char *INITV, int *SELECT, int *N, MKL_Complex8 *H, int *LDH, MKL_Complex8 *W, MKL_Complex8 *VL, int *LDVL, MKL_Complex8 *VR, int *LDVR, int *MM, int *M, MKL_Complex8 *WORK, float *RWORK, int *IFAILL, int *IFAILR, int *INFO);
void CHSEQR(char *JOB, char *COMPZ, int *N, int *ILO, int *IHI, MKL_Complex8 *H, int *LDH, MKL_Complex8 *W, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CLAED0(int *QSIZ, int *N, float *D, float *E, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *QSTORE, int *LDQS, float *RWORK, int *IWORK, int *INFO);
void CLAED7(int *N, int *CUTPNT, int *QSIZ, int *TLVLS, int *CURLVL, int *CURPBM, float *D, MKL_Complex8 *Q, int *LDQ, float *RHO, int *INDXQ, float *QSTORE, int *QPTR, int *PRMPTR, int *PERM, int *GIVPTR, int *GIVCOL, float *GIVNUM, MKL_Complex8 *WORK, float *RWORK, int *IWORK, int *INFO);
void CLAED8(int *K, int *N, int *QSIZ, MKL_Complex8 *Q, int *LDQ, float *D, float *RHO, int *CUTPNT, float *Z, float *DLAMDA, MKL_Complex8 *Q2, int *LDQ2, float *W, int *INDXP, int *INDX, int *INDXQ, int *PERM, int *GIVPTR, int *GIVCOL, float *GIVNUM, int *INFO);
void CLAHEF(char *UPLO, int *N, int *NB, int *KB, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *W, int *LDW, int *INFO);
void CLASYF(char *UPLO, int *N, int *NB, int *KB, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *W, int *LDW, int *INFO);
void CLATZM(char *SIDE, int *M, int *N, MKL_Complex8 *V, int *INCV, MKL_Complex8 *TAU, MKL_Complex8 *C1, MKL_Complex8 *C2, int *LDC, MKL_Complex8 *WORK);
void CPBCON(char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, float *ANORM, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPBEQU(char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, float *S, float *SCOND, float *AMAX, int *INFO);
void CPBRFS(char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *AFB, int *LDAFB, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPBSTF(char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, int *INFO);
void CPBSV(char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *B, int *LDB, int *INFO);
void CPBSVX(char *FACT, char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *AFB, int *LDAFB, char *EQUED, float *S, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPBTF2(char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, int *INFO);
void CPBTRF(char *UPLO, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, int *INFO);
void CPBTRS(char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *B, int *LDB, int *INFO);
void CPOCON(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, float *ANORM, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPOEQU(int *N, MKL_Complex8 *A, int *LDA, float *S, float *SCOND, float *AMAX, int *INFO);
void CPORFS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPOSV(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, int *INFO);
void CPOSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, char *EQUED, float *S, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPOTF2(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *INFO);
void CPOTRF(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *INFO);
void CPOTRI(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *INFO);
void CPOTRS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, int *INFO);
void CPPCON(char *UPLO, int *N, MKL_Complex8 *AP, float *ANORM, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPPEQU(char *UPLO, int *N, MKL_Complex8 *AP, float *S, float *SCOND, float *AMAX, int *INFO);
void CPPRFS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *AFP, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPPSV(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *B, int *LDB, int *INFO);
void CPPSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *AFP, char *EQUED, float *S, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPPTRF(char *UPLO, int *N, MKL_Complex8 *AP, int *INFO);
void CPPTRI(char *UPLO, int *N, MKL_Complex8 *AP, int *INFO);
void CPPTRS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *B, int *LDB, int *INFO);
void CPTCON(int *N, float *D, MKL_Complex8 *E, float *ANORM, float *RCOND, float *RWORK, int *INFO);
void CPTEQR(char *COMPZ, int *N, float *D, float *E, MKL_Complex8 *Z, int *LDZ, float *WORK, int *INFO);
void CPTRFS(char *UPLO, int *N, int *NRHS, float *D, MKL_Complex8 *E, float *DF, MKL_Complex8 *EF, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPTSV(int *N, int *NRHS, float *D, MKL_Complex8 *E, MKL_Complex8 *B, int *LDB, int *INFO);
void CPTSVX(char *FACT, int *N, int *NRHS, float *D, MKL_Complex8 *E, float *DF, MKL_Complex8 *EF, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CPTTRF(int *N, float *D, MKL_Complex8 *E, int *INFO);
void CPTTRS(char *UPLO, int *N, int *NRHS, float *D, MKL_Complex8 *E, MKL_Complex8 *B, int *LDB, int *INFO);
void CSPCON(char *UPLO, int *N, MKL_Complex8 *AP, int *IPIV, float *ANORM, float *RCOND, MKL_Complex8 *WORK, int *INFO);
void CSPRFS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *AFP, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CSPSV(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CSPSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *AFP, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CSPTRF(char *UPLO, int *N, MKL_Complex8 *AP, int *IPIV, int *INFO);
void CSPTRI(char *UPLO, int *N, MKL_Complex8 *AP, int *IPIV, MKL_Complex8 *WORK, int *INFO);
void CSPTRS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *AP, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CSROT(int *N, MKL_Complex8 *CX, int *INCX, MKL_Complex8 *CY, int *INCY, float *C, float *S);
void CSTEDC(char *COMPZ, int *N, float *D, float *E, MKL_Complex8 *Z, int *LDZ, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void CSTEIN(int *N, float *D, float *E, int *M, float *W, int *IBLOCK, int *ISPLIT, MKL_Complex8 *Z, int *LDZ, float *WORK, int *IWORK, int *IFAIL, int *INFO);
void CSTEQR(char *COMPZ, int *N, float *D, float *E, MKL_Complex8 *Z, int *LDZ, float *WORK, int *INFO);
void CSYCON(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, float *ANORM, float *RCOND, MKL_Complex8 *WORK, int *INFO);
void CSYRFS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CSYSV(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CSYSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *AF, int *LDAF, int *IPIV, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *RCOND, float *FERR, float *BERR, MKL_Complex8 *WORK, int *LWORK, float *RWORK, int *INFO);
void CSYTF2(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, int *INFO);
void CSYTRF(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CSYTRI(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *WORK, int *INFO);
void CSYTRS(char *UPLO, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, int *IPIV, MKL_Complex8 *B, int *LDB, int *INFO);
void CTBCON(char *NORM, char *UPLO, char *DIAG, int *N, int *KD, MKL_Complex8 *AB, int *LDAB, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTBRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTBTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, MKL_Complex8 *AB, int *LDAB, MKL_Complex8 *B, int *LDB, int *INFO);
void CTGEVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *VL, int *LDVL, MKL_Complex8 *VR, int *LDVR, int *MM, int *M, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTGSJA(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, int *K, int *L, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, float *TOLA, float *TOLB, float *ALPHA, float *BETA, MKL_Complex8 *U, int *LDU, MKL_Complex8 *V, int *LDV, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *WORK, int *NCYCLE, int *INFO);
void CTPCON(char *NORM, char *UPLO, char *DIAG, int *N, MKL_Complex8 *AP, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTPRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTPTRI(char *UPLO, char *DIAG, int *N, MKL_Complex8 *AP, int *INFO);
void CTPTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex8 *AP, MKL_Complex8 *B, int *LDB, int *INFO);
void CTRCON(char *NORM, char *UPLO, char *DIAG, int *N, MKL_Complex8 *A, int *LDA, float *RCOND, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTREVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, MKL_Complex8 *T, int *LDT, MKL_Complex8 *VL, int *LDVL, MKL_Complex8 *VR, int *LDVR, int *MM, int *M, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTREXC(char *COMPQ, int *N, MKL_Complex8 *T, int *LDT, MKL_Complex8 *Q, int *LDQ, int *IFST, int *ILST, int *INFO);
void CTRRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *X, int *LDX, float *FERR, float *BERR, MKL_Complex8 *WORK, float *RWORK, int *INFO);
void CTRSEN(char *JOB, char *COMPQ, int *SELECT, int *N, MKL_Complex8 *T, int *LDT, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *W, int *M, float *S, float *SEP, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CTRSNA(char *JOB, char *HOWMNY, int *SELECT, int *N, MKL_Complex8 *T, int *LDT, MKL_Complex8 *VL, int *LDVL, MKL_Complex8 *VR, int *LDVR, float *S, float *SEP, int *MM, int *M, MKL_Complex8 *WORK, int *LDWORK, float *RWORK, int *INFO);
void CTRSYL(char *TRANA, char *TRANB, int *ISGN, int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, MKL_Complex8 *C, int *LDC, float *SCALE, int *INFO);
void CTRTI2(char *UPLO, char *DIAG, int *N, MKL_Complex8 *A, int *LDA, int *INFO);
void CTRTRI(char *UPLO, char *DIAG, int *N, MKL_Complex8 *A, int *LDA, int *INFO);
void CTRTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex8 *A, int *LDA, MKL_Complex8 *B, int *LDB, int *INFO);
void CTZRQF(int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, int *INFO);
void CUNG2L(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CUNG2R(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CUNGBR(char *VECT, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNGHR(int *N, int *ILO, int *IHI, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNGL2(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CUNGLQ(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNGQL(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNGQR(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNGR2(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *INFO);
void CUNGRQ(int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNGTR(char *UPLO, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNM2L(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *INFO);
void CUNM2R(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *INFO);
void CUNMBR(char *VECT, char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNMHR(char *SIDE, char *TRANS, int *M, int *N, int *ILO, int *IHI, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNML2(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *INFO);
void CUNMLQ(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNMQL(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNMQR(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNMR2(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *INFO);
void CUNMRQ(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUNMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, MKL_Complex8 *A, int *LDA, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *LWORK, int *INFO);
void CUPGTR(char *UPLO, int *N, MKL_Complex8 *AP, MKL_Complex8 *TAU, MKL_Complex8 *Q, int *LDQ, MKL_Complex8 *WORK, int *INFO);
void CUPMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, MKL_Complex8 *AP, MKL_Complex8 *TAU, MKL_Complex8 *C, int *LDC, MKL_Complex8 *WORK, int *INFO);
void SBDSQR(char *UPLO, int *N, int *NCVT, int *NRU, int *NCC, float *D, float *E, float *VT, int *LDVT, float *U, int *LDU, float *C, int *LDC, float *WORK, int *INFO);
void SDISNA(char *JOB, int *M, int *N, float *D, float *SEP, int *INFO);
void SGBBRD(char *VECT, int *M, int *N, int *NCC, int *KL, int *KU, float *AB, int *LDAB, float *D, float *E, float *Q, int *LDQ, float *PT, int *LDPT, float *C, int *LDC, float *WORK, int *INFO);
void SGBCON(char *NORM, int *N, int *KL, int *KU, float *AB, int *LDAB, int *IPIV, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SGBEQU(int *M, int *N, int *KL, int *KU, float *AB, int *LDAB, float *R, float *C, float *ROWCND, float *COLCND, float *AMAX, int *INFO);
void SGBRFS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, float *AB, int *LDAB, float *AFB, int *LDAFB, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SGBSV(int *N, int *KL, int *KU, int *NRHS, float *AB, int *LDAB, int *IPIV, float *B, int *LDB, int *INFO);
void SGBSVX(char *FACT, char *TRANS, int *N, int *KL, int *KU, int *NRHS, float *AB, int *LDAB, float *AFB, int *LDAFB, int *IPIV, char *EQUED, float *R, float *C, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SGBTF2(int *M, int *N, int *KL, int *KU, float *AB, int *LDAB, int *IPIV, int *INFO);
void SGBTRF(int *M, int *N, int *KL, int *KU, float *AB, int *LDAB, int *IPIV, int *INFO);
void SGBTRS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, float *AB, int *LDAB, int *IPIV, float *B, int *LDB, int *INFO);
void SGEBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, float *SCALE, int *M, float *V, int *LDV, int *INFO);
void SGEBAL(char *JOB, int *N, float *A, int *LDA, int *ILO, int *IHI, float *SCALE, int *INFO);
void SGEBD2(int *M, int *N, float *A, int *LDA, float *D, float *E, float *TAUQ, float *TAUP, float *WORK, int *INFO);
void SGEBRD(int *M, int *N, float *A, int *LDA, float *D, float *E, float *TAUQ, float *TAUP, float *WORK, int *LWORK, int *INFO);
void SGECON(char *NORM, int *N, float *A, int *LDA, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SGEEQU(int *M, int *N, float *A, int *LDA, float *R, float *C, float *ROWCND, float *COLCND, float *AMAX, int *INFO);
void SGEES(char *JOBVS, char *SORT, int *SELECT, int *N, float *A, int *LDA, int *SDIM, float *WR, float *WI, float *VS, int *LDVS, float *WORK, int *LWORK, int *BWORK, int *INFO);
void SGEESX(char *JOBVS, char *SORT, int *SELECT, char *SENSE, int *N, float *A, int *LDA, int *SDIM, float *WR, float *WI, float *VS, int *LDVS, float *RCONDE, float *RCONDV, float *WORK, int *LWORK, int *IWORK, int *LIWORK, int *BWORK, int *INFO);
void SGEEV(char *JOBVL, char *JOBVR, int *N, float *A, int *LDA, float *WR, float *WI, float *VL, int *LDVL, float *VR, int *LDVR, float *WORK, int *LWORK, int *INFO);
void SGEEVX(char *BALANC, char *JOBVL, char *JOBVR, char *SENSE, int *N, float *A, int *LDA, float *WR, float *WI, float *VL, int *LDVL, float *VR, int *LDVR, int *ILO, int *IHI, float *SCALE, float *ABNRM, float *RCONDE, float *RCONDV, float *WORK, int *LWORK, int *IWORK, int *INFO);
void SGEGS(char *JOBVSL, char *JOBVSR, int *N, float *A, int *LDA, float *B, int *LDB, float *ALPHAR, float *ALPHAI, float *BETA, float *VSL, int *LDVSL, float *VSR, int *LDVSR, float *WORK, int *LWORK, int *INFO);
void SGEGV(char *JOBVL, char *JOBVR, int *N, float *A, int *LDA, float *B, int *LDB, float *ALPHAR, float *ALPHAI, float *BETA, float *VL, int *LDVL, float *VR, int *LDVR, float *WORK, int *LWORK, int *INFO);
void SGEHD2(int *N, int *ILO, int *IHI, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SGEHRD(int *N, int *ILO, int *IHI, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SGELQ2(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SGELQF(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SGELS(char *TRANS, int *M, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, float *WORK, int *LWORK, int *INFO);
void SGELSS(int *M, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, float *S, float *RCOND, int *RANK, float *WORK, int *LWORK, int *INFO);
void SGELSD(int *M, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, float *S, float *RCOND, int *RANK, float *WORK, int *LWORK, int *IWORK, int *INFO);
void SGELSX(int *M, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, int *JPVT, float *RCOND, int *RANK, float *WORK, int *INFO);
void SGEQL2(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SGEQLF(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SGEQPF(int *M, int *N, float *A, int *LDA, int *JPVT, float *TAU, float *WORK, int *INFO);
void SGEQR2(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SGEQRF(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SGERFS(char *TRANS, int *N, int *NRHS, float *A, int *LDA, float *AF, int *LDAF, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SGERQ2(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SGERQF(int *M, int *N, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SGESV(int *N, int *NRHS, float *A, int *LDA, int *IPIV, float *B, int *LDB, int *INFO);
void SGESVD(char *JOBU, char *JOBVT, int *M, int *N, float *A, int *LDA, float *S, float *U, int *LDU, float *VT, int *LDVT, float *WORK, int *LWORK, int *INFO);
void SGESVX(char *FACT, char *TRANS, int *N, int *NRHS, float *A, int *LDA, float *AF, int *LDAF, int *IPIV, char *EQUED, float *R, float *C, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SGETF2(int *M, int *N, float *A, int *LDA, int *IPIV, int *INFO);
void SGETRF(int *M, int *N, float *A, int *LDA, int *IPIV, int *INFO);
void SGETRI(int *N, float *A, int *LDA, int *IPIV, float *WORK, int *LWORK, int *INFO);
void SGETRS(char *TRANS, int *N, int *NRHS, float *A, int *LDA, int *IPIV, float *B, int *LDB, int *INFO);
void SGGBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, float *LSCALE, float *RSCALE, int *M, float *V, int *LDV, int *INFO);
void SGGBAL(char *JOB, int *N, float *A, int *LDA, float *B, int *LDB, int *ILO, int *IHI, float *LSCALE, float *RSCALE, float *WORK, int *INFO);
void SGGGLM(int *N, int *M, int *P, float *A, int *LDA, float *B, int *LDB, float *D, float *X, float *Y, float *WORK, int *LWORK, int *INFO);
void SGGHRD(char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, float *A, int *LDA, float *B, int *LDB, float *Q, int *LDQ, float *Z, int *LDZ, int *INFO);
void SGGLSE(int *M, int *N, int *P, float *A, int *LDA, float *B, int *LDB, float *C, float *D, float *X, float *WORK, int *LWORK, int *INFO);
void SGGQRF(int *N, int *M, int *P, float *A, int *LDA, float *TAUA, float *B, int *LDB, float *TAUB, float *WORK, int *LWORK, int *INFO);
void SGGRQF(int *M, int *P, int *N, float *A, int *LDA, float *TAUA, float *B, int *LDB, float *TAUB, float *WORK, int *LWORK, int *INFO);
void SGGSVD(char *JOBU, char *JOBV, char *JOBQ, int *M, int *N, int *P, int *K, int *L, float *A, int *LDA, float *B, int *LDB, float *ALPHA, float *BETA, float *U, int *LDU, float *V, int *LDV, float *Q, int *LDQ, float *WORK, int *IWORK, int *INFO);
void SGGSVP(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, float *A, int *LDA, float *B, int *LDB, float *TOLA, float *TOLB, int *K, int *L, float *U, int *LDU, float *V, int *LDV, float *Q, int *LDQ, int *IWORK, float *TAU, float *WORK, int *INFO);
void SGTCON(char *NORM, int *N, float *DL, float *D, float *DU, float *DU2, int *IPIV, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SGTRFS(char *TRANS, int *N, int *NRHS, float *DL, float *D, float *DU, float *DLF, float *DF, float *DUF, float *DU2, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SGTSV(int *N, int *NRHS, float *DL, float *D, float *DU, float *B, int *LDB, int *INFO);
void SGTSVX(char *FACT, char *TRANS, int *N, int *NRHS, float *DL, float *D, float *DU, float *DLF, float *DF, float *DUF, float *DU2, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SGTTRF(int *N, float *DL, float *D, float *DU, float *DU2, int *IPIV, int *INFO);
void SGTTRS(char *TRANS, int *N, int *NRHS, float *DL, float *D, float *DU, float *DU2, int *IPIV, float *B, int *LDB, int *INFO);
void SHGEQZ(char *JOB, char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, float *A, int *LDA, float *B, int *LDB, float *ALPHAR, float *ALPHAI, float *BETA, float *Q, int *LDQ, float *Z, int *LDZ, float *WORK, int *LWORK, int *INFO);
void SHSEIN(char *SIDE, char *EIGSRC, char *INITV, int *SELECT, int *N, float *H, int *LDH, float *WR, float *WI, float *VL, int *LDVL, float *VR, int *LDVR, int *MM, int *M, float *WORK, int *IFAILL, int *IFAILR, int *INFO);
void SHSEQR(char *JOB, char *COMPZ, int *N, int *ILO, int *IHI, float *H, int *LDH, float *WR, float *WI, float *Z, int *LDZ, float *WORK, int *LWORK, int *INFO);
void SLAED0(int *ICOMPQ, int *QSIZ, int *N, float *D, float *E, float *Q, int *LDQ, float *QSTORE, int *LDQS, float *WORK, int *IWORK, int *INFO);
void SLAED1(int *N, float *D, float *Q, int *LDQ, int *INDXQ, float *RHO, int *CUTPNT, float *WORK, int *IWORK, int *INFO);
void SLAED2(int *K, int *N, float *D, float *Q, int *LDQ, int *INDXQ, float *RHO, int *CUTPNT, float *Z, float *DLAMDA, float *Q2, int *LDQ2, int *INDXC, float *W, int *INDXP, int *INDX, int *COLTYP, int *INFO);
void SLAED3(int *K, int *KSTART, int *KSTOP, int *N, float *D, float *Q, int *LDQ, float *RHO, int *CUTPNT, float *DLAMDA, float *Q2, int *LDQ2, int *INDXC, int *CTOT, float *W, float *S, int *LDS, int *INFO);
void SLAED4(int *N, int *I, float *D, float *Z, float *DELTA, float *RHO, float *DLAM, int *INFO);
void SLAED5(int *I, float *D, float *Z, float *DELTA, float *RHO, float *DLAM);
void SLAED6(int *KNITER, int *ORGATI, float *RHO, float *D, float *Z, float *FINIT, float *TAU, int *INFO);
void SLAED7(int *ICOMPQ, int *N, int *QSIZ, int *TLVLS, int *CURLVL, int *CURPBM, float *D, float *Q, int *LDQ, int *INDXQ, float *RHO, int *CUTPNT, float *QSTORE, int *QPTR, int *PRMPTR, int *PERM, int *GIVPTR, int *GIVCOL, float *GIVNUM, float *WORK, int *IWORK, int *INFO);
void SLAED8(int *ICOMPQ, int *K, int *N, int *QSIZ, float *D, float *Q, int *LDQ, int *INDXQ, float *RHO, int *CUTPNT, float *Z, float *DLAMDA, float *Q2, int *LDQ2, float *W, int *PERM, int *GIVPTR, int *GIVCOL, float *GIVNUM, int *INDXP, int *INDX, int *INFO);
void SLAED9(int *K, int *KSTART, int *KSTOP, int *N, float *D, float *Q, int *LDQ, float *RHO, float *DLAMDA, float *W, float *S, int *LDS, int *INFO);
void SLAEDA(int *N, int *TLVLS, int *CURLVL, int *CURPBM, int *PRMPTR, int *PERM, int *GIVPTR, int *GIVCOL, float *GIVNUM, float *Q, int *QPTR, float *Z, float *ZTEMP, int *INFO);
void SLAGTF(int *N, float *A, float *LAMBDA, float *B, float *C, float *TOL, float *D, int *IN, int *INFO);
void SLAMRG(int *N1, int *N2, float *A, int *STRD1, int *STRD2, int *INDEX);
void SLASQ1(int *N, float *D, float *E, float *WORK, int *INFO);
void SLASQ2(int *M, float *Q, float *E, float *QQ, float *EE, float *EPS, float *TOL2, float *SMALL2, float *SUP, int *KEND, int *INFO);
void SLASQ3(int *N, float *Q, float *E, float *QQ, float *EE, float *SUP, float *SIGMA, int *KEND, int *OFF, int *IPHASE, int *ICONV, float *EPS, float *TOL2, float *SMALL2);
void SLASQ4(int *N, float *Q, float *E, float *TAU, float *SUP);
void SLASRT(char *ID, int *N, float *D, int *INFO);
void SLATZM(char *SIDE, int *M, int *N, float *V, int *INCV, float *TAU, float *C1, float *C2, int *LDC, float *WORK);
void SOPGTR(char *UPLO, int *N, float *AP, float *TAU, float *Q, int *LDQ, float *WORK, int *INFO);
void SOPMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, float *AP, float *TAU, float *C, int *LDC, float *WORK, int *INFO);
void SORG2L(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SORG2R(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SORGBR(char *VECT, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SORGHR(int *N, int *ILO, int *IHI, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SORGL2(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SORGLQ(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SORGQL(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SORGQR(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SORGR2(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *INFO);
void SORGRQ(int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SORGTR(char *UPLO, int *N, float *A, int *LDA, float *TAU, float *WORK, int *LWORK, int *INFO);
void SORM2L(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *INFO);
void SORM2R(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *INFO);
void SORMBR(char *VECT, char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *LWORK, int *INFO);
void SORMHR(char *SIDE, char *TRANS, int *M, int *N, int *ILO, int *IHI, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *LWORK, int *INFO);
void SORML2(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *INFO);
void SORMLQ(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *LWORK, int *INFO);
void SORMQL(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *LWORK, int *INFO);
void SORMQR(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *LWORK, int *INFO);
void SORMR2(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *INFO);
void SORMRQ(char *SIDE, char *TRANS, int *M, int *N, int *K, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *LWORK, int *INFO);
void SORMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, float *A, int *LDA, float *TAU, float *C, int *LDC, float *WORK, int *LWORK, int *INFO);
void SPBCON(char *UPLO, int *N, int *KD, float *AB, int *LDAB, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SPBEQU(char *UPLO, int *N, int *KD, float *AB, int *LDAB, float *S, float *SCOND, float *AMAX, int *INFO);
void SPBRFS(char *UPLO, int *N, int *KD, int *NRHS, float *AB, int *LDAB, float *AFB, int *LDAFB, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SPBSTF(char *UPLO, int *N, int *KD, float *AB, int *LDAB, int *INFO);
void SPBSV(char *UPLO, int *N, int *KD, int *NRHS, float *AB, int *LDAB, float *B, int *LDB, int *INFO);
void SPBSVX(char *FACT, char *UPLO, int *N, int *KD, int *NRHS, float *AB, int *LDAB, float *AFB, int *LDAFB, char *EQUED, float *S, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SPBTF2(char *UPLO, int *N, int *KD, float *AB, int *LDAB, int *INFO);
void SPBTRF(char *UPLO, int *N, int *KD, float *AB, int *LDAB, int *INFO);
void SPBTRS(char *UPLO, int *N, int *KD, int *NRHS, float *AB, int *LDAB, float *B, int *LDB, int *INFO);
void SPOCON(char *UPLO, int *N, float *A, int *LDA, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SPOEQU(int *N, float *A, int *LDA, float *S, float *SCOND, float *AMAX, int *INFO);
void SPORFS(char *UPLO, int *N, int *NRHS, float *A, int *LDA, float *AF, int *LDAF, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SPOSV(char *UPLO, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, int *INFO);
void SPOSVX(char *FACT, char *UPLO, int *N, int *NRHS, float *A, int *LDA, float *AF, int *LDAF, char *EQUED, float *S, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SPOTF2(char *UPLO, int *N, float *A, int *LDA, int *INFO);
void SPOTRF(char *UPLO, int *N, float *A, int *LDA, int *INFO);
void SPOTRI(char *UPLO, int *N, float *A, int *LDA, int *INFO);
void SPOTRS(char *UPLO, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, int *INFO);
void SPPCON(char *UPLO, int *N, float *AP, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SPPEQU(char *UPLO, int *N, float *AP, float *S, float *SCOND, float *AMAX, int *INFO);
void SPPRFS(char *UPLO, int *N, int *NRHS, float *AP, float *AFP, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SPPSV(char *UPLO, int *N, int *NRHS, float *AP, float *B, int *LDB, int *INFO);
void SPPSVX(char *FACT, char *UPLO, int *N, int *NRHS, float *AP, float *AFP, char *EQUED, float *S, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SPPTRF(char *UPLO, int *N, float *AP, int *INFO);
void SPPTRI(char *UPLO, int *N, float *AP, int *INFO);
void SPPTRS(char *UPLO, int *N, int *NRHS, float *AP, float *B, int *LDB, int *INFO);
void SPTCON(int *N, float *D, float *E, float *ANORM, float *RCOND, float *WORK, int *INFO);
void SPTEQR(char *COMPZ, int *N, float *D, float *E, float *Z, int *LDZ, float *WORK, int *INFO);
void SPTRFS(int *N, int *NRHS, float *D, float *E, float *DF, float *EF, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *INFO);
void SPTSV(int *N, int *NRHS, float *D, float *E, float *B, int *LDB, int *INFO);
void SPTSVX(char *FACT, int *N, int *NRHS, float *D, float *E, float *DF, float *EF, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *INFO);
void SPTTRF(int *N, float *D, float *E, int *INFO);
void SPTTRS(int *N, int *NRHS, float *D, float *E, float *B, int *LDB, int *INFO);
void SSBEV(char *JOBZ, char *UPLO, int *N, int *KD, float *AB, int *LDAB, float *W, float *Z, int *LDZ, float *WORK, int *INFO);
void SSBEVD(char *JOBZ, char *UPLO, int *N, int *KD, float *AB, int *LDAB, float *W, float *Z, int *LDZ, float *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void SSBEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, int *KD, float *AB, int *LDAB, float *Q, int *LDQ, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, int *M, float *W, float *Z, int *LDZ, float *WORK, int *IWORK, int *IFAIL, int *INFO);
void SSBGST(char *VECT, char *UPLO, int *N, int *KA, int *KB, float *AB, int *LDAB, float *BB, int *LDBB, float *X, int *LDX, float *WORK, int *INFO);
void SSBGV(char *JOBZ, char *UPLO, int *N, int *KA, int *KB, float *AB, int *LDAB, float *BB, int *LDBB, float *W, float *Z, int *LDZ, float *WORK, int *INFO);
void SSBTRD(char *VECT, char *UPLO, int *N, int *KD, float *AB, int *LDAB, float *D, float *E, float *Q, int *LDQ, float *WORK, int *INFO);
void SSPCON(char *UPLO, int *N, float *AP, int *IPIV, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SSPEV(char *JOBZ, char *UPLO, int *N, float *AP, float *W, float *Z, int *LDZ, float *WORK, int *INFO);
void SSPEVD(char *JOBZ, char *UPLO, int *N, float *AP, float *W, float *Z, int *LDZ, float *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void SSPEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, float *AP, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, int *M, float *W, float *Z, int *LDZ, float *WORK, int *IWORK, int *IFAIL, int *INFO);
void SSPGST(int *ITYPE, char *UPLO, int *N, float *AP, float *BP, int *INFO);
void SSPGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, float *AP, float *BP, float *W, float *Z, int *LDZ, float *WORK, int *INFO);
void SSPRFS(char *UPLO, int *N, int *NRHS, float *AP, float *AFP, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SSPSV(char *UPLO, int *N, int *NRHS, float *AP, int *IPIV, float *B, int *LDB, int *INFO);
void SSPSVX(char *FACT, char *UPLO, int *N, int *NRHS, float *AP, float *AFP, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SSPTRD(char *UPLO, int *N, float *AP, float *D, float *E, float *TAU, int *INFO);
void SSPTRF(char *UPLO, int *N, float *AP, int *IPIV, int *INFO);
void SSPTRI(char *UPLO, int *N, float *AP, int *IPIV, float *WORK, int *INFO);
void SSPTRS(char *UPLO, int *N, int *NRHS, float *AP, int *IPIV, float *B, int *LDB, int *INFO);
void SSTEBZ(char *RANGE, char *ORDER, int *N, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, float *D, float *E, int *M, int *NSPLIT, float *W, int *IBLOCK, int *ISPLIT, float *WORK, int *IWORK, int *INFO);
void SSTEDC(char *COMPZ, int *N, float *D, float *E, float *Z, int *LDZ, float *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void SSTEIN(int *N, float *D, float *E, int *M, float *W, int *IBLOCK, int *ISPLIT, float *Z, int *LDZ, float *WORK, int *IWORK, int *IFAIL, int *INFO);
void SSTEQR(char *COMPZ, int *N, float *D, float *E, float *Z, int *LDZ, float *WORK, int *INFO);
void SSTERF(int *N, float *D, float *E, int *INFO);
void SSTEV(char *JOBZ, int *N, float *D, float *E, float *Z, int *LDZ, float *WORK, int *INFO);
void SSTEVD(char *JOBZ, int *N, float *D, float *E, float *Z, int *LDZ, float *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void SSTEVX(char *JOBZ, char *RANGE, int *N, float *D, float *E, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, int *M, float *W, float *Z, int *LDZ, float *WORK, int *IWORK, int *IFAIL, int *INFO);
void SSYCON(char *UPLO, int *N, float *A, int *LDA, int *IPIV, float *ANORM, float *RCOND, float *WORK, int *IWORK, int *INFO);
void SSYEV(char *JOBZ, char *UPLO, int *N, float *A, int *LDA, float *W, float *WORK, int *LWORK, int *INFO);
void SSYEVD(char *JOBZ, char *UPLO, int *N, float *A, int *LDA, float *W, float *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void SSYEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, float *A, int *LDA, float *VL, float *VU, int *IL, int *IU, float *ABSTOL, int *M, float *W, float *Z, int *LDZ, float *WORK, int *LWORK, int *IWORK, int *IFAIL, int *INFO);
void SSYGS2(int *ITYPE, char *UPLO, int *N, float *A, int *LDA, float *B, int *LDB, int *INFO);
void SSYGST(int *ITYPE, char *UPLO, int *N, float *A, int *LDA, float *B, int *LDB, int *INFO);
void SSYGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, float *A, int *LDA, float *B, int *LDB, float *W, float *WORK, int *LWORK, int *INFO);
void SSYRFS(char *UPLO, int *N, int *NRHS, float *A, int *LDA, float *AF, int *LDAF, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void SSYSV(char *UPLO, int *N, int *NRHS, float *A, int *LDA, int *IPIV, float *B, int *LDB, float *WORK, int *LWORK, int *INFO);
void SSYSVX(char *FACT, char *UPLO, int *N, int *NRHS, float *A, int *LDA, float *AF, int *LDAF, int *IPIV, float *B, int *LDB, float *X, int *LDX, float *RCOND, float *FERR, float *BERR, float *WORK, int *LWORK, int *IWORK, int *INFO);
void SSYTD2(char *UPLO, int *N, float *A, int *LDA, float *D, float *E, float *TAU, int *INFO);
void SSYTF2(char *UPLO, int *N, float *A, int *LDA, int *IPIV, int *INFO);
void SSYTRD(char *UPLO, int *N, float *A, int *LDA, float *D, float *E, float *TAU, float *WORK, int *LWORK, int *INFO);
void SSYTRF(char *UPLO, int *N, float *A, int *LDA, int *IPIV, float *WORK, int *LWORK, int *INFO);
void SSYTRI(char *UPLO, int *N, float *A, int *LDA, int *IPIV, float *WORK, int *INFO);
void SSYTRS(char *UPLO, int *N, int *NRHS, float *A, int *LDA, int *IPIV, float *B, int *LDB, int *INFO);
void STBCON(char *NORM, char *UPLO, char *DIAG, int *N, int *KD, float *AB, int *LDAB, float *RCOND, float *WORK, int *IWORK, int *INFO);
void STBRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, float *AB, int *LDAB, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void STBTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, float *AB, int *LDAB, float *B, int *LDB, int *INFO);
void STGEVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, float *A, int *LDA, float *B, int *LDB, float *VL, int *LDVL, float *VR, int *LDVR, int *MM, int *M, float *WORK, int *INFO);
void STGSJA(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, int *K, int *L, float *A, int *LDA, float *B, int *LDB, float *TOLA, float *TOLB, float *ALPHA, float *BETA, float *U, int *LDU, float *V, int *LDV, float *Q, int *LDQ, float *WORK, int *NCYCLE, int *INFO);
void STPCON(char *NORM, char *UPLO, char *DIAG, int *N, float *AP, float *RCOND, float *WORK, int *IWORK, int *INFO);
void STPRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, float *AP, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void STPTRI(char *UPLO, char *DIAG, int *N, float *AP, int *INFO);
void STPTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, float *AP, float *B, int *LDB, int *INFO);
void STRCON(char *NORM, char *UPLO, char *DIAG, int *N, float *A, int *LDA, float *RCOND, float *WORK, int *IWORK, int *INFO);
void STREVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, float *T, int *LDT, float *VL, int *LDVL, float *VR, int *LDVR, int *MM, int *M, float *WORK, int *INFO);
void STREXC(char *COMPQ, int *N, float *T, int *LDT, float *Q, int *LDQ, int *IFST, int *ILST, float *WORK, int *INFO);
void STRRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, float *X, int *LDX, float *FERR, float *BERR, float *WORK, int *IWORK, int *INFO);
void STRSEN(char *JOB, char *COMPQ, int *SELECT, int *N, float *T, int *LDT, float *Q, int *LDQ, float *WR, float *WI, int *M, float *S, float *SEP, float *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void STRSNA(char *JOB, char *HOWMNY, int *SELECT, int *N, float *T, int *LDT, float *VL, int *LDVL, float *VR, int *LDVR, float *S, float *SEP, int *MM, int *M, float *WORK, int *LDWORK, int *IWORK, int *INFO);
void STRSYL(char *TRANA, char *TRANB, int *ISGN, int *M, int *N, float *A, int *LDA, float *B, int *LDB, float *C, int *LDC, float *SCALE, int *INFO);
void STRTI2(char *UPLO, char *DIAG, int *N, float *A, int *LDA, int *INFO);
void STRTRI(char *UPLO, char *DIAG, int *N, float *A, int *LDA, int *INFO);
void STRTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, float *A, int *LDA, float *B, int *LDB, int *INFO);
void STZRQF(int *M, int *N, float *A, int *LDA, float *TAU, int *INFO);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _MKL_LAPACK_S_H_ */
