/*
//               INTEL CORPORATION PROPRIETARY INFORMATION
//  This software is supplied under the terms of a license agreement or
//  nondisclosure agreement with Intel Corporation and may not be copied
//  or disclosed except in accordance with the terms of that agreement.
//    Copyright (c) 1999, 2000 Intel Corporation. All Rights Reserved.
//
// File    : mkl_lapack64.h
// Purpose : MKL Fortran interface for LAPACK routines
//           for double precision data
// Author  : Shemyakin Andrey
*/

#ifndef _MKL_LAPACK_D_H_

#define _MKL_LAPACK_D_H_

#include "mkl_types.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

void DBDSQR(char *UPLO, int *N, int *NCVT, int *NRU, int *NCC, double *D, double *E, double *VT, int *LDVT, double *U, int *LDU, double *C, int *LDC, double *WORK, int *INFO);
void DDISNA(char *JOB, int *M, int *N, double *D, double *SEP, int *INFO);
void DGBBRD(char *VECT, int *M, int *N, int *NCC, int *KL, int *KU, double *AB, int *LDAB, double *D, double *E, double *Q, int *LDQ, double *PT, int *LDPT, double *C, int *LDC, double *WORK, int *INFO);
void DGBCON(char *NORM, int *N, int *KL, int *KU, double *AB, int *LDAB, int *IPIV, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DGBEQU(int *M, int *N, int *KL, int *KU, double *AB, int *LDAB, double *R, double *C, double *ROWCND, double *COLCND, double *AMAX, int *INFO);
void DGBRFS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, double *AB, int *LDAB, double *AFB, int *LDAFB, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DGBSV(int *N, int *KL, int *KU, int *NRHS, double *AB, int *LDAB, int *IPIV, double *B, int *LDB, int *INFO);
void DGBSVX(char *FACT, char *TRANS, int *N, int *KL, int *KU, int *NRHS, double *AB, int *LDAB, double *AFB, int *LDAFB, int *IPIV, char *EQUED, double *R, double *C, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DGBTF2(int *M, int *N, int *KL, int *KU, double *AB, int *LDAB, int *IPIV, int *INFO);
void DGBTRF(int *M, int *N, int *KL, int *KU, double *AB, int *LDAB, int *IPIV, int *INFO);
void DGBTRS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, double *AB, int *LDAB, int *IPIV, double *B, int *LDB, int *INFO);
void DGEBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, double *SCALE, int *M, double *V, int *LDV, int *INFO);
void DGEBAL(char *JOB, int *N, double *A, int *LDA, int *ILO, int *IHI, double *SCALE, int *INFO);
void DGEBD2(int *M, int *N, double *A, int *LDA, double *D, double *E, double *TAUQ, double *TAUP, double *WORK, int *INFO);
void DGEBRD(int *M, int *N, double *A, int *LDA, double *D, double *E, double *TAUQ, double *TAUP, double *WORK, int *LWORK, int *INFO);
void DGECON(char *NORM, int *N, double *A, int *LDA, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DGEEQU(int *M, int *N, double *A, int *LDA, double *R, double *C, double *ROWCND, double *COLCND, double *AMAX, int *INFO);
void DGEES(char *JOBVS, char *SORT, int *SELECT, int *N, double *A, int *LDA, int *SDIM, double *WR, double *WI, double *VS, int *LDVS, double *WORK, int *LWORK, int *BWORK, int *INFO);
void DGEESX(char *JOBVS, char *SORT, int *SELECT, char *SENSE, int *N, double *A, int *LDA, int *SDIM, double *WR, double *WI, double *VS, int *LDVS, double *RCONDE, double *RCONDV, double *WORK, int *LWORK, int *IWORK, int *LIWORK, int *BWORK, int *INFO);
void DGEEV(char *JOBVL, char *JOBVR, int *N, double *A, int *LDA, double *WR, double *WI, double *VL, int *LDVL, double *VR, int *LDVR, double *WORK, int *LWORK, int *INFO);
void DGEEVX(char *BALANC, char *JOBVL, char *JOBVR, char *SENSE, int *N, double *A, int *LDA, double *WR, double *WI, double *VL, int *LDVL, double *VR, int *LDVR, int *ILO, int *IHI, double *SCALE, double *ABNRM, double *RCONDE, double *RCONDV, double *WORK, int *LWORK, int *IWORK, int *INFO);
void DGEGS(char *JOBVSL, char *JOBVSR, int *N, double *A, int *LDA, double *B, int *LDB, double *ALPHAR, double *ALPHAI, double *BETA, double *VSL, int *LDVSL, double *VSR, int *LDVSR, double *WORK, int *LWORK, int *INFO);
void DGEGV(char *JOBVL, char *JOBVR, int *N, double *A, int *LDA, double *B, int *LDB, double *ALPHAR, double *ALPHAI, double *BETA, double *VL, int *LDVL, double *VR, int *LDVR, double *WORK, int *LWORK, int *INFO);
void DGEHD2(int *N, int *ILO, int *IHI, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DGEHRD(int *N, int *ILO, int *IHI, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DGELQ2(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DGELQF(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DGELS(char *TRANS, int *M, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, double *WORK, int *LWORK, int *INFO);
void DGELSS(int *M, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, double *S, double *RCOND, int *RANK, double *WORK, int *LWORK, int *INFO);
void DGELSD(int *M, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, double *S, double *RCOND, int *RANK, double *WORK, int *LWORK, int *IWORK, int *INFO);
void DGELSX(int *M, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, int *JPVT, double *RCOND, int *RANK, double *WORK, int *INFO);
void DGEQL2(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DGEQLF(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DGEQPF(int *M, int *N, double *A, int *LDA, int *JPVT, double *TAU, double *WORK, int *INFO);
void DGEQR2(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DGEQRF(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DGERFS(char *TRANS, int *N, int *NRHS, double *A, int *LDA, double *AF, int *LDAF, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DGERQ2(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DGERQF(int *M, int *N, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DGESV(int *N, int *NRHS, double *A, int *LDA, int *IPIV, double *B, int *LDB, int *INFO);
void DGESVD(char *JOBU, char *JOBVT, int *M, int *N, double *A, int *LDA, double *S, double *U, int *LDU, double *VT, int *LDVT, double *WORK, int *LWORK, int *INFO);
void DGESVX(char *FACT, char *TRANS, int *N, int *NRHS, double *A, int *LDA, double *AF, int *LDAF, int *IPIV, char *EQUED, double *R, double *C, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DGETF2(int *M, int *N, double *A, int *LDA, int *IPIV, int *INFO);
void DGETRF(int *M, int *N, double *A, int *LDA, int *IPIV, int *INFO);
void DGETRI(int *N, double *A, int *LDA, int *IPIV, double *WORK, int *LWORK, int *INFO);
void DGETRS(char *TRANS, int *N, int *NRHS, double *A, int *LDA, int *IPIV, double *B, int *LDB, int *INFO);
void DGGBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, double *LSCALE, double *RSCALE, int *M, double *V, int *LDV, int *INFO);
void DGGBAL(char *JOB, int *N, double *A, int *LDA, double *B, int *LDB, int *ILO, int *IHI, double *LSCALE, double *RSCALE, double *WORK, int *INFO);
void DGGGLM(int *N, int *M, int *P, double *A, int *LDA, double *B, int *LDB, double *D, double *X, double *Y, double *WORK, int *LWORK, int *INFO);
void DGGHRD(char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, double *A, int *LDA, double *B, int *LDB, double *Q, int *LDQ, double *Z, int *LDZ, int *INFO);
void DGGLSE(int *M, int *N, int *P, double *A, int *LDA, double *B, int *LDB, double *C, double *D, double *X, double *WORK, int *LWORK, int *INFO);
void DGGQRF(int *N, int *M, int *P, double *A, int *LDA, double *TAUA, double *B, int *LDB, double *TAUB, double *WORK, int *LWORK, int *INFO);
void DGGRQF(int *M, int *P, int *N, double *A, int *LDA, double *TAUA, double *B, int *LDB, double *TAUB, double *WORK, int *LWORK, int *INFO);
void DGGSVD(char *JOBU, char *JOBV, char *JOBQ, int *M, int *N, int *P, int *K, int *L, double *A, int *LDA, double *B, int *LDB, double *ALPHA, double *BETA, double *U, int *LDU, double *V, int *LDV, double *Q, int *LDQ, double *WORK, int *IWORK, int *INFO);
void DGGSVP(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, double *A, int *LDA, double *B, int *LDB, double *TOLA, double *TOLB, int *K, int *L, double *U, int *LDU, double *V, int *LDV, double *Q, int *LDQ, int *IWORK, double *TAU, double *WORK, int *INFO);
void DGTCON(char *NORM, int *N, double *DL, double *D, double *DU, double *DU2, int *IPIV, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DGTRFS(char *TRANS, int *N, int *NRHS, double *DL, double *D, double *DU, double *DLF, double *DF, double *DUF, double *DU2, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DGTSV(int *N, int *NRHS, double *DL, double *D, double *DU, double *B, int *LDB, int *INFO);
void DGTSVX(char *FACT, char *TRANS, int *N, int *NRHS, double *DL, double *D, double *DU, double *DLF, double *DF, double *DUF, double *DU2, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DGTTRF(int *N, double *DL, double *D, double *DU, double *DU2, int *IPIV, int *INFO);
void DGTTRS(char *TRANS, int *N, int *NRHS, double *DL, double *D, double *DU, double *DU2, int *IPIV, double *B, int *LDB, int *INFO);
void DHGEQZ(char *JOB, char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, double *A, int *LDA, double *B, int *LDB, double *ALPHAR, double *ALPHAI, double *BETA, double *Q, int *LDQ, double *Z, int *LDZ, double *WORK, int *LWORK, int *INFO);
void DHSEIN(char *SIDE, char *EIGSRC, char *INITV, int *SELECT, int *N, double *H, int *LDH, double *WR, double *WI, double *VL, int *LDVL, double *VR, int *LDVR, int *MM, int *M, double *WORK, int *IFAILL, int *IFAILR, int *INFO);
void DHSEQR(char *JOB, char *COMPZ, int *N, int *ILO, int *IHI, double *H, int *LDH, double *WR, double *WI, double *Z, int *LDZ, double *WORK, int *LWORK, int *INFO);
void DLAED0(int *ICOMPQ, int *QSIZ, int *N, double *D, double *E, double *Q, int *LDQ, double *QSTORE, int *LDQS, double *WORK, int *IWORK, int *INFO);
void DLAED1(int *N, double *D, double *Q, int *LDQ, int *INDXQ, double *RHO, int *CUTPNT, double *WORK, int *IWORK, int *INFO);
void DLAED2(int *K, int *N, double *D, double *Q, int *LDQ, int *INDXQ, double *RHO, int *CUTPNT, double *Z, double *DLAMDA, double *Q2, int *LDQ2, int *INDXC, double *W, int *INDXP, int *INDX, int *COLTYP, int *INFO);
void DLAED3(int *K, int *KSTART, int *KSTOP, int *N, double *D, double *Q, int *LDQ, double *RHO, int *CUTPNT, double *DLAMDA, double *Q2, int *LDQ2, int *INDXC, int *CTOT, double *W, double *S, int *LDS, int *INFO);
void DLAED4(int *N, int *I, double *D, double *Z, double *DELTA, double *RHO, double *DLAM, int *INFO);
void DLAED5(int *I, double *D, double *Z, double *DELTA, double *RHO, double *DLAM);
void DLAED6(int *KNITER, int *ORGATI, double *RHO, double *D, double *Z, double *FINIT, double *TAU, int *INFO);
void DLAED7(int *ICOMPQ, int *N, int *QSIZ, int *TLVLS, int *CURLVL, int *CURPBM, double *D, double *Q, int *LDQ, int *INDXQ, double *RHO, int *CUTPNT, double *QSTORE, int *QPTR, int *PRMPTR, int *PERM, int *GIVPTR, int *GIVCOL, double *GIVNUM, double *WORK, int *IWORK, int *INFO);
void DLAED8(int *ICOMPQ, int *K, int *N, int *QSIZ, double *D, double *Q, int *LDQ, int *INDXQ, double *RHO, int *CUTPNT, double *Z, double *DLAMDA, double *Q2, int *LDQ2, double *W, int *PERM, int *GIVPTR, int *GIVCOL, double *GIVNUM, int *INDXP, int *INDX, int *INFO);
void DLAED9(int *K, int *KSTART, int *KSTOP, int *N, double *D, double *Q, int *LDQ, double *RHO, double *DLAMDA, double *W, double *S, int *LDS, int *INFO);
void DLAEDA(int *N, int *TLVLS, int *CURLVL, int *CURPBM, int *PRMPTR, int *PERM, int *GIVPTR, int *GIVCOL, double *GIVNUM, double *Q, int *QPTR, double *Z, double *ZTEMP, int *INFO);
void DLAGTF(int *N, double *A, double *LAMBDA, double *B, double *C, double *TOL, double *D, int *IN, int *INFO);
void DLAMRG(int *N1, int *N2, double *A, int *DTRD1, int *DTRD2, int *INDEX);
void DLASQ1(int *N, double *D, double *E, double *WORK, int *INFO);
void DLASQ2(int *M, double *Q, double *E, double *QQ, double *EE, double *EPS, double *TOL2, double *SMALL2, double *SUP, int *KEND, int *INFO);
void DLASQ3(int *N, double *Q, double *E, double *QQ, double *EE, double *SUP, double *SIGMA, int *KEND, int *OFF, int *IPHASE, int *ICONV, double *EPS, double *TOL2, double *SMALL2);
void DLASQ4(int *N, double *Q, double *E, double *TAU, double *SUP);
void DLASRT(char *ID, int *N, double *D, int *INFO);
void DLATZM(char *SIDE, int *M, int *N, double *V, int *INCV, double *TAU, double *C1, double *C2, int *LDC, double *WORK);
void DOPGTR(char *UPLO, int *N, double *AP, double *TAU, double *Q, int *LDQ, double *WORK, int *INFO);
void DOPMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, double *AP, double *TAU, double *C, int *LDC, double *WORK, int *INFO);
void DORG2L(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DORG2R(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DORGBR(char *VECT, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DORGHR(int *N, int *ILO, int *IHI, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DORGL2(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DORGLQ(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DORGQL(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DORGQR(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DORGR2(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *INFO);
void DORGRQ(int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DORGTR(char *UPLO, int *N, double *A, int *LDA, double *TAU, double *WORK, int *LWORK, int *INFO);
void DORM2L(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *INFO);
void DORM2R(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *INFO);
void DORMBR(char *VECT, char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *LWORK, int *INFO);
void DORMHR(char *SIDE, char *TRANS, int *M, int *N, int *ILO, int *IHI, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *LWORK, int *INFO);
void DORML2(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *INFO);
void DORMLQ(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *LWORK, int *INFO);
void DORMQL(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *LWORK, int *INFO);
void DORMQR(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *LWORK, int *INFO);
void DORMR2(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *INFO);
void DORMRQ(char *SIDE, char *TRANS, int *M, int *N, int *K, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *LWORK, int *INFO);
void DORMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, double *A, int *LDA, double *TAU, double *C, int *LDC, double *WORK, int *LWORK, int *INFO);
void DPBCON(char *UPLO, int *N, int *KD, double *AB, int *LDAB, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DPBEQU(char *UPLO, int *N, int *KD, double *AB, int *LDAB, double *S, double *SCOND, double *AMAX, int *INFO);
void DPBRFS(char *UPLO, int *N, int *KD, int *NRHS, double *AB, int *LDAB, double *AFB, int *LDAFB, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DPBSTF(char *UPLO, int *N, int *KD, double *AB, int *LDAB, int *INFO);
void DPBSV(char *UPLO, int *N, int *KD, int *NRHS, double *AB, int *LDAB, double *B, int *LDB, int *INFO);
void DPBSVX(char *FACT, char *UPLO, int *N, int *KD, int *NRHS, double *AB, int *LDAB, double *AFB, int *LDAFB, char *EQUED, double *S, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DPBTF2(char *UPLO, int *N, int *KD, double *AB, int *LDAB, int *INFO);
void DPBTRF(char *UPLO, int *N, int *KD, double *AB, int *LDAB, int *INFO);
void DPBTRS(char *UPLO, int *N, int *KD, int *NRHS, double *AB, int *LDAB, double *B, int *LDB, int *INFO);
void DPOCON(char *UPLO, int *N, double *A, int *LDA, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DPOEQU(int *N, double *A, int *LDA, double *S, double *SCOND, double *AMAX, int *INFO);
void DPORFS(char *UPLO, int *N, int *NRHS, double *A, int *LDA, double *AF, int *LDAF, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DPOSV(char *UPLO, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, int *INFO);
void DPOSVX(char *FACT, char *UPLO, int *N, int *NRHS, double *A, int *LDA, double *AF, int *LDAF, char *EQUED, double *S, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DPOTF2(char *UPLO, int *N, double *A, int *LDA, int *INFO);
void DPOTRF(char *UPLO, int *N, double *A, int *LDA, int *INFO);
void DPOTRI(char *UPLO, int *N, double *A, int *LDA, int *INFO);
void DPOTRS(char *UPLO, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, int *INFO);
void DPPCON(char *UPLO, int *N, double *AP, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DPPEQU(char *UPLO, int *N, double *AP, double *S, double *SCOND, double *AMAX, int *INFO);
void DPPRFS(char *UPLO, int *N, int *NRHS, double *AP, double *AFP, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DPPSV(char *UPLO, int *N, int *NRHS, double *AP, double *B, int *LDB, int *INFO);
void DPPSVX(char *FACT, char *UPLO, int *N, int *NRHS, double *AP, double *AFP, char *EQUED, double *S, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DPPTRF(char *UPLO, int *N, double *AP, int *INFO);
void DPPTRI(char *UPLO, int *N, double *AP, int *INFO);
void DPPTRS(char *UPLO, int *N, int *NRHS, double *AP, double *B, int *LDB, int *INFO);
void DPTCON(int *N, double *D, double *E, double *ANORM, double *RCOND, double *WORK, int *INFO);
void DPTEQR(char *COMPZ, int *N, double *D, double *E, double *Z, int *LDZ, double *WORK, int *INFO);
void DPTRFS(int *N, int *NRHS, double *D, double *E, double *DF, double *EF, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *INFO);
void DPTSV(int *N, int *NRHS, double *D, double *E, double *B, int *LDB, int *INFO);
void DPTSVX(char *FACT, int *N, int *NRHS, double *D, double *E, double *DF, double *EF, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *INFO);
void DPTTRF(int *N, double *D, double *E, int *INFO);
void DPTTRS(int *N, int *NRHS, double *D, double *E, double *B, int *LDB, int *INFO);
void DSBEV(char *JOBZ, char *UPLO, int *N, int *KD, double *AB, int *LDAB, double *W, double *Z, int *LDZ, double *WORK, int *INFO);
void DSBEVD(char *JOBZ, char *UPLO, int *N, int *KD, double *AB, int *LDAB, double *W, double *Z, int *LDZ, double *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void DSBEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, int *KD, double *AB, int *LDAB, double *Q, int *LDQ, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, int *M, double *W, double *Z, int *LDZ, double *WORK, int *IWORK, int *IFAIL, int *INFO);
void DSBGST(char *VECT, char *UPLO, int *N, int *KA, int *KB, double *AB, int *LDAB, double *BB, int *LDBB, double *X, int *LDX, double *WORK, int *INFO);
void DSBGV(char *JOBZ, char *UPLO, int *N, int *KA, int *KB, double *AB, int *LDAB, double *BB, int *LDBB, double *W, double *Z, int *LDZ, double *WORK, int *INFO);
void DSBTRD(char *VECT, char *UPLO, int *N, int *KD, double *AB, int *LDAB, double *D, double *E, double *Q, int *LDQ, double *WORK, int *INFO);
void DSPCON(char *UPLO, int *N, double *AP, int *IPIV, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DSPEV(char *JOBZ, char *UPLO, int *N, double *AP, double *W, double *Z, int *LDZ, double *WORK, int *INFO);
void DSPEVD(char *JOBZ, char *UPLO, int *N, double *AP, double *W, double *Z, int *LDZ, double *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void DSPEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, double *AP, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, int *M, double *W, double *Z, int *LDZ, double *WORK, int *IWORK, int *IFAIL, int *INFO);
void DSPGST(int *ITYPE, char *UPLO, int *N, double *AP, double *BP, int *INFO);
void DSPGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, double *AP, double *BP, double *W, double *Z, int *LDZ, double *WORK, int *INFO);
void DSPRFS(char *UPLO, int *N, int *NRHS, double *AP, double *AFP, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DSPSV(char *UPLO, int *N, int *NRHS, double *AP, int *IPIV, double *B, int *LDB, int *INFO);
void DSPSVX(char *FACT, char *UPLO, int *N, int *NRHS, double *AP, double *AFP, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DSPTRD(char *UPLO, int *N, double *AP, double *D, double *E, double *TAU, int *INFO);
void DSPTRF(char *UPLO, int *N, double *AP, int *IPIV, int *INFO);
void DSPTRI(char *UPLO, int *N, double *AP, int *IPIV, double *WORK, int *INFO);
void DSPTRS(char *UPLO, int *N, int *NRHS, double *AP, int *IPIV, double *B, int *LDB, int *INFO);
void DSTEBZ(char *RANGE, char *ORDER, int *N, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, double *D, double *E, int *M, int *NSPLIT, double *W, int *IBLOCK, int *ISPLIT, double *WORK, int *IWORK, int *INFO);
void DSTEDC(char *COMPZ, int *N, double *D, double *E, double *Z, int *LDZ, double *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void DSTEIN(int *N, double *D, double *E, int *M, double *W, int *IBLOCK, int *ISPLIT, double *Z, int *LDZ, double *WORK, int *IWORK, int *IFAIL, int *INFO);
void DSTEQR(char *COMPZ, int *N, double *D, double *E, double *Z, int *LDZ, double *WORK, int *INFO);
void DSTERF(int *N, double *D, double *E, int *INFO);
void DSTEV(char *JOBZ, int *N, double *D, double *E, double *Z, int *LDZ, double *WORK, int *INFO);
void DSTEVD(char *JOBZ, int *N, double *D, double *E, double *Z, int *LDZ, double *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void DSTEVX(char *JOBZ, char *RANGE, int *N, double *D, double *E, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, int *M, double *W, double *Z, int *LDZ, double *WORK, int *IWORK, int *IFAIL, int *INFO);
void DSYCON(char *UPLO, int *N, double *A, int *LDA, int *IPIV, double *ANORM, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DSYEV(char *JOBZ, char *UPLO, int *N, double *A, int *LDA, double *W, double *WORK, int *LWORK, int *INFO);
void DSYEVD(char *JOBZ, char *UPLO, int *N, double *A, int *LDA, double *W, double *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void DSYEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, double *A, int *LDA, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, int *M, double *W, double *Z, int *LDZ, double *WORK, int *LWORK, int *IWORK, int *IFAIL, int *INFO);
void DSYGS2(int *ITYPE, char *UPLO, int *N, double *A, int *LDA, double *B, int *LDB, int *INFO);
void DSYGST(int *ITYPE, char *UPLO, int *N, double *A, int *LDA, double *B, int *LDB, int *INFO);
void DSYGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, double *A, int *LDA, double *B, int *LDB, double *W, double *WORK, int *LWORK, int *INFO);
void DSYRFS(char *UPLO, int *N, int *NRHS, double *A, int *LDA, double *AF, int *LDAF, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DSYSV(char *UPLO, int *N, int *NRHS, double *A, int *LDA, int *IPIV, double *B, int *LDB, double *WORK, int *LWORK, int *INFO);
void DSYSVX(char *FACT, char *UPLO, int *N, int *NRHS, double *A, int *LDA, double *AF, int *LDAF, int *IPIV, double *B, int *LDB, double *X, int *LDX, double *RCOND, double *FERR, double *BERR, double *WORK, int *LWORK, int *IWORK, int *INFO);
void DSYTD2(char *UPLO, int *N, double *A, int *LDA, double *D, double *E, double *TAU, int *INFO);
void DSYTF2(char *UPLO, int *N, double *A, int *LDA, int *IPIV, int *INFO);
void DSYTRD(char *UPLO, int *N, double *A, int *LDA, double *D, double *E, double *TAU, double *WORK, int *LWORK, int *INFO);
void DSYTRF(char *UPLO, int *N, double *A, int *LDA, int *IPIV, double *WORK, int *LWORK, int *INFO);
void DSYTRI(char *UPLO, int *N, double *A, int *LDA, int *IPIV, double *WORK, int *INFO);
void DSYTRS(char *UPLO, int *N, int *NRHS, double *A, int *LDA, int *IPIV, double *B, int *LDB, int *INFO);
void DTBCON(char *NORM, char *UPLO, char *DIAG, int *N, int *KD, double *AB, int *LDAB, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DTBRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, double *AB, int *LDAB, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DTBTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, double *AB, int *LDAB, double *B, int *LDB, int *INFO);
void DTGEVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, double *A, int *LDA, double *B, int *LDB, double *VL, int *LDVL, double *VR, int *LDVR, int *MM, int *M, double *WORK, int *INFO);
void DTGSJA(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, int *K, int *L, double *A, int *LDA, double *B, int *LDB, double *TOLA, double *TOLB, double *ALPHA, double *BETA, double *U, int *LDU, double *V, int *LDV, double *Q, int *LDQ, double *WORK, int *NCYCLE, int *INFO);
void DTPCON(char *NORM, char *UPLO, char *DIAG, int *N, double *AP, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DTPRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, double *AP, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DTPTRI(char *UPLO, char *DIAG, int *N, double *AP, int *INFO);
void DTPTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, double *AP, double *B, int *LDB, int *INFO);
void DTRCON(char *NORM, char *UPLO, char *DIAG, int *N, double *A, int *LDA, double *RCOND, double *WORK, int *IWORK, int *INFO);
void DTREVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, double *T, int *LDT, double *VL, int *LDVL, double *VR, int *LDVR, int *MM, int *M, double *WORK, int *INFO);
void DTREXC(char *COMPQ, int *N, double *T, int *LDT, double *Q, int *LDQ, int *IFST, int *ILST, double *WORK, int *INFO);
void DTRRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, double *X, int *LDX, double *FERR, double *BERR, double *WORK, int *IWORK, int *INFO);
void DTRSEN(char *JOB, char *COMPQ, int *SELECT, int *N, double *T, int *LDT, double *Q, int *LDQ, double *WR, double *WI, int *M, double *S, double *SEP, double *WORK, int *LWORK, int *IWORK, int *LIWORK, int *INFO);
void DTRSNA(char *JOB, char *HOWMNY, int *SELECT, int *N, double *T, int *LDT, double *VL, int *LDVL, double *VR, int *LDVR, double *S, double *SEP, int *MM, int *M, double *WORK, int *LDWORK, int *IWORK, int *INFO);
void DTRSYL(char *TRANA, char *TRANB, int *ISGN, int *M, int *N, double *A, int *LDA, double *B, int *LDB, double *C, int *LDC, double *SCALE, int *INFO);
void DTRTI2(char *UPLO, char *DIAG, int *N, double *A, int *LDA, int *INFO);
void DTRTRI(char *UPLO, char *DIAG, int *N, double *A, int *LDA, int *INFO);
void DTRTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, double *A, int *LDA, double *B, int *LDB, int *INFO);
void DTZRQF(int *M, int *N, double *A, int *LDA, double *TAU, int *INFO);
void ZBDSQR(char *UPLO, int *N, int *NCVT, int *NRU, int *NCC, double *D, double *E, MKL_Complex16 *VT, int *LDVT, MKL_Complex16 *U, int *LDU, MKL_Complex16 *C, int *LDC, double *RWORK, int *INFO);
void ZDROT(int *N, MKL_Complex16 *CX, int *INCX, MKL_Complex16 *CY, int *INCY, double *C, double *S);
void ZGBBRD(char *VECT, int *M, int *N, int *NCC, int *KL, int *KU, MKL_Complex16 *AB, int *LDAB, double *D, double *E, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *PT, int *LDPT, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGBCON(char *NORM, int *N, int *KL, int *KU, MKL_Complex16 *AB, int *LDAB, int *IPIV, double *ANORM, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGBEQU(int *M, int *N, int *KL, int *KU, MKL_Complex16 *AB, int *LDAB, double *R, double *C, double *ROWCND, double *COLCND, double *AMAX, int *INFO);
void ZGBRFS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *AFB, int *LDAFB, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGBSV(int *N, int *KL, int *KU, int *NRHS, MKL_Complex16 *AB, int *LDAB, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZGBSVX(char *FACT, char *TRANS, int *N, int *KL, int *KU, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *AFB, int *LDAFB, int *IPIV, char *EQUED, double *R, double *C, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGBTF2(int *M, int *N, int *KL, int *KU, MKL_Complex16 *AB, int *LDAB, int *IPIV, int *INFO);
void ZGBTRF(int *M, int *N, int *KL, int *KU, MKL_Complex16 *AB, int *LDAB, int *IPIV, int *INFO);
void ZGBTRS(char *TRANS, int *N, int *KL, int *KU, int *NRHS, MKL_Complex16 *AB, int *LDAB, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZGEBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, double *SCALE, int *M, MKL_Complex16 *V, int *LDV, int *INFO);
void ZGEBAL(char *JOB, int *N, MKL_Complex16 *A, int *LDA, int *ILO, int *IHI, double *SCALE, int *INFO);
void ZGEBD2(int *M, int *N, MKL_Complex16 *A, int *LDA, double *D, double *E, MKL_Complex16 *TAUQ, MKL_Complex16 *TAUP, MKL_Complex16 *WORK, int *INFO);
void ZGEBRD(int *M, int *N, MKL_Complex16 *A, int *LDA, double *D, double *E, MKL_Complex16 *TAUQ, MKL_Complex16 *TAUP, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGECON(char *NORM, int *N, MKL_Complex16 *A, int *LDA, double *ANORM, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGEEQU(int *M, int *N, MKL_Complex16 *A, int *LDA, double *R, double *C, double *ROWCND, double *COLCND, double *AMAX, int *INFO);
void ZGEES(char *JOBVS, char *SORT, int *SELECT, int *N, MKL_Complex16 *A, int *LDA, int *SDIM, MKL_Complex16 *W, MKL_Complex16 *VS, int *LDVS, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *BWORK, int *INFO);
void ZGEESX(char *JOBVS, char *SORT, int *SELECT, char *SENSE, int *N, MKL_Complex16 *A, int *LDA, int *SDIM, MKL_Complex16 *W, MKL_Complex16 *VS, int *LDVS, double *RCONDE, double *RCONDV, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *BWORK, int *INFO);
void ZGEEV(char *JOBVL, char *JOBVR, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *W, MKL_Complex16 *VL, int *LDVL, MKL_Complex16 *VR, int *LDVR, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZGEEVX(char *BALANC, char *JOBVL, char *JOBVR, char *SENSE, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *W, MKL_Complex16 *VL, int *LDVL, MKL_Complex16 *VR, int *LDVR, int *ILO, int *IHI, double *SCALE, double *ABNRM, double *RCONDE, double *RCONDV, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZGEGS(char *JOBVSL, char *JOBVSR, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *ALPHA, MKL_Complex16 *BETA, MKL_Complex16 *VSL, int *LDVSL, MKL_Complex16 *VSR, int *LDVSR, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZGEGV(char *JOBVL, char *JOBVR, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *ALPHA, MKL_Complex16 *BETA, MKL_Complex16 *VL, int *LDVL, MKL_Complex16 *VR, int *LDVR, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZGEHD2(int *N, int *ILO, int *IHI, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZGEHRD(int *N, int *ILO, int *IHI, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGELQ2(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZGELQF(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGELS(char *TRANS, int *M, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGELSS(int *M, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, double *S, double *RCOND, int *RANK, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZGELSD(int *M, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, double *S, double *RCOND, int *RANK, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *IWORK, int *INFO);
void ZGELSX(int *M, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, int *JPVT, double *RCOND, int *RANK, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGEQL2(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZGEQLF(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGEQR2(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZGEQRF(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGERFS(char *TRANS, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGERQ2(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZGERQF(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGESV(int *N, int *NRHS, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZGESVD(char *JOBU, char *JOBVT, int *M, int *N, MKL_Complex16 *A, int *LDA, double *S, MKL_Complex16 *U, int *LDU, MKL_Complex16 *VT, int *LDVT, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZGESVX(char *FACT, char *TRANS, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, int *IPIV, char *EQUED, double *R, double *C, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGETF2(int *M, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, int *INFO);
void ZGETRF(int *M, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, int *INFO);
void ZGETRI(int *N, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGETRS(char *TRANS, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZGGBAK(char *JOB, char *SIDE, int *N, int *ILO, int *IHI, double *LSCALE, double *RSCALE, int *M, MKL_Complex16 *V, int *LDV, int *INFO);
void ZGGBAL(char *JOB, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, int *ILO, int *IHI, double *LSCALE, double *RSCALE, double *WORK, int *INFO);
void ZGGGLM(int *N, int *M, int *P, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *D, MKL_Complex16 *X, MKL_Complex16 *Y, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGGHRD(char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *Z, int *LDZ, int *INFO);
void ZGGLSE(int *M, int *N, int *P, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *C, MKL_Complex16 *D, MKL_Complex16 *X, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGGQRF(int *N, int *M, int *P, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAUA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *TAUB, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGGRQF(int *M, int *P, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAUA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *TAUB, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZGGSVD(char *JOBU, char *JOBV, char *JOBQ, int *M, int *N, int *P, int *K, int *L, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, double *ALPHA, double *BETA, MKL_Complex16 *U, int *LDU, MKL_Complex16 *V, int *LDV, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *WORK, double *RWORK, int *IWORK, int *INFO);
void ZGGSVP(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, double *TOLA, double *TOLB, int *K, int *L, MKL_Complex16 *U, int *LDU, MKL_Complex16 *V, int *LDV, MKL_Complex16 *Q, int *LDQ, int *IWORK, double *RWORK, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZGTCON(char *NORM, int *N, MKL_Complex16 *DL, MKL_Complex16 *D, MKL_Complex16 *DU, MKL_Complex16 *DU2, int *IPIV, double *ANORM, double *RCOND, MKL_Complex16 *WORK, int *INFO);
void ZGTRFS(char *TRANS, int *N, int *NRHS, MKL_Complex16 *DL, MKL_Complex16 *D, MKL_Complex16 *DU, MKL_Complex16 *DLF, MKL_Complex16 *DF, MKL_Complex16 *DUF, MKL_Complex16 *DU2, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGTSV(int *N, int *NRHS, MKL_Complex16 *DL, MKL_Complex16 *D, MKL_Complex16 *DU, MKL_Complex16 *B, int *LDB, int *INFO);
void ZGTSVX(char *FACT, char *TRANS, int *N, int *NRHS, MKL_Complex16 *DL, MKL_Complex16 *D, MKL_Complex16 *DU, MKL_Complex16 *DLF, MKL_Complex16 *DF, MKL_Complex16 *DUF, MKL_Complex16 *DU2, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZGTTRF(int *N, MKL_Complex16 *DL, MKL_Complex16 *D, MKL_Complex16 *DU, MKL_Complex16 *DU2, int *IPIV, int *INFO);
void ZGTTRS(char *TRANS, int *N, int *NRHS, MKL_Complex16 *DL, MKL_Complex16 *D, MKL_Complex16 *DU, MKL_Complex16 *DU2, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZHBEV(char *JOBZ, char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHBEVD(char *JOBZ, char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void ZHBEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *Q, int *LDQ, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, int *M, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, double *RWORK, int *IWORK, int *IFAIL, int *INFO);
void ZHBGST(char *VECT, char *UPLO, int *N, int *KA, int *KB, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *BB, int *LDBB, MKL_Complex16 *X, int *LDX, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHBGV(char *JOBZ, char *UPLO, int *N, int *KA, int *KB, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *BB, int *LDBB, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHBTRD(char *VECT, char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, double *D, double *E, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *WORK, int *INFO);
void ZHECON(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, double *ANORM, double *RCOND, MKL_Complex16 *WORK, int *INFO);
void ZHEEV(char *JOBZ, char *UPLO, int *N, MKL_Complex16 *A, int *LDA, double *W, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZHEEVD(char *JOBZ, char *UPLO, int *N, MKL_Complex16 *A, int *LDA, double *W, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void ZHEEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, MKL_Complex16 *A, int *LDA, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, int *M, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *IWORK, int *IFAIL, int *INFO);
void ZHEGS2(int *ITYPE, char *UPLO, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, int *INFO);
void ZHEGST(int *ITYPE, char *UPLO, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, int *INFO);
void ZHEGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, double *W, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZHERFS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHESV(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZHESVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZHETD2(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, double *D, double *E, MKL_Complex16 *TAU, int *INFO);
void ZHETF2(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, int *INFO);
void ZHETRD(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, double *D, double *E, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZHETRF(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZHETRI(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *WORK, int *INFO);
void ZHETRS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZHGEQZ(char *JOB, char *COMPQ, char *COMPZ, int *N, int *ILO, int *IHI, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *ALPHA, MKL_Complex16 *BETA, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZHPCON(char *UPLO, int *N, MKL_Complex16 *AP, int *IPIV, double *ANORM, double *RCOND, MKL_Complex16 *WORK, int *INFO);
void ZHPEV(char *JOBZ, char *UPLO, int *N, MKL_Complex16 *AP, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHPEVD(char *JOBZ, char *UPLO, int *N, MKL_Complex16 *AP, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void ZHPEVX(char *JOBZ, char *RANGE, char *UPLO, int *N, MKL_Complex16 *AP, double *VL, double *VU, int *IL, int *IU, double *ABSTOL, int *M, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, double *RWORK, int *IWORK, int *IFAIL, int *INFO);
void ZHPGST(int *ITYPE, char *UPLO, int *N, MKL_Complex16 *AP, MKL_Complex16 *BP, int *INFO);
void ZHPGV(int *ITYPE, char *JOBZ, char *UPLO, int *N, MKL_Complex16 *AP, MKL_Complex16 *BP, double *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHPRFS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *AFP, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHPSV(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZHPSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *AFP, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZHPTRD(char *UPLO, int *N, MKL_Complex16 *AP, double *D, double *E, MKL_Complex16 *TAU, int *INFO);
void ZHPTRF(char *UPLO, int *N, MKL_Complex16 *AP, int *IPIV, int *INFO);
void ZHPTRI(char *UPLO, int *N, MKL_Complex16 *AP, int *IPIV, MKL_Complex16 *WORK, int *INFO);
void ZHPTRS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZHSEIN(char *SIDE, char *EIGSRC, char *INITV, int *SELECT, int *N, MKL_Complex16 *H, int *LDH, MKL_Complex16 *W, MKL_Complex16 *VL, int *LDVL, MKL_Complex16 *VR, int *LDVR, int *MM, int *M, MKL_Complex16 *WORK, double *RWORK, int *IFAILL, int *IFAILR, int *INFO);
void ZHSEQR(char *JOB, char *COMPZ, int *N, int *ILO, int *IHI, MKL_Complex16 *H, int *LDH, MKL_Complex16 *W, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZLAED0(int *QSIZ, int *N, double *D, double *E, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *QSTORE, int *LDQS, double *RWORK, int *IWORK, int *INFO);
void ZLAED7(int *N, int *CUTPNT, int *QSIZ, int *TLVLS, int *CURLVL, int *CURPBM, double *D, MKL_Complex16 *Q, int *LDQ, double *RHO, int *INDXQ, double *QSTORE, int *QPTR, int *PRMPTR, int *PERM, int *GIVPTR, int *GIVCOL, double *GIVNUM, MKL_Complex16 *WORK, double *RWORK, int *IWORK, int *INFO);
void ZLAED8(int *K, int *N, int *QSIZ, MKL_Complex16 *Q, int *LDQ, double *D, double *RHO, int *CUTPNT, double *Z, double *DLAMDA, MKL_Complex16 *Q2, int *LDQ2, double *W, int *INDXP, int *INDX, int *INDXQ, int *PERM, int *GIVPTR, int *GIVCOL, double *GIVNUM, int *INFO);
void ZLATZM(char *SIDE, int *M, int *N, MKL_Complex16 *V, int *INCV, MKL_Complex16 *TAU, MKL_Complex16 *C1, MKL_Complex16 *C2, int *LDC, MKL_Complex16 *WORK);
void ZPBCON(char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, double *ANORM, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPBEQU(char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, double *S, double *SCOND, double *AMAX, int *INFO);
void ZPBRFS(char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *AFB, int *LDAFB, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPBSTF(char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, int *INFO);
void ZPBSV(char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *B, int *LDB, int *INFO);
void ZPBSVX(char *FACT, char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *AFB, int *LDAFB, char *EQUED, double *S, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPBTF2(char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, int *INFO);
void ZPBTRF(char *UPLO, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, int *INFO);
void ZPBTRS(char *UPLO, int *N, int *KD, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *B, int *LDB, int *INFO);
void ZPOCON(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, double *ANORM, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPOEQU(int *N, MKL_Complex16 *A, int *LDA, double *S, double *SCOND, double *AMAX, int *INFO);
void ZPORFS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPOSV(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, int *INFO);
void ZPOSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, char *EQUED, double *S, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPOTF2(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *INFO);
void ZPOTRF(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *INFO);
void ZPOTRI(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *INFO);
void ZPOTRS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, int *INFO);
void ZPPCON(char *UPLO, int *N, MKL_Complex16 *AP, double *ANORM, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPPEQU(char *UPLO, int *N, MKL_Complex16 *AP, double *S, double *SCOND, double *AMAX, int *INFO);
void ZPPRFS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *AFP, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPPSV(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *B, int *LDB, int *INFO);
void ZPPSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *AFP, char *EQUED, double *S, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPPTRF(char *UPLO, int *N, MKL_Complex16 *AP, int *INFO);
void ZPPTRI(char *UPLO, int *N, MKL_Complex16 *AP, int *INFO);
void ZPPTRS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *B, int *LDB, int *INFO);
void ZPTCON(int *N, double *D, MKL_Complex16 *E, double *ANORM, double *RCOND, double *RWORK, int *INFO);
void ZPTEQR(char *COMPZ, int *N, double *D, double *E, MKL_Complex16 *Z, int *LDZ, double *WORK, int *INFO);
void ZPTRFS(char *UPLO, int *N, int *NRHS, double *D, MKL_Complex16 *E, double *DF, MKL_Complex16 *EF, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPTSV(int *N, int *NRHS, double *D, MKL_Complex16 *E, MKL_Complex16 *B, int *LDB, int *INFO);
void ZPTSVX(char *FACT, int *N, int *NRHS, double *D, MKL_Complex16 *E, double *DF, MKL_Complex16 *EF, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZPTTRF(int *N, double *D, MKL_Complex16 *E, int *INFO);
void ZPTTRS(char *UPLO, int *N, int *NRHS, double *D, MKL_Complex16 *E, MKL_Complex16 *B, int *LDB, int *INFO);
void ZSPCON(char *UPLO, int *N, MKL_Complex16 *AP, int *IPIV, double *ANORM, double *RCOND, MKL_Complex16 *WORK, int *INFO);
void ZSPRFS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *AFP, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZSPSV(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZSPSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *AFP, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZSPTRF(char *UPLO, int *N, MKL_Complex16 *AP, int *IPIV, int *INFO);
void ZSPTRI(char *UPLO, int *N, MKL_Complex16 *AP, int *IPIV, MKL_Complex16 *WORK, int *INFO);
void ZSPTRS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *AP, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZSTEDC(char *COMPZ, int *N, double *D, double *E, MKL_Complex16 *Z, int *LDZ, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *LRWORK, int *IWORK, int *LIWORK, int *INFO);
void ZSTEIN(int *N, double *D, double *E, int *M, double *W, int *IBLOCK, int *ISPLIT, MKL_Complex16 *Z, int *LDZ, double *WORK, int *IWORK, int *IFAIL, int *INFO);
void ZSTEQR(char *COMPZ, int *N, double *D, double *E, MKL_Complex16 *Z, int *LDZ, double *WORK, int *INFO);
void ZSYCON(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, double *ANORM, double *RCOND, MKL_Complex16 *WORK, int *INFO);
void ZSYRFS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZSYSV(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZSYSVX(char *FACT, char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *AF, int *LDAF, int *IPIV, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *RCOND, double *FERR, double *BERR, MKL_Complex16 *WORK, int *LWORK, double *RWORK, int *INFO);
void ZSYTF2(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, int *INFO);
void ZSYTRF(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZSYTRI(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *WORK, int *INFO);
void ZSYTRS(char *UPLO, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, int *IPIV, MKL_Complex16 *B, int *LDB, int *INFO);
void ZTBCON(char *NORM, char *UPLO, char *DIAG, int *N, int *KD, MKL_Complex16 *AB, int *LDAB, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTBRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTBTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *KD, int *NRHS, MKL_Complex16 *AB, int *LDAB, MKL_Complex16 *B, int *LDB, int *INFO);
void ZTGEVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *VL, int *LDVL, MKL_Complex16 *VR, int *LDVR, int *MM, int *M, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTGSJA(char *JOBU, char *JOBV, char *JOBQ, int *M, int *P, int *N, int *K, int *L, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, double *TOLA, double *TOLB, double *ALPHA, double *BETA, MKL_Complex16 *U, int *LDU, MKL_Complex16 *V, int *LDV, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *WORK, int *NCYCLE, int *INFO);
void ZTPCON(char *NORM, char *UPLO, char *DIAG, int *N, MKL_Complex16 *AP, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTPRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTPTRI(char *UPLO, char *DIAG, int *N, MKL_Complex16 *AP, int *INFO);
void ZTPTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex16 *AP, MKL_Complex16 *B, int *LDB, int *INFO);
void ZTRCON(char *NORM, char *UPLO, char *DIAG, int *N, MKL_Complex16 *A, int *LDA, double *RCOND, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTREVC(char *SIDE, char *HOWMNY, int *SELECT, int *N, MKL_Complex16 *T, int *LDT, MKL_Complex16 *VL, int *LDVL, MKL_Complex16 *VR, int *LDVR, int *MM, int *M, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTREXC(char *COMPQ, int *N, MKL_Complex16 *T, int *LDT, MKL_Complex16 *Q, int *LDQ, int *IFST, int *ILST, int *INFO);
void ZTRRFS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *X, int *LDX, double *FERR, double *BERR, MKL_Complex16 *WORK, double *RWORK, int *INFO);
void ZTRSEN(char *JOB, char *COMPQ, int *SELECT, int *N, MKL_Complex16 *T, int *LDT, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *W, int *M, double *S, double *SEP, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZTRSNA(char *JOB, char *HOWMNY, int *SELECT, int *N, MKL_Complex16 *T, int *LDT, MKL_Complex16 *VL, int *LDVL, MKL_Complex16 *VR, int *LDVR, double *S, double *SEP, int *MM, int *M, MKL_Complex16 *WORK, int *LDWORK, double *RWORK, int *INFO);
void ZTRSYL(char *TRANA, char *TRANB, int *ISGN, int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, MKL_Complex16 *C, int *LDC, double *SCALE, int *INFO);
void ZTRTI2(char *UPLO, char *DIAG, int *N, MKL_Complex16 *A, int *LDA, int *INFO);
void ZTRTRI(char *UPLO, char *DIAG, int *N, MKL_Complex16 *A, int *LDA, int *INFO);
void ZTRTRS(char *UPLO, char *TRANS, char *DIAG, int *N, int *NRHS, MKL_Complex16 *A, int *LDA, MKL_Complex16 *B, int *LDB, int *INFO);
void ZTZRQF(int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, int *INFO);
void ZUNG2L(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZUNG2R(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZUNGBR(char *VECT, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNGHR(int *N, int *ILO, int *IHI, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNGL2(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZUNGLQ(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNGQL(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNGQR(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNGR2(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *INFO);
void ZUNGRQ(int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNGTR(char *UPLO, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNM2L(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *INFO);
void ZUNM2R(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *INFO);
void ZUNMBR(char *VECT, char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNMHR(char *SIDE, char *TRANS, int *M, int *N, int *ILO, int *IHI, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNML2(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *INFO);
void ZUNMLQ(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNMQL(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNMQR(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNMR2(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *INFO);
void ZUNMRQ(char *SIDE, char *TRANS, int *M, int *N, int *K, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUNMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, MKL_Complex16 *A, int *LDA, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *LWORK, int *INFO);
void ZUPGTR(char *UPLO, int *N, MKL_Complex16 *AP, MKL_Complex16 *TAU, MKL_Complex16 *Q, int *LDQ, MKL_Complex16 *WORK, int *INFO);
void ZUPMTR(char *SIDE, char *UPLO, char *TRANS, int *M, int *N, MKL_Complex16 *AP, MKL_Complex16 *TAU, MKL_Complex16 *C, int *LDC, MKL_Complex16 *WORK, int *INFO);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _MKL_LAPACK_D_H_ */
